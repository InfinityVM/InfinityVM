FROM us-docker.pkg.dev/ethos-artifacts/docker/risc0-builder:latest as chef
WORKDIR /app

# Prepare Cargo Chef
FROM chef as planner
COPY rust /app/rust
COPY proto /app/proto
WORKDIR /app/rust
ENV LIBCLANG_PATH=/usr/lib/aarch64-linux-gnu
RUN cargo chef prepare --recipe-path recipe.json

# Cache dependencies
FROM chef as cacher
WORKDIR /app/rust
COPY --from=planner /app/rust/recipe.json recipe.json
ENV LIBCLANG_PATH=/usr/lib/aarch64-linux-gnu
RUN cargo chef cook --release --recipe-path recipe.json

# Build the application
FROM chef AS builder
COPY --from=cacher /app/target /app/target
COPY rust /app/rust
COPY proto /app/proto
ENV LIBCLANG_PATH=/usr/lib/aarch64-linux-gnu
RUN cargo build --release --locked --manifest-path /app/rust/Cargo.toml

# Final image with only the necessary runtime environment
FROM debian:bookworm-slim
RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates && \
    rm -rf /var/lib/apt/lists/*
COPY --from=builder /app/target/release/executor /usr/local/bin/executor
CMD ["executor", "version"]
