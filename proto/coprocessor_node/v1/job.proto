syntax = "proto3";
package coprocessor_node.v1;

import "coprocessor_node/v1/zkvm_executor.proto";

option go_package = "github.com/ethos-works/infinityvm/coprocessor_node/pkg/types";

// JobStatusType defines the status of a submitted coprocessor job.
enum JobStatusType {
  JOB_STATUS_TYPE_UNSPECIFIED = 0;
  JOB_STATUS_TYPE_PENDING = 1;
  JOB_STATUS_TYPE_DONE = 2;
  JOB_STATUS_TYPE_FAILED = 3;
}

// JobStatus represents the status of a job including an optional failure reason.
message JobStatus {
  // The status type of the job.
  JobStatusType status = 1;
  // The optional reason for failure.
  optional string failure_reason = 2;
  // The optional number of retries
  uint32 retries = 3;
}

// Job represents a program to be executed by the coprocessor with specific
// inputs.
message Job {
  // The job ID generated by the InfinityVM chain.
  bytes id = 1;
  // Nonce of the job request for a given consumer contract
  uint64 nonce = 2;
  // The ZK program verification key
  bytes program_verifying_key = 3;
  // Program execution input
  bytes input = 4;
  // The address of the contract to execute a callback with a result with
  bytes contract_address = 5;
  // CPU cycle limit for job execution
  uint64 max_cycles = 6;
  // Signature on the offchain job request
  bytes request_signature = 7;
  // The result of job execution
  bytes result = 8;
  // The address of the operator that executed the job
  bytes zkvm_operator_address = 9;
  // The signature of the operator that executed the job
  bytes zkvm_operator_signature = 10;
  // The status of the job.
  JobStatus status = 11;
}
