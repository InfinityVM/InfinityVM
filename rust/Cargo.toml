[workspace.package]
version = "0.0.1"
edition = "2021"
rust-version = "1.79"

[workspace]
members = [
	"crates/executor",
	"crates/zkvm",
	"test",
	"programs/risc0/vapenation/methods",
	# "programs/risc0/vapenation/core"
]

# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rustdoc.all = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
branches_sharing_code = "warn"
clear_with_drain = "warn"
derive_partial_eq_without_eq = "warn"
empty_line_after_outer_attr = "warn"
equatable_if_let = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_with_drain = "warn"
large_stack_frames = "warn"
manual_clamp = "warn"
mutex_integer = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
uninhabited_references = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
useless_let_if_seq = "warn"
use_self = "warn"
missing_const_for_fn = "warn"
empty_line_after_doc_comments = "warn"
iter_on_single_items = "warn"
match_same_arms = "warn"
doc_markdown = "warn"
unnecessary_struct_initialization = "warn"
string_lit_as_bytes = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
type_repetition_in_bounds = "warn"
flat_map_option = "warn"
manual_assert = "warn"
manual_string_new = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
zero_sized_map_values = "warn"
single_char_pattern = "warn"
needless_continue = "warn"
enum_glob_use = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
collection_is_never_read = "allow"
debug_assert_with_mut_call = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"

[workspace.dependencies]
# a
anyhow = "*"
alloy = { version = "*", features = ["network", "signer-local", "signer-keystore", "rlp"]}
alloy-signer-local = { version = "*" }
alloy-rlp = { version = "*" }
alloy-sol-types = { version = "*" }

# b
# c
clap = { version = "*", features = ["derive"] }

# d
# e
eyre = { version = "*" }

# f
futures = { version = "*" }

# g
# h
hex = { version = "*" }
home = { version = "*" }

# i
# j
# k
k256 = { version = "*" }
kvdb = { version = "*" }
kvdb-rocksdb = { version = "*" }
kvdb-memorydb = { version = "*" }

# l
# m
# n
# o
# p
prost = "*"

# q
# r
risc0-zkvm = { version = "1.0.1", features = ["prove"] }
risc0-build = { version = "1.0.1" }
risc0-binfmt = "*"
rand_core = { version = "*" }
rand = { version = "*" }
reth-libmdbx = { git = "https://github.com/paradigmxyz/reth.git", rev = "d8b104f", features = ["return-borrowed", "default"] }
reth-db = { git = "https://github.com/paradigmxyz/reth.git", rev = "d8b104f" }
reth-db-api = { git = "https://github.com/paradigmxyz/reth.git", rev = "d8b104f" }

# s
serde = { version = "1.0", features = ["derive"] }
sha2 = { version = "*" }

# t
tonic-build = { version = "0.12"}
tonic = { version = "0.12", features = ["transport"], default-features = false }
tonic-reflection = { version = "0.12", features = ["server"], default-features = false }
tokio = { version = "*", features = ["rt-multi-thread", "macros", "sync", "time"] }
thiserror = "*"
tempfile = "*"

# u
# v
# w
# x
# y
# z
