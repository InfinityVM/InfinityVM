// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/eth/eth_client.go

// Package testutil is a generated GoMock package.
package testutils

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEthClient is a mock of EthClient interface.
type MockEthClient struct {
	ctrl     *gomock.Controller
	recorder *MockEthClientMockRecorder
}

// MockEthClientMockRecorder is the mock recorder for MockEthClient.
type MockEthClientMockRecorder struct {
	mock *MockEthClient
}

// NewMockEthClient creates a new mock instance.
func NewMockEthClient(ctrl *gomock.Controller) *MockEthClient {
	mock := &MockEthClient{ctrl: ctrl}
	mock.recorder = &MockEthClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEthClient) EXPECT() *MockEthClientMockRecorder {
	return m.recorder
}

// ExecuteCallback mocks base method.
func (m *MockEthClient) ExecuteCallback(job interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecuteCallback", job)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExecuteCallback indicates an expected call of ExecuteCallback.
func (mr *MockEthClientMockRecorder) ExecuteCallback(job interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecuteCallback", reflect.TypeOf((*MockEthClient)(nil).ExecuteCallback), job)
}
