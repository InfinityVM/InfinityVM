// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: server/v1/zkvm_executor.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of ZKVM to execute
type VmType int32

const (
	VmType_Risc0 VmType = 0
	VmType_Sp1   VmType = 1
)

// Enum value maps for VmType.
var (
	VmType_name = map[int32]string{
		0: "Risc0",
		1: "Sp1",
	}
	VmType_value = map[string]int32{
		"Risc0": 0,
		"Sp1":   1,
	}
)

func (x VmType) Enum() *VmType {
	p := new(VmType)
	*p = x
	return p
}

func (x VmType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VmType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_v1_zkvm_executor_proto_enumTypes[0].Descriptor()
}

func (VmType) Type() protoreflect.EnumType {
	return &file_server_v1_zkvm_executor_proto_enumTypes[0]
}

func (x VmType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VmType.Descriptor instead.
func (VmType) EnumDescriptor() ([]byte, []int) {
	return file_server_v1_zkvm_executor_proto_rawDescGZIP(), []int{0}
}

// The inputs to the zkvm program that get attested to by the zkvm operator.
type JobInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Job identifier, as defined by the ethos chain job manager contracts.
	JobId uint32 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// The maximum amount of cpu cycles. In the future this may
	// be something closer to gas/opcode count.
	MaxCycles uint64 `protobuf:"varint,2,opt,name=max_cycles,json=maxCycles,proto3" json:"max_cycles,omitempty"`
	// Type of ZKVM to execute
	VmType VmType `protobuf:"varint,3,opt,name=vm_type,json=vmType,proto3,enum=server.v1.VmType" json:"vm_type,omitempty"`
	// The verifying key for the program. The executor needs to check
	// that this matches up with the program ELF before using it.
	ProgramVerifyingKey []byte `protobuf:"bytes,4,opt,name=program_verifying_key,json=programVerifyingKey,proto3" json:"program_verifying_key,omitempty"`
	// The input to the zkvm program. The zkvm program is in charge
	// of deserializing this.
	ProgramInput []byte `protobuf:"bytes,5,opt,name=program_input,json=programInput,proto3" json:"program_input,omitempty"`
}

func (x *JobInputs) Reset() {
	*x = JobInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_v1_zkvm_executor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInputs) ProtoMessage() {}

func (x *JobInputs) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_zkvm_executor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInputs.ProtoReflect.Descriptor instead.
func (*JobInputs) Descriptor() ([]byte, []int) {
	return file_server_v1_zkvm_executor_proto_rawDescGZIP(), []int{0}
}

func (x *JobInputs) GetJobId() uint32 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobInputs) GetMaxCycles() uint64 {
	if x != nil {
		return x.MaxCycles
	}
	return 0
}

func (x *JobInputs) GetVmType() VmType {
	if x != nil {
		return x.VmType
	}
	return VmType_Risc0
}

func (x *JobInputs) GetProgramVerifyingKey() []byte {
	if x != nil {
		return x.ProgramVerifyingKey
	}
	return nil
}

func (x *JobInputs) GetProgramInput() []byte {
	if x != nil {
		return x.ProgramInput
	}
	return nil
}

// A request to execute a zkvm program.
type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The program executable
	ProgramElf []byte `protobuf:"bytes,1,opt,name=program_elf,json=programElf,proto3" json:"program_elf,omitempty"`
	// The job inputs for running the program that are attested to by the executor
	// operator to assert faithful execution.
	Inputs *JobInputs `protobuf:"bytes,2,opt,name=inputs,proto3" json:"inputs,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_v1_zkvm_executor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_zkvm_executor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_zkvm_executor_proto_rawDescGZIP(), []int{1}
}

func (x *ExecuteRequest) GetProgramElf() []byte {
	if x != nil {
		return x.ProgramElf
	}
	return nil
}

func (x *ExecuteRequest) GetInputs() *JobInputs {
	if x != nil {
		return x.Inputs
	}
	return nil
}

// The results of executing a program
type ExecuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The inputs to the program execution request. These need to be included
	// in the attested to payload to ensure that a zk proof can be constructed
	// just using the attested payload.
	Inputs *JobInputs `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	// Output of the program specified by the verified inputs.
	RawOutput []byte `protobuf:"bytes,2,opt,name=raw_output,json=rawOutput,proto3" json:"raw_output,omitempty"`
	// The Soldity ABI encoded response intended to be submitted back to the
	// job manager smart contract
	ResultWithMetadata []byte `protobuf:"bytes,3,opt,name=result_with_metadata,json=resultWithMetadata,proto3" json:"result_with_metadata,omitempty"`
	// The ZKVM operator who attests to the job.
	// Ethereum address, as the bytes of an EIP-55 checksum string.
	ZkvmOperatorAddress []byte `protobuf:"bytes,4,opt,name=zkvm_operator_address,json=zkvmOperatorAddress,proto3" json:"zkvm_operator_address,omitempty"`
	// RLP v,r,s signature over
	// `eip191_hash_message(result_with_metadata)`
	ZkvmOperatorSignature []byte `protobuf:"bytes,5,opt,name=zkvm_operator_signature,json=zkvmOperatorSignature,proto3" json:"zkvm_operator_signature,omitempty"`
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_v1_zkvm_executor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_zkvm_executor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_zkvm_executor_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteResponse) GetInputs() *JobInputs {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ExecuteResponse) GetRawOutput() []byte {
	if x != nil {
		return x.RawOutput
	}
	return nil
}

func (x *ExecuteResponse) GetResultWithMetadata() []byte {
	if x != nil {
		return x.ResultWithMetadata
	}
	return nil
}

func (x *ExecuteResponse) GetZkvmOperatorAddress() []byte {
	if x != nil {
		return x.ZkvmOperatorAddress
	}
	return nil
}

func (x *ExecuteResponse) GetZkvmOperatorSignature() []byte {
	if x != nil {
		return x.ZkvmOperatorSignature
	}
	return nil
}

type CreateElfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Raw bytes of the ELF.
	Elf []byte `protobuf:"bytes,1,opt,name=elf,proto3" json:"elf,omitempty"`
	// The type of ZKVM the ELF targets for execution.
	VmType VmType `protobuf:"varint,2,opt,name=vm_type,json=vmType,proto3,enum=server.v1.VmType" json:"vm_type,omitempty"`
}

func (x *CreateElfRequest) Reset() {
	*x = CreateElfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_v1_zkvm_executor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateElfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateElfRequest) ProtoMessage() {}

func (x *CreateElfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_zkvm_executor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateElfRequest.ProtoReflect.Descriptor instead.
func (*CreateElfRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_zkvm_executor_proto_rawDescGZIP(), []int{3}
}

func (x *CreateElfRequest) GetElf() []byte {
	if x != nil {
		return x.Elf
	}
	return nil
}

func (x *CreateElfRequest) GetVmType() VmType {
	if x != nil {
		return x.VmType
	}
	return VmType_Risc0
}

type CreateElfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verifying key of the ELF submitted.
	VerifyingKey []byte `protobuf:"bytes,1,opt,name=verifying_key,json=verifyingKey,proto3" json:"verifying_key,omitempty"`
}

func (x *CreateElfResponse) Reset() {
	*x = CreateElfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_v1_zkvm_executor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateElfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateElfResponse) ProtoMessage() {}

func (x *CreateElfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_zkvm_executor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateElfResponse.ProtoReflect.Descriptor instead.
func (*CreateElfResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_zkvm_executor_proto_rawDescGZIP(), []int{4}
}

func (x *CreateElfResponse) GetVerifyingKey() []byte {
	if x != nil {
		return x.VerifyingKey
	}
	return nil
}

var File_server_v1_zkvm_executor_proto protoreflect.FileDescriptor

var file_server_v1_zkvm_executor_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x6b, 0x76, 0x6d,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0xc6, 0x01, 0x0a, 0x09, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x07, 0x76, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x76, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0x5f, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x65, 0x6c, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x45, 0x6c, 0x66, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x61, 0x77, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x15, 0x7a, 0x6b, 0x76, 0x6d, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x7a, 0x6b, 0x76, 0x6d, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x7a,
	0x6b, 0x76, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x7a, 0x6b,
	0x76, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x50, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6c, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x6c, 0x66, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x76,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6c, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x2a,
	0x1c, 0x0a, 0x06, 0x56, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x69, 0x73,
	0x63, 0x30, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x70, 0x31, 0x10, 0x01, 0x32, 0x9d, 0x01,
	0x0a, 0x0c, 0x5a, 0x6b, 0x76, 0x6d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x42,
	0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6c, 0x66,
	0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6c, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x34, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x6f,
	0x73, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
	0x76, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_v1_zkvm_executor_proto_rawDescOnce sync.Once
	file_server_v1_zkvm_executor_proto_rawDescData = file_server_v1_zkvm_executor_proto_rawDesc
)

func file_server_v1_zkvm_executor_proto_rawDescGZIP() []byte {
	file_server_v1_zkvm_executor_proto_rawDescOnce.Do(func() {
		file_server_v1_zkvm_executor_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_v1_zkvm_executor_proto_rawDescData)
	})
	return file_server_v1_zkvm_executor_proto_rawDescData
}

var file_server_v1_zkvm_executor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_v1_zkvm_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_server_v1_zkvm_executor_proto_goTypes = []any{
	(VmType)(0),               // 0: server.v1.VmType
	(*JobInputs)(nil),         // 1: server.v1.JobInputs
	(*ExecuteRequest)(nil),    // 2: server.v1.ExecuteRequest
	(*ExecuteResponse)(nil),   // 3: server.v1.ExecuteResponse
	(*CreateElfRequest)(nil),  // 4: server.v1.CreateElfRequest
	(*CreateElfResponse)(nil), // 5: server.v1.CreateElfResponse
}
var file_server_v1_zkvm_executor_proto_depIdxs = []int32{
	0, // 0: server.v1.JobInputs.vm_type:type_name -> server.v1.VmType
	1, // 1: server.v1.ExecuteRequest.inputs:type_name -> server.v1.JobInputs
	1, // 2: server.v1.ExecuteResponse.inputs:type_name -> server.v1.JobInputs
	0, // 3: server.v1.CreateElfRequest.vm_type:type_name -> server.v1.VmType
	2, // 4: server.v1.ZkvmExecutor.execute:input_type -> server.v1.ExecuteRequest
	4, // 5: server.v1.ZkvmExecutor.create_elf:input_type -> server.v1.CreateElfRequest
	3, // 6: server.v1.ZkvmExecutor.execute:output_type -> server.v1.ExecuteResponse
	5, // 7: server.v1.ZkvmExecutor.create_elf:output_type -> server.v1.CreateElfResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_server_v1_zkvm_executor_proto_init() }
func file_server_v1_zkvm_executor_proto_init() {
	if File_server_v1_zkvm_executor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_v1_zkvm_executor_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*JobInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_v1_zkvm_executor_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_v1_zkvm_executor_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_v1_zkvm_executor_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateElfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_v1_zkvm_executor_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateElfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_v1_zkvm_executor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_v1_zkvm_executor_proto_goTypes,
		DependencyIndexes: file_server_v1_zkvm_executor_proto_depIdxs,
		EnumInfos:         file_server_v1_zkvm_executor_proto_enumTypes,
		MessageInfos:      file_server_v1_zkvm_executor_proto_msgTypes,
	}.Build()
	File_server_v1_zkvm_executor_proto = out.File
	file_server_v1_zkvm_executor_proto_rawDesc = nil
	file_server_v1_zkvm_executor_proto_goTypes = nil
	file_server_v1_zkvm_executor_proto_depIdxs = nil
}
