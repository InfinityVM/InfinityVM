<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1590" onload="init(evt)" viewBox="0 0 1200 1590" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1590" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1573.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1573.00"> </text><svg id="frames" x="10" width="1180" total_samples="135227"><g><title>coprocessor-node`sync_locked (70 samples, 0.05%)</title><rect x="0.0947%" y="1301" width="0.0518%" height="15" fill="rgb(227,0,7)" fg:x="128" fg:w="70"/><text x="0.3447%" y="1311.50"></text></g><g><title>libsystem_kernel.dylib`__msync (66 samples, 0.05%)</title><rect x="0.0976%" y="1285" width="0.0488%" height="15" fill="rgb(217,0,24)" fg:x="132" fg:w="66"/><text x="0.3476%" y="1295.50"></text></g><g><title>coprocessor-node`mdbx_txn_commit_ex (81 samples, 0.06%)</title><rect x="0.0924%" y="1317" width="0.0599%" height="15" fill="rgb(221,193,54)" fg:x="125" fg:w="81"/><text x="0.3424%" y="1327.50"></text></g><g><title>coprocessor-node`reth_libmdbx::txn_manager::TxnManager::start_message_listener::_{{closure}} (89 samples, 0.07%)</title><rect x="0.0924%" y="1333" width="0.0658%" height="15" fill="rgb(248,212,6)" fg:x="125" fg:w="89"/><text x="0.3424%" y="1343.50"></text></g><g><title>coprocessor-node`core::ops::function::FnOnce::call_once (93 samples, 0.07%)</title><rect x="0.0917%" y="1349" width="0.0688%" height="15" fill="rgb(208,68,35)" fg:x="124" fg:w="93"/><text x="0.3417%" y="1359.50"></text></g><g><title>coprocessor-node`mio::poll::Poll::poll (29 samples, 0.02%)</title><rect x="0.1967%" y="661" width="0.0214%" height="15" fill="rgb(232,128,0)" fg:x="266" fg:w="29"/><text x="0.4467%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`kevent (24 samples, 0.02%)</title><rect x="0.2004%" y="645" width="0.0177%" height="15" fill="rgb(207,160,47)" fg:x="271" fg:w="24"/><text x="0.4504%" y="655.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::Driver::park_thread_timeout (43 samples, 0.03%)</title><rect x="0.1923%" y="725" width="0.0318%" height="15" fill="rgb(228,23,34)" fg:x="260" fg:w="43"/><text x="0.4423%" y="735.50"></text></g><g><title>coprocessor-node`tokio::runtime::driver::IoStack::park_timeout (43 samples, 0.03%)</title><rect x="0.1923%" y="709" width="0.0318%" height="15" fill="rgb(218,30,26)" fg:x="260" fg:w="43"/><text x="0.4423%" y="719.50"></text></g><g><title>coprocessor-node`tokio::runtime::io::driver::Driver::park_timeout (42 samples, 0.03%)</title><rect x="0.1930%" y="693" width="0.0311%" height="15" fill="rgb(220,122,19)" fg:x="261" fg:w="42"/><text x="0.4430%" y="703.50"></text></g><g><title>coprocessor-node`tokio::runtime::io::driver::Driver::turn (39 samples, 0.03%)</title><rect x="0.1952%" y="677" width="0.0288%" height="15" fill="rgb(250,228,42)" fg:x="264" fg:w="39"/><text x="0.4452%" y="687.50"></text></g><g><title>coprocessor-node`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (35 samples, 0.03%)</title><rect x="0.2255%" y="613" width="0.0259%" height="15" fill="rgb(240,193,28)" fg:x="305" fg:w="35"/><text x="0.4755%" y="623.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (33 samples, 0.02%)</title><rect x="0.2270%" y="597" width="0.0244%" height="15" fill="rgb(216,20,37)" fg:x="307" fg:w="33"/><text x="0.4770%" y="607.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (33 samples, 0.02%)</title><rect x="0.2270%" y="581" width="0.0244%" height="15" fill="rgb(206,188,39)" fg:x="307" fg:w="33"/><text x="0.4770%" y="591.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.03%)</title><rect x="0.2248%" y="645" width="0.0274%" height="15" fill="rgb(217,207,13)" fg:x="304" fg:w="37"/><text x="0.4748%" y="655.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::fold (37 samples, 0.03%)</title><rect x="0.2248%" y="629" width="0.0274%" height="15" fill="rgb(231,73,38)" fg:x="304" fg:w="37"/><text x="0.4748%" y="639.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="0.2522%" y="645" width="0.0200%" height="15" fill="rgb(225,20,46)" fg:x="341" fg:w="27"/><text x="0.5022%" y="655.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::find_map (27 samples, 0.02%)</title><rect x="0.2522%" y="629" width="0.0200%" height="15" fill="rgb(210,31,41)" fg:x="341" fg:w="27"/><text x="0.5022%" y="639.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.02%)</title><rect x="0.2522%" y="613" width="0.0200%" height="15" fill="rgb(221,200,47)" fg:x="341" fg:w="27"/><text x="0.5022%" y="623.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (26 samples, 0.02%)</title><rect x="0.2529%" y="597" width="0.0192%" height="15" fill="rgb(226,26,5)" fg:x="342" fg:w="26"/><text x="0.5029%" y="607.50"></text></g><g><title>coprocessor-node`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 0.02%)</title><rect x="0.2529%" y="581" width="0.0192%" height="15" fill="rgb(249,33,26)" fg:x="342" fg:w="26"/><text x="0.5029%" y="591.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (26 samples, 0.02%)</title><rect x="0.2529%" y="565" width="0.0192%" height="15" fill="rgb(235,183,28)" fg:x="342" fg:w="26"/><text x="0.5029%" y="575.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (24 samples, 0.02%)</title><rect x="0.2544%" y="549" width="0.0177%" height="15" fill="rgb(221,5,38)" fg:x="344" fg:w="24"/><text x="0.5044%" y="559.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (65 samples, 0.05%)</title><rect x="0.2248%" y="709" width="0.0481%" height="15" fill="rgb(247,18,42)" fg:x="304" fg:w="65"/><text x="0.4748%" y="719.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::min (65 samples, 0.05%)</title><rect x="0.2248%" y="693" width="0.0481%" height="15" fill="rgb(241,131,45)" fg:x="304" fg:w="65"/><text x="0.4748%" y="703.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::min_by (65 samples, 0.05%)</title><rect x="0.2248%" y="677" width="0.0481%" height="15" fill="rgb(249,31,29)" fg:x="304" fg:w="65"/><text x="0.4748%" y="687.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::reduce (65 samples, 0.05%)</title><rect x="0.2248%" y="661" width="0.0481%" height="15" fill="rgb(225,111,53)" fg:x="304" fg:w="65"/><text x="0.4748%" y="671.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (67 samples, 0.05%)</title><rect x="0.2241%" y="725" width="0.0495%" height="15" fill="rgb(238,160,17)" fg:x="303" fg:w="67"/><text x="0.4741%" y="735.50"></text></g><g><title>coprocessor-node`tokio::runtime::driver::TimeDriver::park (129 samples, 0.10%)</title><rect x="0.1790%" y="773" width="0.0954%" height="15" fill="rgb(214,148,48)" fg:x="242" fg:w="129"/><text x="0.4290%" y="783.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::Driver::park (129 samples, 0.10%)</title><rect x="0.1790%" y="757" width="0.0954%" height="15" fill="rgb(232,36,49)" fg:x="242" fg:w="129"/><text x="0.4290%" y="767.50"></text></g><g><title>coprocessor-node`tokio::runtime::time::Driver::park_internal (129 samples, 0.10%)</title><rect x="0.1790%" y="741" width="0.0954%" height="15" fill="rgb(209,103,24)" fg:x="242" fg:w="129"/><text x="0.4290%" y="751.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (130 samples, 0.10%)</title><rect x="0.1790%" y="805" width="0.0961%" height="15" fill="rgb(229,88,8)" fg:x="242" fg:w="130"/><text x="0.4290%" y="815.50"></text></g><g><title>coprocessor-node`tokio::runtime::driver::Driver::park (130 samples, 0.10%)</title><rect x="0.1790%" y="789" width="0.0961%" height="15" fill="rgb(213,181,19)" fg:x="242" fg:w="130"/><text x="0.4290%" y="799.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::park::Parker::park (140 samples, 0.10%)</title><rect x="0.1723%" y="837" width="0.1035%" height="15" fill="rgb(254,191,54)" fg:x="233" fg:w="140"/><text x="0.4223%" y="847.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::park::Inner::park (140 samples, 0.10%)</title><rect x="0.1723%" y="821" width="0.1035%" height="15" fill="rgb(241,83,37)" fg:x="233" fg:w="140"/><text x="0.4223%" y="831.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (147 samples, 0.11%)</title><rect x="0.1686%" y="853" width="0.1087%" height="15" fill="rgb(233,36,39)" fg:x="228" fg:w="147"/><text x="0.4186%" y="863.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::Context::park (153 samples, 0.11%)</title><rect x="0.1671%" y="869" width="0.1131%" height="15" fill="rgb(226,3,54)" fg:x="226" fg:w="153"/><text x="0.4171%" y="879.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (16 samples, 0.01%)</title><rect x="0.3091%" y="405" width="0.0118%" height="15" fill="rgb(245,192,40)" fg:x="418" fg:w="16"/><text x="0.5591%" y="415.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (30 samples, 0.02%)</title><rect x="0.2995%" y="485" width="0.0222%" height="15" fill="rgb(238,167,29)" fg:x="405" fg:w="30"/><text x="0.5495%" y="495.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (25 samples, 0.02%)</title><rect x="0.3032%" y="469" width="0.0185%" height="15" fill="rgb(232,182,51)" fg:x="410" fg:w="25"/><text x="0.5532%" y="479.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (22 samples, 0.02%)</title><rect x="0.3054%" y="453" width="0.0163%" height="15" fill="rgb(231,60,39)" fg:x="413" fg:w="22"/><text x="0.5554%" y="463.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (21 samples, 0.02%)</title><rect x="0.3062%" y="437" width="0.0155%" height="15" fill="rgb(208,69,12)" fg:x="414" fg:w="21"/><text x="0.5562%" y="447.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::role::parse_headers (17 samples, 0.01%)</title><rect x="0.3091%" y="421" width="0.0126%" height="15" fill="rgb(235,93,37)" fg:x="418" fg:w="17"/><text x="0.5591%" y="431.50"></text></g><g><title>coprocessor-node`&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (54 samples, 0.04%)</title><rect x="0.2928%" y="581" width="0.0399%" height="15" fill="rgb(213,116,39)" fg:x="396" fg:w="54"/><text x="0.5428%" y="591.50"></text></g><g><title>coprocessor-node`&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (54 samples, 0.04%)</title><rect x="0.2928%" y="565" width="0.0399%" height="15" fill="rgb(222,207,29)" fg:x="396" fg:w="54"/><text x="0.5428%" y="575.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.04%)</title><rect x="0.2928%" y="549" width="0.0399%" height="15" fill="rgb(206,96,30)" fg:x="396" fg:w="54"/><text x="0.5428%" y="559.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (54 samples, 0.04%)</title><rect x="0.2928%" y="533" width="0.0399%" height="15" fill="rgb(218,138,4)" fg:x="396" fg:w="54"/><text x="0.5428%" y="543.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (54 samples, 0.04%)</title><rect x="0.2928%" y="517" width="0.0399%" height="15" fill="rgb(250,191,14)" fg:x="396" fg:w="54"/><text x="0.5428%" y="527.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (53 samples, 0.04%)</title><rect x="0.2936%" y="501" width="0.0392%" height="15" fill="rgb(239,60,40)" fg:x="397" fg:w="53"/><text x="0.5436%" y="511.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (15 samples, 0.01%)</title><rect x="0.3217%" y="485" width="0.0111%" height="15" fill="rgb(206,27,48)" fg:x="435" fg:w="15"/><text x="0.5717%" y="495.50"></text></g><g><title>coprocessor-node`&lt;axum::serve::Serve&lt;M,S&gt; as core::future::into_future::IntoFuture&gt;::into_future::_{{closure}}::_{{closure}} (55 samples, 0.04%)</title><rect x="0.2928%" y="597" width="0.0407%" height="15" fill="rgb(225,35,8)" fg:x="396" fg:w="55"/><text x="0.5428%" y="607.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (19 samples, 0.01%)</title><rect x="0.3668%" y="309" width="0.0141%" height="15" fill="rgb(250,213,24)" fg:x="496" fg:w="19"/><text x="0.6168%" y="319.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (44 samples, 0.03%)</title><rect x="0.3490%" y="389" width="0.0325%" height="15" fill="rgb(247,123,22)" fg:x="472" fg:w="44"/><text x="0.5990%" y="399.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (35 samples, 0.03%)</title><rect x="0.3557%" y="373" width="0.0259%" height="15" fill="rgb(231,138,38)" fg:x="481" fg:w="35"/><text x="0.6057%" y="383.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (30 samples, 0.02%)</title><rect x="0.3594%" y="357" width="0.0222%" height="15" fill="rgb(231,145,46)" fg:x="486" fg:w="30"/><text x="0.6094%" y="367.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (28 samples, 0.02%)</title><rect x="0.3609%" y="341" width="0.0207%" height="15" fill="rgb(251,118,11)" fg:x="488" fg:w="28"/><text x="0.6109%" y="351.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::role::parse_headers (20 samples, 0.01%)</title><rect x="0.3668%" y="325" width="0.0148%" height="15" fill="rgb(217,147,25)" fg:x="496" fg:w="20"/><text x="0.6168%" y="335.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72 samples, 0.05%)</title><rect x="0.3380%" y="581" width="0.0532%" height="15" fill="rgb(247,81,37)" fg:x="457" fg:w="72"/><text x="0.5880%" y="591.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72 samples, 0.05%)</title><rect x="0.3380%" y="565" width="0.0532%" height="15" fill="rgb(209,12,38)" fg:x="457" fg:w="72"/><text x="0.5880%" y="575.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72 samples, 0.05%)</title><rect x="0.3380%" y="549" width="0.0532%" height="15" fill="rgb(227,1,9)" fg:x="457" fg:w="72"/><text x="0.5880%" y="559.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72 samples, 0.05%)</title><rect x="0.3380%" y="533" width="0.0532%" height="15" fill="rgb(248,47,43)" fg:x="457" fg:w="72"/><text x="0.5880%" y="543.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (72 samples, 0.05%)</title><rect x="0.3380%" y="517" width="0.0532%" height="15" fill="rgb(221,10,30)" fg:x="457" fg:w="72"/><text x="0.5880%" y="527.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (71 samples, 0.05%)</title><rect x="0.3387%" y="501" width="0.0525%" height="15" fill="rgb(210,229,1)" fg:x="458" fg:w="71"/><text x="0.5887%" y="511.50"></text></g><g><title>coprocessor-node`&lt;F as futures_core::future::TryFuture&gt;::try_poll (71 samples, 0.05%)</title><rect x="0.3387%" y="485" width="0.0525%" height="15" fill="rgb(222,148,37)" fg:x="458" fg:w="71"/><text x="0.5887%" y="495.50"></text></g><g><title>coprocessor-node`&lt;hyper::client::conn::http1::upgrades::UpgradeableConnection&lt;I,B&gt; as core::future::future::Future&gt;::poll (71 samples, 0.05%)</title><rect x="0.3387%" y="469" width="0.0525%" height="15" fill="rgb(234,67,33)" fg:x="458" fg:w="71"/><text x="0.5887%" y="479.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.05%)</title><rect x="0.3387%" y="453" width="0.0525%" height="15" fill="rgb(247,98,35)" fg:x="458" fg:w="71"/><text x="0.5887%" y="463.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (71 samples, 0.05%)</title><rect x="0.3387%" y="437" width="0.0525%" height="15" fill="rgb(247,138,52)" fg:x="458" fg:w="71"/><text x="0.5887%" y="447.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (71 samples, 0.05%)</title><rect x="0.3387%" y="421" width="0.0525%" height="15" fill="rgb(213,79,30)" fg:x="458" fg:w="71"/><text x="0.5887%" y="431.50"></text></g><g><title>coprocessor-node`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (69 samples, 0.05%)</title><rect x="0.3402%" y="405" width="0.0510%" height="15" fill="rgb(246,177,23)" fg:x="460" fg:w="69"/><text x="0.5902%" y="415.50"></text></g><g><title>coprocessor-node`h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (18 samples, 0.01%)</title><rect x="0.3912%" y="453" width="0.0133%" height="15" fill="rgb(230,62,27)" fg:x="529" fg:w="18"/><text x="0.6412%" y="463.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h2::client::H2ClientFuture&lt;B,T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="0.3912%" y="581" width="0.0192%" height="15" fill="rgb(216,154,8)" fg:x="529" fg:w="26"/><text x="0.6412%" y="591.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h2::client::ConnTask&lt;T,B&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="0.3912%" y="565" width="0.0192%" height="15" fill="rgb(244,35,45)" fg:x="529" fg:w="26"/><text x="0.6412%" y="575.50"></text></g><g><title>coprocessor-node`futures_util::future::future::FutureExt::poll_unpin (26 samples, 0.02%)</title><rect x="0.3912%" y="549" width="0.0192%" height="15" fill="rgb(251,115,12)" fg:x="529" fg:w="26"/><text x="0.6412%" y="559.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="0.3912%" y="533" width="0.0192%" height="15" fill="rgb(240,54,50)" fg:x="529" fg:w="26"/><text x="0.6412%" y="543.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h2::client::ConnMapErr&lt;T,B&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="0.3912%" y="517" width="0.0192%" height="15" fill="rgb(233,84,52)" fg:x="529" fg:w="26"/><text x="0.6412%" y="527.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="0.3912%" y="501" width="0.0192%" height="15" fill="rgb(207,117,47)" fg:x="529" fg:w="26"/><text x="0.6412%" y="511.50"></text></g><g><title>coprocessor-node`&lt;h2::client::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="0.3912%" y="485" width="0.0192%" height="15" fill="rgb(249,43,39)" fg:x="529" fg:w="26"/><text x="0.6412%" y="495.50"></text></g><g><title>coprocessor-node`h2::proto::connection::Connection&lt;T,P,B&gt;::poll (26 samples, 0.02%)</title><rect x="0.3912%" y="469" width="0.0192%" height="15" fill="rgb(209,38,44)" fg:x="529" fg:w="26"/><text x="0.6412%" y="479.50"></text></g><g><title>coprocessor-node`db::put_job (14 samples, 0.01%)</title><rect x="0.4141%" y="533" width="0.0104%" height="15" fill="rgb(236,212,23)" fg:x="560" fg:w="14"/><text x="0.6641%" y="543.50"></text></g><g><title>coprocessor-node`reth_db_api::database::Database::update (14 samples, 0.01%)</title><rect x="0.4141%" y="517" width="0.0104%" height="15" fill="rgb(242,79,21)" fg:x="560" fg:w="14"/><text x="0.6641%" y="527.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::wide::WideScalar::reduce_impl (18 samples, 0.01%)</title><rect x="0.4481%" y="261" width="0.0133%" height="15" fill="rgb(211,96,35)" fg:x="606" fg:w="18"/><text x="0.6981%" y="271.50"></text></g><g><title>coprocessor-node`&lt;k256::arithmetic::scalar::Scalar as elliptic_curve::ops::Invert&gt;::invert (43 samples, 0.03%)</title><rect x="0.4363%" y="341" width="0.0318%" height="15" fill="rgb(253,215,40)" fg:x="590" fg:w="43"/><text x="0.6863%" y="351.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::invert (43 samples, 0.03%)</title><rect x="0.4363%" y="325" width="0.0318%" height="15" fill="rgb(211,81,21)" fg:x="590" fg:w="43"/><text x="0.6863%" y="335.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::pow2k (38 samples, 0.03%)</title><rect x="0.4400%" y="309" width="0.0281%" height="15" fill="rgb(208,190,38)" fg:x="595" fg:w="38"/><text x="0.6900%" y="319.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::square (38 samples, 0.03%)</title><rect x="0.4400%" y="293" width="0.0281%" height="15" fill="rgb(235,213,38)" fg:x="595" fg:w="38"/><text x="0.6900%" y="303.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::mul (38 samples, 0.03%)</title><rect x="0.4400%" y="277" width="0.0281%" height="15" fill="rgb(237,122,38)" fg:x="595" fg:w="38"/><text x="0.6900%" y="287.50"></text></g><g><title>coprocessor-node`k256::arithmetic::field::field_impl::FieldElementImpl::mul (18 samples, 0.01%)</title><rect x="0.4807%" y="229" width="0.0133%" height="15" fill="rgb(244,218,35)" fg:x="650" fg:w="18"/><text x="0.7307%" y="239.50"></text></g><g><title>coprocessor-node`k256::arithmetic::projective::ProjectivePoint::add (36 samples, 0.03%)</title><rect x="0.4688%" y="245" width="0.0266%" height="15" fill="rgb(240,68,47)" fg:x="634" fg:w="36"/><text x="0.7188%" y="255.50"></text></g><g><title>coprocessor-node`&lt;k256::arithmetic::projective::ProjectivePoint as core::ops::arith::AddAssign&lt;&amp;k256::arithmetic::projective::ProjectivePoint&gt;&gt;::add_assign (38 samples, 0.03%)</title><rect x="0.4688%" y="261" width="0.0281%" height="15" fill="rgb(210,16,53)" fg:x="634" fg:w="38"/><text x="0.7188%" y="271.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::LookupTable::select (17 samples, 0.01%)</title><rect x="0.5029%" y="261" width="0.0126%" height="15" fill="rgb(235,124,12)" fg:x="680" fg:w="17"/><text x="0.7529%" y="271.50"></text></g><g><title>coprocessor-node`k256::arithmetic::projective::ProjectivePoint::double (37 samples, 0.03%)</title><rect x="0.5154%" y="261" width="0.0274%" height="15" fill="rgb(224,169,11)" fg:x="697" fg:w="37"/><text x="0.7654%" y="271.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::lincomb (102 samples, 0.08%)</title><rect x="0.4688%" y="277" width="0.0754%" height="15" fill="rgb(250,166,2)" fg:x="634" fg:w="102"/><text x="0.7188%" y="287.50"></text></g><g><title>coprocessor-node`k256::ecdsa::_&lt;impl ecdsa::hazmat::SignPrimitive&lt;k256::Secp256k1&gt; for k256::arithmetic::scalar::Scalar&gt;::try_sign_prehashed (152 samples, 0.11%)</title><rect x="0.4326%" y="373" width="0.1124%" height="15" fill="rgb(242,216,29)" fg:x="585" fg:w="152"/><text x="0.6826%" y="383.50"></text></g><g><title>coprocessor-node`ecdsa::hazmat::sign_prehashed (152 samples, 0.11%)</title><rect x="0.4326%" y="357" width="0.1124%" height="15" fill="rgb(230,116,27)" fg:x="585" fg:w="152"/><text x="0.6826%" y="367.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::_&lt;impl elliptic_curve::ops::MulByGenerator for k256::arithmetic::projective::ProjectivePoint&gt;::mul_by_generator (103 samples, 0.08%)</title><rect x="0.4688%" y="341" width="0.0762%" height="15" fill="rgb(228,99,48)" fg:x="634" fg:w="103"/><text x="0.7188%" y="351.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::_&lt;impl core::ops::arith::Mul&lt;&amp;k256::arithmetic::scalar::Scalar&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::mul (103 samples, 0.08%)</title><rect x="0.4688%" y="325" width="0.0762%" height="15" fill="rgb(253,11,6)" fg:x="634" fg:w="103"/><text x="0.7188%" y="335.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::_&lt;impl elliptic_curve::ops::LinearCombinationExt&lt;[(k256::arithmetic::projective::ProjectivePoint,k256::arithmetic::scalar::Scalar) (103 samples, 0.08%)</title><rect x="0.4688%" y="309" width="0.0762%" height="15" fill="rgb(247,143,39)" fg:x="634" fg:w="103"/><text x="0.7188%" y="319.50"></text></g><g><title> N]&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::lincomb_ext (103 samples, 0.08%)</title><rect x="0.4688%" y="293" width="0.0762%" height="15" fill="rgb(236,97,10)" fg:x="634" fg:w="103"/><text x="0.7188%" y="303.50"></text></g><g><title>coprocessor-node`ecdsa::hazmat::SignPrimitive::try_sign_prehashed_rfc6979 (175 samples, 0.13%)</title><rect x="0.4326%" y="389" width="0.1294%" height="15" fill="rgb(233,208,19)" fg:x="585" fg:w="175"/><text x="0.6826%" y="399.50"></text></g><g><title>coprocessor-node`rfc6979::generate_k (23 samples, 0.02%)</title><rect x="0.5450%" y="373" width="0.0170%" height="15" fill="rgb(216,164,2)" fg:x="737" fg:w="23"/><text x="0.7950%" y="383.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (177 samples, 0.13%)</title><rect x="0.4319%" y="469" width="0.1309%" height="15" fill="rgb(220,129,5)" fg:x="584" fg:w="177"/><text x="0.6819%" y="479.50"></text></g><g><title>coprocessor-node`&lt;alloy_signer_local::LocalSigner&lt;C&gt; as alloy_signer::signer::Signer&gt;::sign_hash::_{{closure}} (177 samples, 0.13%)</title><rect x="0.4319%" y="453" width="0.1309%" height="15" fill="rgb(242,17,10)" fg:x="584" fg:w="177"/><text x="0.6819%" y="463.50"></text></g><g><title>coprocessor-node`&lt;alloy_signer_local::LocalSigner&lt;C&gt; as alloy_signer::signer::SignerSync&gt;::sign_hash_sync (177 samples, 0.13%)</title><rect x="0.4319%" y="437" width="0.1309%" height="15" fill="rgb(242,107,0)" fg:x="584" fg:w="177"/><text x="0.6819%" y="447.50"></text></g><g><title>coprocessor-node`ecdsa::recovery::_&lt;impl signature::hazmat::PrehashSigner&lt;(ecdsa::Signature&lt;C&gt;,ecdsa::recovery::RecoveryId)&gt; for ecdsa::signing::SigningKey&lt;C&gt;&gt;::sign_prehash (176 samples, 0.13%)</title><rect x="0.4326%" y="421" width="0.1302%" height="15" fill="rgb(251,28,31)" fg:x="585" fg:w="176"/><text x="0.6826%" y="431.50"></text></g><g><title>coprocessor-node`ecdsa::recovery::_&lt;impl ecdsa::signing::SigningKey&lt;C&gt;&gt;::sign_prehash_recoverable (176 samples, 0.13%)</title><rect x="0.4326%" y="405" width="0.1302%" height="15" fill="rgb(233,223,10)" fg:x="585" fg:w="176"/><text x="0.6826%" y="415.50"></text></g><g><title>coprocessor-node`zkvm_executor::service::ZkvmExecutorService&lt;S&gt;::sign_message::_{{closure}} (187 samples, 0.14%)</title><rect x="0.4319%" y="517" width="0.1383%" height="15" fill="rgb(215,21,27)" fg:x="584" fg:w="187"/><text x="0.6819%" y="527.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (187 samples, 0.14%)</title><rect x="0.4319%" y="501" width="0.1383%" height="15" fill="rgb(232,23,21)" fg:x="584" fg:w="187"/><text x="0.6819%" y="511.50"></text></g><g><title>coprocessor-node`alloy_signer::signer::Signer::sign_message::_{{closure}} (187 samples, 0.14%)</title><rect x="0.4319%" y="485" width="0.1383%" height="15" fill="rgb(244,5,23)" fg:x="584" fg:w="187"/><text x="0.6819%" y="495.50"></text></g><g><title>coprocessor-node`coprocessor_node::job_processor::JobProcessorService&lt;S,D&gt;::execute_job::_{{closure}} (215 samples, 0.16%)</title><rect x="0.4141%" y="549" width="0.1590%" height="15" fill="rgb(226,81,46)" fg:x="560" fg:w="215"/><text x="0.6641%" y="559.50"></text></g><g><title>coprocessor-node`zkvm_executor::service::ZkvmExecutorService&lt;S&gt;::execute_offchain_job::_{{closure}} (201 samples, 0.15%)</title><rect x="0.4245%" y="533" width="0.1486%" height="15" fill="rgb(247,70,30)" fg:x="574" fg:w="201"/><text x="0.6745%" y="543.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.5812%" y="341" width="0.0111%" height="15" fill="rgb(212,68,19)" fg:x="786" fg:w="15"/><text x="0.8312%" y="351.50"></text></g><g><title>coprocessor-node`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.5812%" y="325" width="0.0111%" height="15" fill="rgb(240,187,13)" fg:x="786" fg:w="15"/><text x="0.8312%" y="335.50"></text></g><g><title>coprocessor-node`alloy_transport_http::reqwest_transport::_&lt;impl alloy_transport_http::Http&lt;reqwest::async_impl::client::Client&gt;&gt;::request_reqwest::_{{closure}} (15 samples, 0.01%)</title><rect x="0.5812%" y="309" width="0.0111%" height="15" fill="rgb(223,113,26)" fg:x="786" fg:w="15"/><text x="0.8312%" y="319.50"></text></g><g><title>coprocessor-node`&lt;alloy_rpc_client::call::CallState&lt;Params,Conn&gt; as core::future::future::Future&gt;::poll (20 samples, 0.01%)</title><rect x="0.5812%" y="357" width="0.0148%" height="15" fill="rgb(206,192,2)" fg:x="786" fg:w="20"/><text x="0.8312%" y="367.50"></text></g><g><title>coprocessor-node`&lt;alloy_rpc_client::call::RpcCall&lt;Conn,Params,Resp,Output,Map&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="0.5812%" y="373" width="0.0170%" height="15" fill="rgb(241,108,4)" fg:x="786" fg:w="23"/><text x="0.8312%" y="383.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="0.5790%" y="437" width="0.0200%" height="15" fill="rgb(247,173,49)" fg:x="783" fg:w="27"/><text x="0.8290%" y="447.50"></text></g><g><title>coprocessor-node`alloy_provider::provider::trait::Provider::send_transaction_internal::_{{closure}} (27 samples, 0.02%)</title><rect x="0.5790%" y="421" width="0.0200%" height="15" fill="rgb(224,114,35)" fg:x="783" fg:w="27"/><text x="0.8290%" y="431.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="0.5812%" y="405" width="0.0177%" height="15" fill="rgb(245,159,27)" fg:x="786" fg:w="24"/><text x="0.8312%" y="415.50"></text></g><g><title>coprocessor-node`alloy_provider::provider::trait::Provider::send_raw_transaction::_{{closure}} (24 samples, 0.02%)</title><rect x="0.5812%" y="389" width="0.0177%" height="15" fill="rgb(245,172,44)" fg:x="786" fg:w="24"/><text x="0.8312%" y="399.50"></text></g><g><title>coprocessor-node`tiny_keccak::keccakf::keccakf (21 samples, 0.02%)</title><rect x="0.6034%" y="165" width="0.0155%" height="15" fill="rgb(236,23,11)" fg:x="816" fg:w="21"/><text x="0.8534%" y="175.50"></text></g><g><title>coprocessor-node`&lt;alloy_consensus::transaction::eip1559::TxEip1559 as alloy_consensus::transaction::SignableTransaction&lt;alloy_primitives::signature::sig::Signature&lt;ecdsa::Signature&lt;k256::Secp256k1&gt;&gt;&gt;&gt;::into_signed (31 samples, 0.02%)</title><rect x="0.6012%" y="293" width="0.0229%" height="15" fill="rgb(205,117,38)" fg:x="813" fg:w="31"/><text x="0.8512%" y="303.50"></text></g><g><title>coprocessor-node`alloy_primitives::utils::keccak256 (31 samples, 0.02%)</title><rect x="0.6012%" y="277" width="0.0229%" height="15" fill="rgb(237,72,25)" fg:x="813" fg:w="31"/><text x="0.8512%" y="287.50"></text></g><g><title>coprocessor-node`alloy_primitives::utils::keccak256::keccak256 (31 samples, 0.02%)</title><rect x="0.6012%" y="261" width="0.0229%" height="15" fill="rgb(244,70,9)" fg:x="813" fg:w="31"/><text x="0.8512%" y="271.50"></text></g><g><title>coprocessor-node`alloy_primitives::utils::Keccak256::update (29 samples, 0.02%)</title><rect x="0.6027%" y="245" width="0.0214%" height="15" fill="rgb(217,125,39)" fg:x="815" fg:w="29"/><text x="0.8527%" y="255.50"></text></g><g><title>coprocessor-node`&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (29 samples, 0.02%)</title><rect x="0.6027%" y="229" width="0.0214%" height="15" fill="rgb(235,36,10)" fg:x="815" fg:w="29"/><text x="0.8527%" y="239.50"></text></g><g><title>coprocessor-node`tiny_keccak::KeccakState&lt;P&gt;::update (29 samples, 0.02%)</title><rect x="0.6027%" y="213" width="0.0214%" height="15" fill="rgb(251,123,47)" fg:x="815" fg:w="29"/><text x="0.8527%" y="223.50"></text></g><g><title>coprocessor-node`tiny_keccak::KeccakState&lt;P&gt;::keccak (28 samples, 0.02%)</title><rect x="0.6034%" y="197" width="0.0207%" height="15" fill="rgb(221,13,13)" fg:x="816" fg:w="28"/><text x="0.8534%" y="207.50"></text></g><g><title>coprocessor-node`&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (28 samples, 0.02%)</title><rect x="0.6034%" y="181" width="0.0207%" height="15" fill="rgb(238,131,9)" fg:x="816" fg:w="28"/><text x="0.8534%" y="191.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::wide::WideScalar::reduce_impl (27 samples, 0.02%)</title><rect x="0.6419%" y="69" width="0.0200%" height="15" fill="rgb(211,50,8)" fg:x="868" fg:w="27"/><text x="0.8919%" y="79.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::mul (38 samples, 0.03%)</title><rect x="0.6367%" y="85" width="0.0281%" height="15" fill="rgb(245,182,24)" fg:x="861" fg:w="38"/><text x="0.8867%" y="95.50"></text></g><g><title>coprocessor-node`&lt;k256::arithmetic::scalar::Scalar as elliptic_curve::ops::Invert&gt;::invert (47 samples, 0.03%)</title><rect x="0.6308%" y="149" width="0.0348%" height="15" fill="rgb(242,14,37)" fg:x="853" fg:w="47"/><text x="0.8808%" y="159.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::invert (47 samples, 0.03%)</title><rect x="0.6308%" y="133" width="0.0348%" height="15" fill="rgb(246,228,12)" fg:x="853" fg:w="47"/><text x="0.8808%" y="143.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::pow2k (40 samples, 0.03%)</title><rect x="0.6360%" y="117" width="0.0296%" height="15" fill="rgb(213,55,15)" fg:x="860" fg:w="40"/><text x="0.8860%" y="127.50"></text></g><g><title>coprocessor-node`k256::arithmetic::scalar::Scalar::square (39 samples, 0.03%)</title><rect x="0.6367%" y="101" width="0.0288%" height="15" fill="rgb(209,9,3)" fg:x="861" fg:w="39"/><text x="0.8867%" y="111.50"></text></g><g><title>coprocessor-node`k256::arithmetic::field::field_impl::FieldElementImpl::mul (15 samples, 0.01%)</title><rect x="0.6707%" y="37" width="0.0111%" height="15" fill="rgb(230,59,30)" fg:x="907" fg:w="15"/><text x="0.9207%" y="47.50"></text></g><g><title>coprocessor-node`k256::arithmetic::projective::ProjectivePoint::add (21 samples, 0.02%)</title><rect x="0.6678%" y="53" width="0.0155%" height="15" fill="rgb(209,121,21)" fg:x="903" fg:w="21"/><text x="0.9178%" y="63.50"></text></g><g><title>coprocessor-node`&lt;k256::arithmetic::projective::ProjectivePoint as core::ops::arith::AddAssign&lt;&amp;k256::arithmetic::projective::ProjectivePoint&gt;&gt;::add_assign (23 samples, 0.02%)</title><rect x="0.6670%" y="69" width="0.0170%" height="15" fill="rgb(220,109,13)" fg:x="902" fg:w="23"/><text x="0.9170%" y="79.50"></text></g><g><title>coprocessor-node`k256::arithmetic::field::field_impl::FieldElementImpl::mul (17 samples, 0.01%)</title><rect x="0.7121%" y="53" width="0.0126%" height="15" fill="rgb(232,18,1)" fg:x="963" fg:w="17"/><text x="0.9621%" y="63.50"></text></g><g><title>coprocessor-node`k256::arithmetic::projective::ProjectivePoint::double (33 samples, 0.02%)</title><rect x="0.7010%" y="69" width="0.0244%" height="15" fill="rgb(215,41,42)" fg:x="948" fg:w="33"/><text x="0.9510%" y="79.50"></text></g><g><title>coprocessor-node`k256::ecdsa::_&lt;impl ecdsa::hazmat::SignPrimitive&lt;k256::Secp256k1&gt; for k256::arithmetic::scalar::Scalar&gt;::try_sign_prehashed (137 samples, 0.10%)</title><rect x="0.6249%" y="181" width="0.1013%" height="15" fill="rgb(224,123,36)" fg:x="845" fg:w="137"/><text x="0.8749%" y="191.50"></text></g><g><title>coprocessor-node`ecdsa::hazmat::sign_prehashed (137 samples, 0.10%)</title><rect x="0.6249%" y="165" width="0.1013%" height="15" fill="rgb(240,125,3)" fg:x="845" fg:w="137"/><text x="0.8749%" y="175.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::_&lt;impl elliptic_curve::ops::MulByGenerator for k256::arithmetic::projective::ProjectivePoint&gt;::mul_by_generator (80 samples, 0.06%)</title><rect x="0.6670%" y="149" width="0.0592%" height="15" fill="rgb(205,98,50)" fg:x="902" fg:w="80"/><text x="0.9170%" y="159.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::_&lt;impl core::ops::arith::Mul&lt;&amp;k256::arithmetic::scalar::Scalar&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::mul (80 samples, 0.06%)</title><rect x="0.6670%" y="133" width="0.0592%" height="15" fill="rgb(205,185,37)" fg:x="902" fg:w="80"/><text x="0.9170%" y="143.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::_&lt;impl elliptic_curve::ops::LinearCombinationExt&lt;[(k256::arithmetic::projective::ProjectivePoint,k256::arithmetic::scalar::Scalar) (80 samples, 0.06%)</title><rect x="0.6670%" y="117" width="0.0592%" height="15" fill="rgb(238,207,15)" fg:x="902" fg:w="80"/><text x="0.9170%" y="127.50"></text></g><g><title> N]&gt; for k256::arithmetic::projective::ProjectivePoint&gt;::lincomb_ext (80 samples, 0.06%)</title><rect x="0.6670%" y="101" width="0.0592%" height="15" fill="rgb(213,199,42)" fg:x="902" fg:w="80"/><text x="0.9170%" y="111.50"></text></g><g><title>coprocessor-node`k256::arithmetic::mul::lincomb (80 samples, 0.06%)</title><rect x="0.6670%" y="85" width="0.0592%" height="15" fill="rgb(235,201,11)" fg:x="902" fg:w="80"/><text x="0.9170%" y="95.50"></text></g><g><title>coprocessor-node`&lt;alloy_signer_local::LocalSigner&lt;C&gt; as alloy_signer::signer::SignerSync&gt;::sign_hash_sync (161 samples, 0.12%)</title><rect x="0.6241%" y="245" width="0.1191%" height="15" fill="rgb(207,46,11)" fg:x="844" fg:w="161"/><text x="0.8741%" y="255.50"></text></g><g><title>coprocessor-node`ecdsa::recovery::_&lt;impl signature::hazmat::PrehashSigner&lt;(ecdsa::Signature&lt;C&gt;,ecdsa::recovery::RecoveryId)&gt; for ecdsa::signing::SigningKey&lt;C&gt;&gt;::sign_prehash (160 samples, 0.12%)</title><rect x="0.6249%" y="229" width="0.1183%" height="15" fill="rgb(241,35,35)" fg:x="845" fg:w="160"/><text x="0.8749%" y="239.50"></text></g><g><title>coprocessor-node`ecdsa::recovery::_&lt;impl ecdsa::signing::SigningKey&lt;C&gt;&gt;::sign_prehash_recoverable (160 samples, 0.12%)</title><rect x="0.6249%" y="213" width="0.1183%" height="15" fill="rgb(243,32,47)" fg:x="845" fg:w="160"/><text x="0.8749%" y="223.50"></text></g><g><title>coprocessor-node`ecdsa::hazmat::SignPrimitive::try_sign_prehashed_rfc6979 (160 samples, 0.12%)</title><rect x="0.6249%" y="197" width="0.1183%" height="15" fill="rgb(247,202,23)" fg:x="845" fg:w="160"/><text x="0.8749%" y="207.50"></text></g><g><title>coprocessor-node`rfc6979::generate_k (23 samples, 0.02%)</title><rect x="0.7262%" y="181" width="0.0170%" height="15" fill="rgb(219,102,11)" fg:x="982" fg:w="23"/><text x="0.9762%" y="191.50"></text></g><g><title>coprocessor-node`tiny_keccak::keccakf::keccakf (19 samples, 0.01%)</title><rect x="0.7491%" y="117" width="0.0141%" height="15" fill="rgb(243,110,44)" fg:x="1013" fg:w="19"/><text x="0.9991%" y="127.50"></text></g><g><title>coprocessor-node`&lt;alloy_provider::fillers::wallet::WalletFiller&lt;W&gt; as alloy_provider::fillers::TxFiller&lt;N&gt;&gt;::fill::_{{closure}} (229 samples, 0.17%)</title><rect x="0.6005%" y="389" width="0.1693%" height="15" fill="rgb(222,74,54)" fg:x="812" fg:w="229"/><text x="0.8505%" y="399.50"></text></g><g><title>coprocessor-node`alloy_network::ethereum::builder::_&lt;impl alloy_network::transaction::builder::TransactionBuilder&lt;alloy_network::ethereum::Ethereum&gt; for alloy_rpc_types_eth::transaction::request::TransactionRequest&gt;::build::_{{closure}} (229 samples, 0.17%)</title><rect x="0.6005%" y="373" width="0.1693%" height="15" fill="rgb(216,99,12)" fg:x="812" fg:w="229"/><text x="0.8505%" y="383.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (228 samples, 0.17%)</title><rect x="0.6012%" y="357" width="0.1686%" height="15" fill="rgb(226,22,26)" fg:x="813" fg:w="228"/><text x="0.8512%" y="367.50"></text></g><g><title>coprocessor-node`alloy_network::transaction::signer::NetworkWallet::sign_request::_{{closure}} (228 samples, 0.17%)</title><rect x="0.6012%" y="341" width="0.1686%" height="15" fill="rgb(217,163,10)" fg:x="813" fg:w="228"/><text x="0.8512%" y="351.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (228 samples, 0.17%)</title><rect x="0.6012%" y="325" width="0.1686%" height="15" fill="rgb(213,25,53)" fg:x="813" fg:w="228"/><text x="0.8512%" y="335.50"></text></g><g><title>coprocessor-node`&lt;alloy_network::ethereum::wallet::EthereumWallet as alloy_network::transaction::signer::NetworkWallet&lt;N&gt;&gt;::sign_transaction_from::_{{closure}} (228 samples, 0.17%)</title><rect x="0.6012%" y="309" width="0.1686%" height="15" fill="rgb(252,105,26)" fg:x="813" fg:w="228"/><text x="0.8512%" y="319.50"></text></g><g><title>coprocessor-node`alloy_network::ethereum::wallet::EthereumWallet::sign_transaction_inner::_{{closure}} (197 samples, 0.15%)</title><rect x="0.6241%" y="293" width="0.1457%" height="15" fill="rgb(220,39,43)" fg:x="844" fg:w="197"/><text x="0.8741%" y="303.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (197 samples, 0.15%)</title><rect x="0.6241%" y="277" width="0.1457%" height="15" fill="rgb(229,68,48)" fg:x="844" fg:w="197"/><text x="0.8741%" y="287.50"></text></g><g><title>coprocessor-node`&lt;alloy_signer_local::LocalSigner&lt;C&gt; as alloy_network::transaction::signer::TxSigner&lt;alloy_primitives::signature::sig::Signature&lt;ecdsa::Signature&lt;k256::Secp256k1&gt;&gt;&gt;&gt;::sign_transaction::_{{closure}} (197 samples, 0.15%)</title><rect x="0.6241%" y="261" width="0.1457%" height="15" fill="rgb(252,8,32)" fg:x="844" fg:w="197"/><text x="0.8741%" y="271.50"></text></g><g><title>coprocessor-node`alloy_consensus::transaction::SignableTransaction::signature_hash (36 samples, 0.03%)</title><rect x="0.7432%" y="245" width="0.0266%" height="15" fill="rgb(223,20,43)" fg:x="1005" fg:w="36"/><text x="0.9932%" y="255.50"></text></g><g><title>coprocessor-node`alloy_primitives::utils::keccak256 (35 samples, 0.03%)</title><rect x="0.7439%" y="229" width="0.0259%" height="15" fill="rgb(229,81,49)" fg:x="1006" fg:w="35"/><text x="0.9939%" y="239.50"></text></g><g><title>coprocessor-node`alloy_primitives::utils::keccak256::keccak256 (35 samples, 0.03%)</title><rect x="0.7439%" y="213" width="0.0259%" height="15" fill="rgb(236,28,36)" fg:x="1006" fg:w="35"/><text x="0.9939%" y="223.50"></text></g><g><title>coprocessor-node`alloy_primitives::utils::Keccak256::update (30 samples, 0.02%)</title><rect x="0.7476%" y="197" width="0.0222%" height="15" fill="rgb(249,185,26)" fg:x="1011" fg:w="30"/><text x="0.9976%" y="207.50"></text></g><g><title>coprocessor-node`&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (30 samples, 0.02%)</title><rect x="0.7476%" y="181" width="0.0222%" height="15" fill="rgb(249,174,33)" fg:x="1011" fg:w="30"/><text x="0.9976%" y="191.50"></text></g><g><title>coprocessor-node`tiny_keccak::KeccakState&lt;P&gt;::update (30 samples, 0.02%)</title><rect x="0.7476%" y="165" width="0.0222%" height="15" fill="rgb(233,201,37)" fg:x="1011" fg:w="30"/><text x="0.9976%" y="175.50"></text></g><g><title>coprocessor-node`tiny_keccak::KeccakState&lt;P&gt;::keccak (29 samples, 0.02%)</title><rect x="0.7484%" y="149" width="0.0214%" height="15" fill="rgb(221,78,26)" fg:x="1012" fg:w="29"/><text x="0.9984%" y="159.50"></text></g><g><title>coprocessor-node`&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (29 samples, 0.02%)</title><rect x="0.7484%" y="133" width="0.0214%" height="15" fill="rgb(250,127,30)" fg:x="1012" fg:w="29"/><text x="0.9984%" y="143.50"></text></g><g><title>coprocessor-node`&lt;alloy_provider::fillers::join_fill::JoinFill&lt;L,R&gt; as alloy_provider::fillers::TxFiller&lt;N&gt;&gt;::fill::_{{closure}} (231 samples, 0.17%)</title><rect x="0.5997%" y="405" width="0.1708%" height="15" fill="rgb(230,49,44)" fg:x="811" fg:w="231"/><text x="0.8497%" y="415.50"></text></g><g><title>coprocessor-node`alloy_contract::call::CallBuilder&lt;T,P,D,N&gt;::send::_{{closure}} (267 samples, 0.20%)</title><rect x="0.5783%" y="517" width="0.1974%" height="15" fill="rgb(229,67,23)" fg:x="782" fg:w="267"/><text x="0.8283%" y="527.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (267 samples, 0.20%)</title><rect x="0.5783%" y="501" width="0.1974%" height="15" fill="rgb(249,83,47)" fg:x="782" fg:w="267"/><text x="0.8283%" y="511.50"></text></g><g><title>coprocessor-node`alloy_provider::provider::trait::Provider::send_transaction::_{{closure}} (267 samples, 0.20%)</title><rect x="0.5783%" y="485" width="0.1974%" height="15" fill="rgb(215,43,3)" fg:x="782" fg:w="267"/><text x="0.8283%" y="495.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (267 samples, 0.20%)</title><rect x="0.5783%" y="469" width="0.1974%" height="15" fill="rgb(238,154,13)" fg:x="782" fg:w="267"/><text x="0.8283%" y="479.50"></text></g><g><title>coprocessor-node`&lt;alloy_provider::fillers::FillProvider&lt;F,P,T,N&gt; as alloy_provider::provider::trait::Provider&lt;T,N&gt;&gt;::send_transaction_internal::_{{closure}} (267 samples, 0.20%)</title><rect x="0.5783%" y="453" width="0.1974%" height="15" fill="rgb(219,56,2)" fg:x="782" fg:w="267"/><text x="0.8283%" y="463.50"></text></g><g><title>coprocessor-node`alloy_provider::fillers::FillProvider&lt;F,P,T,N&gt;::fill_inner::_{{closure}} (239 samples, 0.18%)</title><rect x="0.5990%" y="437" width="0.1767%" height="15" fill="rgb(233,0,4)" fg:x="810" fg:w="239"/><text x="0.8490%" y="447.50"></text></g><g><title>coprocessor-node`alloy_provider::fillers::TxFiller::prepare_and_fill::_{{closure}} (238 samples, 0.18%)</title><rect x="0.5997%" y="421" width="0.1760%" height="15" fill="rgb(235,30,7)" fg:x="811" fg:w="238"/><text x="0.8497%" y="431.50"></text></g><g><title>coprocessor-node`&lt;alloy_provider::provider::root::RootProvider&lt;T,N&gt; as alloy_provider::provider::trait::Provider&lt;T,N&gt;&gt;::watch_pending_transaction::_{{closure}} (16 samples, 0.01%)</title><rect x="0.7757%" y="485" width="0.0118%" height="15" fill="rgb(250,79,13)" fg:x="1049" fg:w="16"/><text x="1.0257%" y="495.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="0.7876%" y="437" width="0.0133%" height="15" fill="rgb(211,146,34)" fg:x="1065" fg:w="18"/><text x="1.0376%" y="447.50"></text></g><g><title>coprocessor-node`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.01%)</title><rect x="0.7883%" y="421" width="0.0126%" height="15" fill="rgb(228,22,38)" fg:x="1066" fg:w="17"/><text x="1.0383%" y="431.50"></text></g><g><title>coprocessor-node`alloy_transport_http::reqwest_transport::_&lt;impl alloy_transport_http::Http&lt;reqwest::async_impl::client::Client&gt;&gt;::request_reqwest::_{{closure}} (17 samples, 0.01%)</title><rect x="0.7883%" y="405" width="0.0126%" height="15" fill="rgb(235,168,5)" fg:x="1066" fg:w="17"/><text x="1.0383%" y="415.50"></text></g><g><title>coprocessor-node`&lt;alloy_rpc_client::call::CallState&lt;Params,Conn&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="0.7876%" y="453" width="0.0177%" height="15" fill="rgb(221,155,16)" fg:x="1065" fg:w="24"/><text x="1.0376%" y="463.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (48 samples, 0.04%)</title><rect x="0.7757%" y="501" width="0.0355%" height="15" fill="rgb(215,215,53)" fg:x="1049" fg:w="48"/><text x="1.0257%" y="511.50"></text></g><g><title>coprocessor-node`alloy_provider::provider::trait::Provider::get_transaction_receipt::_{{closure}} (32 samples, 0.02%)</title><rect x="0.7876%" y="485" width="0.0237%" height="15" fill="rgb(223,4,10)" fg:x="1065" fg:w="32"/><text x="1.0376%" y="495.50"></text></g><g><title>coprocessor-node`&lt;alloy_rpc_client::call::RpcCall&lt;Conn,Params,Resp,Output,Map&gt; as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="0.7876%" y="469" width="0.0237%" height="15" fill="rgb(234,103,6)" fg:x="1065" fg:w="32"/><text x="1.0376%" y="479.50"></text></g><g><title>coprocessor-node`coprocessor_node::job_processor::JobProcessorService&lt;S,D&gt;::start_worker::_{{closure}} (544 samples, 0.40%)</title><rect x="0.4126%" y="565" width="0.4023%" height="15" fill="rgb(227,97,0)" fg:x="558" fg:w="544"/><text x="0.6626%" y="575.50"></text></g><g><title>coprocessor-node`coprocessor_node::job_processor::JobProcessorService&lt;S,D&gt;::relay_job_result::_{{closure}} (323 samples, 0.24%)</title><rect x="0.5761%" y="549" width="0.2389%" height="15" fill="rgb(234,150,53)" fg:x="779" fg:w="323"/><text x="0.8261%" y="559.50"></text></g><g><title>coprocessor-node`coprocessor_node::relayer::JobRelayer::relay_result_for_offchain_job::_{{closure}} (320 samples, 0.24%)</title><rect x="0.5783%" y="533" width="0.2366%" height="15" fill="rgb(228,201,54)" fg:x="782" fg:w="320"/><text x="0.8283%" y="543.50"></text></g><g><title>coprocessor-node`alloy_provider::heart::PendingTransactionBuilder&lt;T,N&gt;::get_receipt::_{{closure}} (53 samples, 0.04%)</title><rect x="0.7757%" y="517" width="0.0392%" height="15" fill="rgb(222,22,37)" fg:x="1049" fg:w="53"/><text x="1.0257%" y="527.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (652 samples, 0.48%)</title><rect x="0.3335%" y="597" width="0.4822%" height="15" fill="rgb(237,53,32)" fg:x="451" fg:w="652"/><text x="0.5835%" y="607.50"></text></g><g><title>coprocessor-node`coprocessor_node::job_processor::JobProcessorService&lt;S,D&gt;::start::_{{closure}}::_{{closure}} (545 samples, 0.40%)</title><rect x="0.4126%" y="581" width="0.4030%" height="15" fill="rgb(233,25,53)" fg:x="558" fg:w="545"/><text x="0.6626%" y="591.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (30 samples, 0.02%)</title><rect x="0.8231%" y="213" width="0.0222%" height="15" fill="rgb(210,40,34)" fg:x="1113" fg:w="30"/><text x="1.0731%" y="223.50"></text></g><g><title>coprocessor-node`&lt;coprocessor_node::service::CoprocessorNodeServerInner&lt;S,D&gt; as proto::coprocessor_node_server::CoprocessorNode&gt;::submit_job::_{{closure}} (30 samples, 0.02%)</title><rect x="0.8231%" y="197" width="0.0222%" height="15" fill="rgb(241,220,44)" fg:x="1113" fg:w="30"/><text x="1.0731%" y="207.50"></text></g><g><title>coprocessor-node`&lt;coprocessor_node::service::CoprocessorNodeServerInner&lt;S,D&gt; as proto::coprocessor_node_server::CoprocessorNode&gt;::submit_job::_{{closure}}::_{{closure}} (30 samples, 0.02%)</title><rect x="0.8231%" y="181" width="0.0222%" height="15" fill="rgb(235,28,35)" fg:x="1113" fg:w="30"/><text x="1.0731%" y="191.50"></text></g><g><title>coprocessor-node`&lt;coprocessor_node::service::CoprocessorNodeServerInner&lt;S,D&gt; as proto::coprocessor_node_server::CoprocessorNode&gt;::submit_job::_{{closure}}::_{{closure}}::_{{closure}} (30 samples, 0.02%)</title><rect x="0.8231%" y="165" width="0.0222%" height="15" fill="rgb(210,56,17)" fg:x="1113" fg:w="30"/><text x="1.0731%" y="175.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (31 samples, 0.02%)</title><rect x="0.8231%" y="245" width="0.0229%" height="15" fill="rgb(224,130,29)" fg:x="1113" fg:w="31"/><text x="1.0731%" y="255.50"></text></g><g><title>coprocessor-node`&lt;&lt;proto::coprocessor_node_server::CoprocessorNodeServer&lt;T&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call::SubmitJobSvc&lt;T&gt; as tonic::server::service::UnaryService&lt;proto::SubmitJobRequest&gt;&gt;::call::_{{closure}} (31 samples, 0.02%)</title><rect x="0.8231%" y="229" width="0.0229%" height="15" fill="rgb(235,212,8)" fg:x="1113" fg:w="31"/><text x="1.0731%" y="239.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.8231%" y="405" width="0.0274%" height="15" fill="rgb(223,33,50)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="415.50"></text></g><g><title>coprocessor-node`&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.8231%" y="389" width="0.0274%" height="15" fill="rgb(219,149,13)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="399.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.8231%" y="373" width="0.0274%" height="15" fill="rgb(250,156,29)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="383.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.8231%" y="357" width="0.0274%" height="15" fill="rgb(216,193,19)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="367.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.8231%" y="341" width="0.0274%" height="15" fill="rgb(216,135,14)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="351.50"></text></g><g><title>coprocessor-node`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.8231%" y="325" width="0.0274%" height="15" fill="rgb(241,47,5)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="335.50"></text></g><g><title>coprocessor-node`&lt;F as futures_core::future::TryFuture&gt;::try_poll (37 samples, 0.03%)</title><rect x="0.8231%" y="309" width="0.0274%" height="15" fill="rgb(233,42,35)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="319.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.8231%" y="293" width="0.0274%" height="15" fill="rgb(231,13,6)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="303.50"></text></g><g><title>coprocessor-node`&lt;proto::coprocessor_node_server::CoprocessorNodeServer&lt;T&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call::_{{closure}} (37 samples, 0.03%)</title><rect x="0.8231%" y="277" width="0.0274%" height="15" fill="rgb(207,181,40)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="287.50"></text></g><g><title>coprocessor-node`tonic::server::grpc::Grpc&lt;T&gt;::unary::_{{closure}} (37 samples, 0.03%)</title><rect x="0.8231%" y="261" width="0.0274%" height="15" fill="rgb(254,173,49)" fg:x="1113" fg:w="37"/><text x="1.0731%" y="271.50"></text></g><g><title>coprocessor-node`&lt;tower::util::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="0.8231%" y="485" width="0.0281%" height="15" fill="rgb(221,1,38)" fg:x="1113" fg:w="38"/><text x="1.0731%" y="495.50"></text></g><g><title>coprocessor-node`&lt;tonic::transport::service::grpc_timeout::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="0.8231%" y="469" width="0.0281%" height="15" fill="rgb(206,124,46)" fg:x="1113" fg:w="38"/><text x="1.0731%" y="479.50"></text></g><g><title>coprocessor-node`&lt;tonic::service::router::RoutesFuture as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="0.8231%" y="453" width="0.0281%" height="15" fill="rgb(249,21,11)" fg:x="1113" fg:w="38"/><text x="1.0731%" y="463.50"></text></g><g><title>coprocessor-node`&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="0.8231%" y="437" width="0.0281%" height="15" fill="rgb(222,201,40)" fg:x="1113" fg:w="38"/><text x="1.0731%" y="447.50"></text></g><g><title>coprocessor-node`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="0.8231%" y="421" width="0.0281%" height="15" fill="rgb(235,61,29)" fg:x="1113" fg:w="38"/><text x="1.0731%" y="431.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (39 samples, 0.03%)</title><rect x="0.8231%" y="533" width="0.0288%" height="15" fill="rgb(219,207,3)" fg:x="1113" fg:w="39"/><text x="1.0731%" y="543.50"></text></g><g><title>coprocessor-node`&lt;tonic::transport::server::SvcFuture&lt;F&gt; as core::future::future::Future&gt;::poll (39 samples, 0.03%)</title><rect x="0.8231%" y="517" width="0.0288%" height="15" fill="rgb(222,56,46)" fg:x="1113" fg:w="39"/><text x="1.0731%" y="527.50"></text></g><g><title>coprocessor-node`&lt;tonic::transport::server::service::recover_error::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (39 samples, 0.03%)</title><rect x="0.8231%" y="501" width="0.0288%" height="15" fill="rgb(239,76,54)" fg:x="1113" fg:w="39"/><text x="1.0731%" y="511.50"></text></g><g><title>coprocessor-node`&lt;hyper_util::service::TowerToHyperServiceFuture&lt;S,R&gt; as core::future::future::Future&gt;::poll (41 samples, 0.03%)</title><rect x="0.8223%" y="565" width="0.0303%" height="15" fill="rgb(231,124,27)" fg:x="1112" fg:w="41"/><text x="1.0723%" y="575.50"></text></g><g><title>coprocessor-node`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (41 samples, 0.03%)</title><rect x="0.8223%" y="549" width="0.0303%" height="15" fill="rgb(249,195,6)" fg:x="1112" fg:w="41"/><text x="1.0723%" y="559.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h2::server::H2Stream&lt;F,B&gt; as core::future::future::Future&gt;::poll (55 samples, 0.04%)</title><rect x="0.8157%" y="597" width="0.0407%" height="15" fill="rgb(237,174,47)" fg:x="1103" fg:w="55"/><text x="1.0657%" y="607.50"></text></g><g><title>coprocessor-node`hyper::proto::h2::server::H2Stream&lt;F,B&gt;::poll2 (55 samples, 0.04%)</title><rect x="0.8157%" y="581" width="0.0407%" height="15" fill="rgb(206,201,31)" fg:x="1103" fg:w="55"/><text x="1.0657%" y="591.50"></text></g><g><title>coprocessor-node`&lt;alloy_rpc_client::call::RpcCall&lt;Conn,Params,Resp,Output,Map&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="0.8704%" y="453" width="0.0177%" height="15" fill="rgb(231,57,52)" fg:x="1177" fg:w="24"/><text x="1.1204%" y="463.50"></text></g><g><title>coprocessor-node`&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (30 samples, 0.02%)</title><rect x="0.8696%" y="549" width="0.0222%" height="15" fill="rgb(248,177,22)" fg:x="1176" fg:w="30"/><text x="1.1196%" y="559.50"></text></g><g><title>coprocessor-node`futures_util::stream::stream::StreamExt::poll_next_unpin (30 samples, 0.02%)</title><rect x="0.8696%" y="533" width="0.0222%" height="15" fill="rgb(215,211,37)" fg:x="1176" fg:w="30"/><text x="1.1196%" y="543.50"></text></g><g><title>coprocessor-node`&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.02%)</title><rect x="0.8696%" y="517" width="0.0222%" height="15" fill="rgb(241,128,51)" fg:x="1176" fg:w="30"/><text x="1.1196%" y="527.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.02%)</title><rect x="0.8696%" y="501" width="0.0222%" height="15" fill="rgb(227,165,31)" fg:x="1176" fg:w="30"/><text x="1.1196%" y="511.50"></text></g><g><title>coprocessor-node`&lt;async_stream::async_stream::AsyncStream&lt;T,U&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.02%)</title><rect x="0.8696%" y="485" width="0.0222%" height="15" fill="rgb(228,167,24)" fg:x="1176" fg:w="30"/><text x="1.1196%" y="495.50"></text></g><g><title>coprocessor-node`alloy_provider::chain::ChainStreamPoller&lt;T,N&gt;::into_stream::_{{closure}} (30 samples, 0.02%)</title><rect x="0.8696%" y="469" width="0.0222%" height="15" fill="rgb(228,143,12)" fg:x="1176" fg:w="30"/><text x="1.1196%" y="479.50"></text></g><g><title>coprocessor-node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="0.8689%" y="581" width="0.0244%" height="15" fill="rgb(249,149,8)" fg:x="1175" fg:w="33"/><text x="1.1189%" y="591.50"></text></g><g><title>coprocessor-node`alloy_provider::heart::Heartbeat&lt;S&gt;::into_future::_{{closure}}::_{{closure}} (33 samples, 0.02%)</title><rect x="0.8689%" y="565" width="0.0244%" height="15" fill="rgb(243,35,44)" fg:x="1175" fg:w="33"/><text x="1.1189%" y="575.50"></text></g><g><title>coprocessor-node`alloy_provider::heart::Heartbeat&lt;S&gt;::into_future::_{{closure}} (41 samples, 0.03%)</title><rect x="0.8674%" y="597" width="0.0303%" height="15" fill="rgb(246,89,9)" fg:x="1173" fg:w="41"/><text x="1.1174%" y="607.50"></text></g><g><title>coprocessor-node`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (840 samples, 0.62%)</title><rect x="0.2928%" y="613" width="0.6212%" height="15" fill="rgb(233,213,13)" fg:x="396" fg:w="840"/><text x="0.5428%" y="623.50"></text></g><g><title>coprocessor-node`tonic::transport::server::serve_connection::_{{closure}} (21 samples, 0.02%)</title><rect x="0.8985%" y="597" width="0.0155%" height="15" fill="rgb(233,141,41)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="607.50"></text></g><g><title>coprocessor-node`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.8985%" y="581" width="0.0155%" height="15" fill="rgb(239,167,4)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="591.50"></text></g><g><title>coprocessor-node`tonic::transport::server::serve_connection::_{{closure}}::_{{closure}} (21 samples, 0.02%)</title><rect x="0.8985%" y="565" width="0.0155%" height="15" fill="rgb(209,217,16)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="575.50"></text></g><g><title>coprocessor-node`&lt;&amp;mut F as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.8985%" y="549" width="0.0155%" height="15" fill="rgb(219,88,35)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="559.50"></text></g><g><title>coprocessor-node`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.8985%" y="533" width="0.0155%" height="15" fill="rgb(220,193,23)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="543.50"></text></g><g><title>coprocessor-node`&lt;hyper_util::server::conn::auto::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.8985%" y="517" width="0.0155%" height="15" fill="rgb(230,90,52)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="527.50"></text></g><g><title>coprocessor-node`&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.8985%" y="501" width="0.0155%" height="15" fill="rgb(252,106,19)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="511.50"></text></g><g><title>coprocessor-node`&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.8985%" y="485" width="0.0155%" height="15" fill="rgb(206,74,20)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="495.50"></text></g><g><title>coprocessor-node`hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (21 samples, 0.02%)</title><rect x="0.8985%" y="469" width="0.0155%" height="15" fill="rgb(230,138,44)" fg:x="1215" fg:w="21"/><text x="1.1485%" y="479.50"></text></g><g><title>coprocessor-node`h2::server::Connection&lt;T,B&gt;::poll_accept (20 samples, 0.01%)</title><rect x="0.8992%" y="453" width="0.0148%" height="15" fill="rgb(235,182,43)" fg:x="1216" fg:w="20"/><text x="1.1492%" y="463.50"></text></g><g><title>coprocessor-node`h2::server::Connection&lt;T,B&gt;::poll_closed (20 samples, 0.01%)</title><rect x="0.8992%" y="437" width="0.0148%" height="15" fill="rgb(242,16,51)" fg:x="1216" fg:w="20"/><text x="1.1492%" y="447.50"></text></g><g><title>coprocessor-node`h2::proto::connection::Connection&lt;T,P,B&gt;::poll (20 samples, 0.01%)</title><rect x="0.8992%" y="421" width="0.0148%" height="15" fill="rgb(248,9,4)" fg:x="1216" fg:w="20"/><text x="1.1492%" y="431.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::harness::poll_future (851 samples, 0.63%)</title><rect x="0.2854%" y="757" width="0.6293%" height="15" fill="rgb(210,31,22)" fg:x="386" fg:w="851"/><text x="0.5354%" y="767.50"></text></g><g><title>coprocessor-node`std::panic::catch_unwind (851 samples, 0.63%)</title><rect x="0.2854%" y="741" width="0.6293%" height="15" fill="rgb(239,54,39)" fg:x="386" fg:w="851"/><text x="0.5354%" y="751.50"></text></g><g><title>coprocessor-node`std::panicking::try (850 samples, 0.63%)</title><rect x="0.2862%" y="725" width="0.6286%" height="15" fill="rgb(230,99,41)" fg:x="387" fg:w="850"/><text x="0.5362%" y="735.50"></text></g><g><title>coprocessor-node`__rust_try (850 samples, 0.63%)</title><rect x="0.2862%" y="709" width="0.6286%" height="15" fill="rgb(253,106,12)" fg:x="387" fg:w="850"/><text x="0.5362%" y="719.50"></text></g><g><title>coprocessor-node`std::panicking::try::do_call (849 samples, 0.63%)</title><rect x="0.2869%" y="693" width="0.6278%" height="15" fill="rgb(213,46,41)" fg:x="388" fg:w="849"/><text x="0.5369%" y="703.50"></text></g><g><title>coprocessor-node`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (849 samples, 0.63%)</title><rect x="0.2869%" y="677" width="0.6278%" height="15" fill="rgb(215,133,35)" fg:x="388" fg:w="849"/><text x="0.5369%" y="687.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::harness::poll_future::_{{closure}} (847 samples, 0.63%)</title><rect x="0.2884%" y="661" width="0.6264%" height="15" fill="rgb(213,28,5)" fg:x="390" fg:w="847"/><text x="0.5384%" y="671.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (844 samples, 0.62%)</title><rect x="0.2906%" y="645" width="0.6241%" height="15" fill="rgb(215,77,49)" fg:x="393" fg:w="844"/><text x="0.5406%" y="655.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (841 samples, 0.62%)</title><rect x="0.2928%" y="629" width="0.6219%" height="15" fill="rgb(248,100,22)" fg:x="396" fg:w="841"/><text x="0.5428%" y="639.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (854 samples, 0.63%)</title><rect x="0.2847%" y="773" width="0.6315%" height="15" fill="rgb(208,67,9)" fg:x="385" fg:w="854"/><text x="0.5347%" y="783.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::raw::RawTask::poll (860 samples, 0.64%)</title><rect x="0.2832%" y="821" width="0.6360%" height="15" fill="rgb(219,133,21)" fg:x="383" fg:w="860"/><text x="0.5332%" y="831.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::raw::poll (860 samples, 0.64%)</title><rect x="0.2832%" y="805" width="0.6360%" height="15" fill="rgb(246,46,29)" fg:x="383" fg:w="860"/><text x="0.5332%" y="815.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (860 samples, 0.64%)</title><rect x="0.2832%" y="789" width="0.6360%" height="15" fill="rgb(246,185,52)" fg:x="383" fg:w="860"/><text x="0.5332%" y="799.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (863 samples, 0.64%)</title><rect x="0.2817%" y="853" width="0.6382%" height="15" fill="rgb(252,136,11)" fg:x="381" fg:w="863"/><text x="0.5317%" y="863.50"></text></g><g><title>coprocessor-node`tokio::runtime::task::LocalNotified&lt;S&gt;::run (861 samples, 0.64%)</title><rect x="0.2832%" y="837" width="0.6367%" height="15" fill="rgb(219,138,53)" fg:x="383" fg:w="861"/><text x="0.5332%" y="847.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (870 samples, 0.64%)</title><rect x="0.2803%" y="869" width="0.6434%" height="15" fill="rgb(211,51,23)" fg:x="379" fg:w="870"/><text x="0.5303%" y="879.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (1,034 samples, 0.76%)</title><rect x="0.1634%" y="1045" width="0.7646%" height="15" fill="rgb(247,221,28)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="1055.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::run (1,034 samples, 0.76%)</title><rect x="0.1634%" y="1029" width="0.7646%" height="15" fill="rgb(251,222,45)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="1039.50"></text></g><g><title>coprocessor-node`tokio::runtime::context::runtime::enter_runtime (1,034 samples, 0.76%)</title><rect x="0.1634%" y="1013" width="0.7646%" height="15" fill="rgb(217,162,53)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="1023.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (1,034 samples, 0.76%)</title><rect x="0.1634%" y="997" width="0.7646%" height="15" fill="rgb(229,93,14)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="1007.50"></text></g><g><title>coprocessor-node`tokio::runtime::context::set_scheduler (1,034 samples, 0.76%)</title><rect x="0.1634%" y="981" width="0.7646%" height="15" fill="rgb(209,67,49)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="991.50"></text></g><g><title>coprocessor-node`std::thread::local::LocalKey&lt;T&gt;::with (1,034 samples, 0.76%)</title><rect x="0.1634%" y="965" width="0.7646%" height="15" fill="rgb(213,87,29)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="975.50"></text></g><g><title>coprocessor-node`std::thread::local::LocalKey&lt;T&gt;::try_with (1,034 samples, 0.76%)</title><rect x="0.1634%" y="949" width="0.7646%" height="15" fill="rgb(205,151,52)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="959.50"></text></g><g><title>coprocessor-node`tokio::runtime::context::set_scheduler::_{{closure}} (1,034 samples, 0.76%)</title><rect x="0.1634%" y="933" width="0.7646%" height="15" fill="rgb(253,215,39)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="943.50"></text></g><g><title>coprocessor-node`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1,034 samples, 0.76%)</title><rect x="0.1634%" y="917" width="0.7646%" height="15" fill="rgb(221,220,41)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="927.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (1,034 samples, 0.76%)</title><rect x="0.1634%" y="901" width="0.7646%" height="15" fill="rgb(218,133,21)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="911.50"></text></g><g><title>coprocessor-node`tokio::runtime::scheduler::multi_thread::worker::Context::run (1,034 samples, 0.76%)</title><rect x="0.1634%" y="885" width="0.7646%" height="15" fill="rgb(221,193,43)" fg:x="221" fg:w="1034"/><text x="0.4134%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (40 samples, 0.03%)</title><rect x="0.9399%" y="853" width="0.0296%" height="15" fill="rgb(240,128,52)" fg:x="1271" fg:w="40"/><text x="1.1899%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (44 samples, 0.03%)</title><rect x="0.9377%" y="869" width="0.0325%" height="15" fill="rgb(253,114,12)" fg:x="1268" fg:w="44"/><text x="1.1877%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::mem::replace (52 samples, 0.04%)</title><rect x="0.9340%" y="885" width="0.0385%" height="15" fill="rgb(215,223,47)" fg:x="1263" fg:w="52"/><text x="1.1840%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (59 samples, 0.04%)</title><rect x="0.9310%" y="917" width="0.0436%" height="15" fill="rgb(248,225,23)" fg:x="1259" fg:w="59"/><text x="1.1810%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (57 samples, 0.04%)</title><rect x="0.9325%" y="901" width="0.0422%" height="15" fill="rgb(250,108,0)" fg:x="1261" fg:w="57"/><text x="1.1825%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (17 samples, 0.01%)</title><rect x="1.0175%" y="821" width="0.0126%" height="15" fill="rgb(228,208,7)" fg:x="1376" fg:w="17"/><text x="1.2675%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.01%)</title><rect x="1.0183%" y="805" width="0.0118%" height="15" fill="rgb(244,45,10)" fg:x="1377" fg:w="16"/><text x="1.2683%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free_small (55 samples, 0.04%)</title><rect x="0.9991%" y="837" width="0.0407%" height="15" fill="rgb(207,125,25)" fg:x="1351" fg:w="55"/><text x="1.2491%" y="847.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (68 samples, 0.05%)</title><rect x="0.9902%" y="853" width="0.0503%" height="15" fill="rgb(210,195,18)" fg:x="1339" fg:w="68"/><text x="1.2402%" y="863.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_binfmt::image::MemoryImage&gt; (165 samples, 0.12%)</title><rect x="0.9288%" y="997" width="0.1220%" height="15" fill="rgb(249,80,12)" fg:x="1256" fg:w="165"/><text x="1.1788%" y="1007.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (165 samples, 0.12%)</title><rect x="0.9288%" y="981" width="0.1220%" height="15" fill="rgb(221,65,9)" fg:x="1256" fg:w="165"/><text x="1.1788%" y="991.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.12%)</title><rect x="0.9288%" y="965" width="0.1220%" height="15" fill="rgb(235,49,36)" fg:x="1256" fg:w="165"/><text x="1.1788%" y="975.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (165 samples, 0.12%)</title><rect x="0.9288%" y="949" width="0.1220%" height="15" fill="rgb(225,32,20)" fg:x="1256" fg:w="165"/><text x="1.1788%" y="959.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.12%)</title><rect x="0.9288%" y="933" width="0.1220%" height="15" fill="rgb(215,141,46)" fg:x="1256" fg:w="165"/><text x="1.1788%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (103 samples, 0.08%)</title><rect x="0.9747%" y="917" width="0.0762%" height="15" fill="rgb(250,160,47)" fg:x="1318" fg:w="103"/><text x="1.2247%" y="927.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (92 samples, 0.07%)</title><rect x="0.9828%" y="901" width="0.0680%" height="15" fill="rgb(216,222,40)" fg:x="1329" fg:w="92"/><text x="1.2328%" y="911.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (91 samples, 0.07%)</title><rect x="0.9835%" y="885" width="0.0673%" height="15" fill="rgb(234,217,39)" fg:x="1330" fg:w="91"/><text x="1.2335%" y="895.50"></text></g><g><title>coprocessor-node`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.07%)</title><rect x="0.9835%" y="869" width="0.0673%" height="15" fill="rgb(207,178,40)" fg:x="1330" fg:w="91"/><text x="1.2335%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (16 samples, 0.01%)</title><rect x="1.0848%" y="821" width="0.0118%" height="15" fill="rgb(221,136,13)" fg:x="1467" fg:w="16"/><text x="1.3348%" y="831.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (55 samples, 0.04%)</title><rect x="1.0678%" y="837" width="0.0407%" height="15" fill="rgb(249,199,10)" fg:x="1444" fg:w="55"/><text x="1.3178%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (14 samples, 0.01%)</title><rect x="1.0982%" y="821" width="0.0104%" height="15" fill="rgb(249,222,13)" fg:x="1485" fg:w="14"/><text x="1.3482%" y="831.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (66 samples, 0.05%)</title><rect x="1.0641%" y="853" width="0.0488%" height="15" fill="rgb(244,185,38)" fg:x="1439" fg:w="66"/><text x="1.3141%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::mem::replace (75 samples, 0.06%)</title><rect x="1.0597%" y="869" width="0.0555%" height="15" fill="rgb(236,202,9)" fg:x="1433" fg:w="75"/><text x="1.3097%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (84 samples, 0.06%)</title><rect x="1.0545%" y="901" width="0.0621%" height="15" fill="rgb(250,229,37)" fg:x="1426" fg:w="84"/><text x="1.3045%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (80 samples, 0.06%)</title><rect x="1.0575%" y="885" width="0.0592%" height="15" fill="rgb(206,174,23)" fg:x="1430" fg:w="80"/><text x="1.3075%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (18 samples, 0.01%)</title><rect x="1.1654%" y="805" width="0.0133%" height="15" fill="rgb(211,33,43)" fg:x="1576" fg:w="18"/><text x="1.4154%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.01%)</title><rect x="1.1654%" y="789" width="0.0133%" height="15" fill="rgb(245,58,50)" fg:x="1576" fg:w="18"/><text x="1.4154%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_small (56 samples, 0.04%)</title><rect x="1.1462%" y="821" width="0.0414%" height="15" fill="rgb(244,68,36)" fg:x="1550" fg:w="56"/><text x="1.3962%" y="831.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63 samples, 0.05%)</title><rect x="1.1418%" y="837" width="0.0466%" height="15" fill="rgb(232,229,15)" fg:x="1544" fg:w="63"/><text x="1.3918%" y="847.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_binfmt::image::MemoryImage&gt; (211 samples, 0.16%)</title><rect x="1.0508%" y="981" width="0.1560%" height="15" fill="rgb(254,30,23)" fg:x="1421" fg:w="211"/><text x="1.3008%" y="991.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (211 samples, 0.16%)</title><rect x="1.0508%" y="965" width="0.1560%" height="15" fill="rgb(235,160,14)" fg:x="1421" fg:w="211"/><text x="1.3008%" y="975.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (211 samples, 0.16%)</title><rect x="1.0508%" y="949" width="0.1560%" height="15" fill="rgb(212,155,44)" fg:x="1421" fg:w="211"/><text x="1.3008%" y="959.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (211 samples, 0.16%)</title><rect x="1.0508%" y="933" width="0.1560%" height="15" fill="rgb(226,2,50)" fg:x="1421" fg:w="211"/><text x="1.3008%" y="943.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (211 samples, 0.16%)</title><rect x="1.0508%" y="917" width="0.1560%" height="15" fill="rgb(234,177,6)" fg:x="1421" fg:w="211"/><text x="1.3008%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (122 samples, 0.09%)</title><rect x="1.1166%" y="901" width="0.0902%" height="15" fill="rgb(217,24,9)" fg:x="1510" fg:w="122"/><text x="1.3666%" y="911.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (92 samples, 0.07%)</title><rect x="1.1388%" y="885" width="0.0680%" height="15" fill="rgb(220,13,46)" fg:x="1540" fg:w="92"/><text x="1.3888%" y="895.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (89 samples, 0.07%)</title><rect x="1.1410%" y="869" width="0.0658%" height="15" fill="rgb(239,221,27)" fg:x="1543" fg:w="89"/><text x="1.3910%" y="879.50"></text></g><g><title>coprocessor-node`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.07%)</title><rect x="1.1418%" y="853" width="0.0651%" height="15" fill="rgb(222,198,25)" fg:x="1544" fg:w="88"/><text x="1.3918%" y="863.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_zkvm::host::server::exec::executor::ExecutorImpl&gt; (213 samples, 0.16%)</title><rect x="1.0508%" y="997" width="0.1575%" height="15" fill="rgb(211,99,13)" fg:x="1421" fg:w="213"/><text x="1.3008%" y="1007.50"></text></g><g><title>coprocessor-node`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="1.2091%" y="981" width="0.0155%" height="15" fill="rgb(232,111,31)" fg:x="1635" fg:w="21"/><text x="1.4591%" y="991.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (27 samples, 0.02%)</title><rect x="1.2830%" y="821" width="0.0200%" height="15" fill="rgb(245,82,37)" fg:x="1735" fg:w="27"/><text x="1.5330%" y="831.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (72 samples, 0.05%)</title><rect x="1.2608%" y="837" width="0.0532%" height="15" fill="rgb(227,149,46)" fg:x="1705" fg:w="72"/><text x="1.5108%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (84 samples, 0.06%)</title><rect x="1.2549%" y="853" width="0.0621%" height="15" fill="rgb(218,36,50)" fg:x="1697" fg:w="84"/><text x="1.5049%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::mem::replace (102 samples, 0.08%)</title><rect x="1.2453%" y="869" width="0.0754%" height="15" fill="rgb(226,80,48)" fg:x="1684" fg:w="102"/><text x="1.4953%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (116 samples, 0.09%)</title><rect x="1.2357%" y="901" width="0.0858%" height="15" fill="rgb(238,224,15)" fg:x="1671" fg:w="116"/><text x="1.4857%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (106 samples, 0.08%)</title><rect x="1.2431%" y="885" width="0.0784%" height="15" fill="rgb(241,136,10)" fg:x="1681" fg:w="106"/><text x="1.4931%" y="895.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_binfmt::elf::Program&gt; (158 samples, 0.12%)</title><rect x="1.2313%" y="981" width="0.1168%" height="15" fill="rgb(208,32,45)" fg:x="1665" fg:w="158"/><text x="1.4813%" y="991.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u32,u32&gt;&gt; (158 samples, 0.12%)</title><rect x="1.2313%" y="965" width="0.1168%" height="15" fill="rgb(207,135,9)" fg:x="1665" fg:w="158"/><text x="1.4813%" y="975.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.12%)</title><rect x="1.2313%" y="949" width="0.1168%" height="15" fill="rgb(206,86,44)" fg:x="1665" fg:w="158"/><text x="1.4813%" y="959.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u32,u32&gt;&gt; (158 samples, 0.12%)</title><rect x="1.2313%" y="933" width="0.1168%" height="15" fill="rgb(245,177,15)" fg:x="1665" fg:w="158"/><text x="1.4813%" y="943.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.12%)</title><rect x="1.2313%" y="917" width="0.1168%" height="15" fill="rgb(206,64,50)" fg:x="1665" fg:w="158"/><text x="1.4813%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (36 samples, 0.03%)</title><rect x="1.3215%" y="901" width="0.0266%" height="15" fill="rgb(234,36,40)" fg:x="1787" fg:w="36"/><text x="1.5715%" y="911.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="1.4124%" y="965" width="0.0251%" height="15" fill="rgb(213,64,8)" fg:x="1910" fg:w="34"/><text x="1.6624%" y="975.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;u32&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;u32&gt;&gt;&gt;::spec_next (32 samples, 0.02%)</title><rect x="1.4139%" y="949" width="0.0237%" height="15" fill="rgb(210,75,36)" fg:x="1912" fg:w="32"/><text x="1.6639%" y="959.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (38 samples, 0.03%)</title><rect x="1.5396%" y="917" width="0.0281%" height="15" fill="rgb(229,88,21)" fg:x="2082" fg:w="38"/><text x="1.7896%" y="927.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (368 samples, 0.27%)</title><rect x="1.7918%" y="885" width="0.2721%" height="15" fill="rgb(252,204,47)" fg:x="2423" fg:w="368"/><text x="2.0418%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (24 samples, 0.02%)</title><rect x="2.1031%" y="869" width="0.0177%" height="15" fill="rgb(208,77,27)" fg:x="2844" fg:w="24"/><text x="2.3531%" y="879.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (89 samples, 0.07%)</title><rect x="2.0639%" y="885" width="0.0658%" height="15" fill="rgb(221,76,26)" fg:x="2791" fg:w="89"/><text x="2.3139%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (523 samples, 0.39%)</title><rect x="2.1298%" y="885" width="0.3868%" height="15" fill="rgb(225,139,18)" fg:x="2880" fg:w="523"/><text x="2.3798%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (23 samples, 0.02%)</title><rect x="2.5934%" y="853" width="0.0170%" height="15" fill="rgb(230,137,11)" fg:x="3507" fg:w="23"/><text x="2.8434%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,370 samples, 1.01%)</title><rect x="1.6032%" y="901" width="1.0131%" height="15" fill="rgb(212,28,1)" fg:x="2168" fg:w="1370"/><text x="1.8532%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (135 samples, 0.10%)</title><rect x="2.5165%" y="885" width="0.0998%" height="15" fill="rgb(248,164,17)" fg:x="3403" fg:w="135"/><text x="2.7665%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (98 samples, 0.07%)</title><rect x="2.5439%" y="869" width="0.0725%" height="15" fill="rgb(222,171,42)" fg:x="3440" fg:w="98"/><text x="2.7939%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,654 samples, 1.22%)</title><rect x="1.4487%" y="949" width="1.2231%" height="15" fill="rgb(243,84,45)" fg:x="1959" fg:w="1654"/><text x="1.6987%" y="959.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,644 samples, 1.22%)</title><rect x="1.4561%" y="933" width="1.2157%" height="15" fill="rgb(252,49,23)" fg:x="1969" fg:w="1644"/><text x="1.7061%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,481 samples, 1.10%)</title><rect x="1.5766%" y="917" width="1.0952%" height="15" fill="rgb(215,19,7)" fg:x="2132" fg:w="1481"/><text x="1.8266%" y="927.50"></text></g><g><title>coprocessor-node`core::cmp::impls::_&lt;impl core::cmp::Ord for u32&gt;::cmp (75 samples, 0.06%)</title><rect x="2.6163%" y="901" width="0.0555%" height="15" fill="rgb(238,81,41)" fg:x="3538" fg:w="75"/><text x="2.8663%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (19 samples, 0.01%)</title><rect x="2.7354%" y="885" width="0.0141%" height="15" fill="rgb(210,199,37)" fg:x="3699" fg:w="19"/><text x="2.9854%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (41 samples, 0.03%)</title><rect x="2.7228%" y="901" width="0.0303%" height="15" fill="rgb(244,192,49)" fg:x="3682" fg:w="41"/><text x="2.9728%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (74 samples, 0.05%)</title><rect x="2.7184%" y="917" width="0.0547%" height="15" fill="rgb(226,211,11)" fg:x="3676" fg:w="74"/><text x="2.9684%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;::split (27 samples, 0.02%)</title><rect x="2.7531%" y="901" width="0.0200%" height="15" fill="rgb(236,162,54)" fg:x="3723" fg:w="27"/><text x="3.0031%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (46 samples, 0.03%)</title><rect x="2.8471%" y="885" width="0.0340%" height="15" fill="rgb(220,229,9)" fg:x="3850" fg:w="46"/><text x="3.0971%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (37 samples, 0.03%)</title><rect x="2.8537%" y="869" width="0.0274%" height="15" fill="rgb(250,87,22)" fg:x="3859" fg:w="37"/><text x="3.1037%" y="879.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (25 samples, 0.02%)</title><rect x="2.8626%" y="853" width="0.0185%" height="15" fill="rgb(239,43,17)" fg:x="3871" fg:w="25"/><text x="3.1126%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (28 samples, 0.02%)</title><rect x="2.8840%" y="853" width="0.0207%" height="15" fill="rgb(231,177,25)" fg:x="3900" fg:w="28"/><text x="3.1340%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (33 samples, 0.02%)</title><rect x="2.8811%" y="885" width="0.0244%" height="15" fill="rgb(219,179,1)" fg:x="3896" fg:w="33"/><text x="3.1311%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (31 samples, 0.02%)</title><rect x="2.8826%" y="869" width="0.0229%" height="15" fill="rgb(238,219,53)" fg:x="3898" fg:w="31"/><text x="3.1326%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (117 samples, 0.09%)</title><rect x="2.8256%" y="901" width="0.0865%" height="15" fill="rgb(232,167,36)" fg:x="3821" fg:w="117"/><text x="3.0756%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::move_to_slice (26 samples, 0.02%)</title><rect x="2.9365%" y="869" width="0.0192%" height="15" fill="rgb(244,19,51)" fg:x="3971" fg:w="26"/><text x="3.1865%" y="879.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (21 samples, 0.02%)</title><rect x="2.9402%" y="853" width="0.0155%" height="15" fill="rgb(224,6,22)" fg:x="3976" fg:w="21"/><text x="3.1902%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (63 samples, 0.05%)</title><rect x="2.9121%" y="885" width="0.0466%" height="15" fill="rgb(224,145,5)" fg:x="3938" fg:w="63"/><text x="3.1621%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (81 samples, 0.06%)</title><rect x="2.9121%" y="901" width="0.0599%" height="15" fill="rgb(234,130,49)" fg:x="3938" fg:w="81"/><text x="3.1621%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (18 samples, 0.01%)</title><rect x="2.9587%" y="885" width="0.0133%" height="15" fill="rgb(254,6,2)" fg:x="4001" fg:w="18"/><text x="3.2087%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (275 samples, 0.20%)</title><rect x="2.7731%" y="917" width="0.2034%" height="15" fill="rgb(208,96,46)" fg:x="3750" fg:w="275"/><text x="3.0231%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (384 samples, 0.28%)</title><rect x="2.7066%" y="933" width="0.2840%" height="15" fill="rgb(239,3,39)" fg:x="3660" fg:w="384"/><text x="2.9566%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.01%)</title><rect x="2.9787%" y="917" width="0.0118%" height="15" fill="rgb(233,210,1)" fg:x="4028" fg:w="16"/><text x="3.2287%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (433 samples, 0.32%)</title><rect x="2.6718%" y="949" width="0.3202%" height="15" fill="rgb(244,137,37)" fg:x="3613" fg:w="433"/><text x="2.9218%" y="959.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,109 samples, 1.56%)</title><rect x="1.4391%" y="965" width="1.5596%" height="15" fill="rgb(240,136,2)" fg:x="1946" fg:w="2109"/><text x="1.6891%" y="975.50"></text></g><g><title>coprocessor-node`anyhow::context::_&lt;impl anyhow::Context&lt;T,core::convert::Infallible&gt; for core::option::Option&lt;T&gt;&gt;::context (58 samples, 0.04%)</title><rect x="2.9994%" y="965" width="0.0429%" height="15" fill="rgb(239,18,37)" fg:x="4056" fg:w="58"/><text x="3.2494%" y="975.50"></text></g><g><title>coprocessor-node`core::cmp::min (19 samples, 0.01%)</title><rect x="3.0423%" y="965" width="0.0141%" height="15" fill="rgb(218,185,22)" fg:x="4114" fg:w="19"/><text x="3.2923%" y="975.50"></text></g><g><title>coprocessor-node`core::cmp::Ord::min (16 samples, 0.01%)</title><rect x="3.0445%" y="949" width="0.0118%" height="15" fill="rgb(225,218,4)" fg:x="4117" fg:w="16"/><text x="3.2945%" y="959.50"></text></g><g><title>coprocessor-node`core::cmp::min_by (15 samples, 0.01%)</title><rect x="3.0452%" y="933" width="0.0111%" height="15" fill="rgb(230,182,32)" fg:x="4118" fg:w="15"/><text x="3.2952%" y="943.50"></text></g><g><title>coprocessor-node`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (63 samples, 0.05%)</title><rect x="3.0563%" y="965" width="0.0466%" height="15" fill="rgb(242,56,43)" fg:x="4133" fg:w="63"/><text x="3.3063%" y="975.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (57 samples, 0.04%)</title><rect x="3.0608%" y="949" width="0.0422%" height="15" fill="rgb(233,99,24)" fg:x="4139" fg:w="57"/><text x="3.3108%" y="959.50"></text></g><g><title>coprocessor-node`&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (23 samples, 0.02%)</title><rect x="3.0859%" y="933" width="0.0170%" height="15" fill="rgb(234,209,42)" fg:x="4173" fg:w="23"/><text x="3.3359%" y="943.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::get (44 samples, 0.03%)</title><rect x="3.1029%" y="965" width="0.0325%" height="15" fill="rgb(227,7,12)" fg:x="4196" fg:w="44"/><text x="3.3529%" y="975.50"></text></g><g><title>coprocessor-node`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (39 samples, 0.03%)</title><rect x="3.1066%" y="949" width="0.0288%" height="15" fill="rgb(245,203,43)" fg:x="4201" fg:w="39"/><text x="3.3566%" y="959.50"></text></g><g><title>coprocessor-node`risc0_binfmt::elf::Program::load_elf (2,422 samples, 1.79%)</title><rect x="1.3481%" y="981" width="1.7911%" height="15" fill="rgb(238,205,33)" fg:x="1823" fg:w="2422"/><text x="1.5981%" y="991.50">c..</text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (36 samples, 0.03%)</title><rect x="3.1924%" y="917" width="0.0266%" height="15" fill="rgb(231,56,7)" fg:x="4317" fg:w="36"/><text x="3.4424%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (28 samples, 0.02%)</title><rect x="3.2190%" y="917" width="0.0207%" height="15" fill="rgb(244,186,29)" fg:x="4353" fg:w="28"/><text x="3.4690%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (22 samples, 0.02%)</title><rect x="3.2397%" y="917" width="0.0163%" height="15" fill="rgb(234,111,31)" fg:x="4381" fg:w="22"/><text x="3.4897%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::mem::replace (135 samples, 0.10%)</title><rect x="3.1591%" y="949" width="0.0998%" height="15" fill="rgb(241,149,10)" fg:x="4272" fg:w="135"/><text x="3.4091%" y="959.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (104 samples, 0.08%)</title><rect x="3.1821%" y="933" width="0.0769%" height="15" fill="rgb(249,206,44)" fg:x="4303" fg:w="104"/><text x="3.4321%" y="943.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.11%)</title><rect x="3.1532%" y="965" width="0.1102%" height="15" fill="rgb(251,153,30)" fg:x="4264" fg:w="149"/><text x="3.4032%" y="975.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (403 samples, 0.30%)</title><rect x="3.3292%" y="917" width="0.2980%" height="15" fill="rgb(239,152,38)" fg:x="4502" fg:w="403"/><text x="3.5792%" y="927.50"></text></g><g><title>coprocessor-node`&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (344 samples, 0.25%)</title><rect x="3.3728%" y="901" width="0.2544%" height="15" fill="rgb(249,139,47)" fg:x="4561" fg:w="344"/><text x="3.6228%" y="911.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl u32&gt;::unchecked_add::precondition_check (29 samples, 0.02%)</title><rect x="3.6058%" y="885" width="0.0214%" height="15" fill="rgb(244,64,35)" fg:x="4876" fg:w="29"/><text x="3.8558%" y="895.50"></text></g><g><title>coprocessor-node`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (419 samples, 0.31%)</title><rect x="3.3181%" y="933" width="0.3098%" height="15" fill="rgb(216,46,15)" fg:x="4487" fg:w="419"/><text x="3.5681%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (17 samples, 0.01%)</title><rect x="3.6827%" y="917" width="0.0126%" height="15" fill="rgb(250,74,19)" fg:x="4980" fg:w="17"/><text x="3.9327%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert_with (30 samples, 0.02%)</title><rect x="3.6997%" y="917" width="0.0222%" height="15" fill="rgb(249,42,33)" fg:x="5003" fg:w="30"/><text x="3.9497%" y="927.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="3.7596%" y="901" width="0.0185%" height="15" fill="rgb(242,149,17)" fg:x="5084" fg:w="25"/><text x="4.0096%" y="911.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts::precondition_check (18 samples, 0.01%)</title><rect x="3.7648%" y="885" width="0.0133%" height="15" fill="rgb(244,29,21)" fg:x="5091" fg:w="18"/><text x="4.0148%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (665 samples, 0.49%)</title><rect x="5.1417%" y="869" width="0.4918%" height="15" fill="rgb(220,130,37)" fg:x="6953" fg:w="665"/><text x="5.3917%" y="879.50"></text></g><g><title>coprocessor-node`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (130 samples, 0.10%)</title><rect x="5.5374%" y="853" width="0.0961%" height="15" fill="rgb(211,67,2)" fg:x="7488" fg:w="130"/><text x="5.7874%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (134 samples, 0.10%)</title><rect x="5.6335%" y="869" width="0.0991%" height="15" fill="rgb(235,68,52)" fg:x="7618" fg:w="134"/><text x="5.8835%" y="879.50"></text></g><g><title>coprocessor-node`&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (70 samples, 0.05%)</title><rect x="6.1681%" y="853" width="0.0518%" height="15" fill="rgb(246,142,3)" fg:x="8341" fg:w="70"/><text x="6.4181%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,246 samples, 0.92%)</title><rect x="8.2905%" y="837" width="0.9214%" height="15" fill="rgb(241,25,7)" fg:x="11211" fg:w="1246"/><text x="8.5405%" y="847.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (370 samples, 0.27%)</title><rect x="9.8752%" y="821" width="0.2736%" height="15" fill="rgb(242,119,39)" fg:x="13354" fg:w="370"/><text x="10.1252%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,462 samples, 1.08%)</title><rect x="9.2119%" y="837" width="1.0811%" height="15" fill="rgb(241,98,45)" fg:x="12457" fg:w="1462"/><text x="9.4619%" y="847.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_sub::precondition_check (195 samples, 0.14%)</title><rect x="10.1489%" y="821" width="0.1442%" height="15" fill="rgb(254,28,30)" fg:x="13724" fg:w="195"/><text x="10.3989%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,620 samples, 1.20%)</title><rect x="10.2931%" y="837" width="1.1980%" height="15" fill="rgb(241,142,54)" fg:x="13919" fg:w="1620"/><text x="10.5431%" y="847.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (286 samples, 0.21%)</title><rect x="12.6816%" y="805" width="0.2115%" height="15" fill="rgb(222,85,15)" fg:x="17149" fg:w="286"/><text x="12.9316%" y="815.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,404 samples, 1.04%)</title><rect x="11.9939%" y="821" width="1.0383%" height="15" fill="rgb(210,85,47)" fg:x="16219" fg:w="1404"/><text x="12.2439%" y="831.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_sub::precondition_check (188 samples, 0.14%)</title><rect x="12.8931%" y="805" width="0.1390%" height="15" fill="rgb(224,206,25)" fg:x="17435" fg:w="188"/><text x="13.1431%" y="815.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (2,096 samples, 1.55%)</title><rect x="11.4910%" y="837" width="1.5500%" height="15" fill="rgb(243,201,19)" fg:x="15539" fg:w="2096"/><text x="11.7410%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9,230 samples, 6.83%)</title><rect x="6.2207%" y="853" width="6.8256%" height="15" fill="rgb(236,59,4)" fg:x="8412" fg:w="9230"/><text x="6.4707%" y="863.50">coprocess..</text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (12,924 samples, 9.56%)</title><rect x="3.7884%" y="901" width="9.5573%" height="15" fill="rgb(254,179,45)" fg:x="5123" fg:w="12924"/><text x="4.0384%" y="911.50">coprocessor-no..</text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12,452 samples, 9.21%)</title><rect x="4.1375%" y="885" width="9.2082%" height="15" fill="rgb(226,14,10)" fg:x="5595" fg:w="12452"/><text x="4.3875%" y="895.50">coprocessor-n..</text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10,295 samples, 7.61%)</title><rect x="5.7326%" y="869" width="7.6131%" height="15" fill="rgb(244,27,41)" fg:x="7752" fg:w="10295"/><text x="5.9826%" y="879.50">coprocesso..</text></g><g><title>coprocessor-node`core::cmp::impls::_&lt;impl core::cmp::Ord for u32&gt;::cmp (405 samples, 0.30%)</title><rect x="13.0462%" y="853" width="0.2995%" height="15" fill="rgb(235,35,32)" fg:x="17642" fg:w="405"/><text x="13.2962%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (37 samples, 0.03%)</title><rect x="13.3457%" y="901" width="0.0274%" height="15" fill="rgb(218,68,31)" fg:x="18047" fg:w="37"/><text x="13.5957%" y="911.50"></text></g><g><title>coprocessor-node`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.02%)</title><rect x="13.6578%" y="885" width="0.0170%" height="15" fill="rgb(207,120,37)" fg:x="18469" fg:w="23"/><text x="13.9078%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (360 samples, 0.27%)</title><rect x="13.6822%" y="885" width="0.2662%" height="15" fill="rgb(227,98,0)" fg:x="18502" fg:w="360"/><text x="13.9322%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (36 samples, 0.03%)</title><rect x="13.9491%" y="869" width="0.0266%" height="15" fill="rgb(207,7,3)" fg:x="18863" fg:w="36"/><text x="14.1991%" y="879.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (67 samples, 0.05%)</title><rect x="13.9491%" y="885" width="0.0495%" height="15" fill="rgb(206,98,19)" fg:x="18863" fg:w="67"/><text x="14.1991%" y="895.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_sub::precondition_check (31 samples, 0.02%)</title><rect x="13.9758%" y="869" width="0.0229%" height="15" fill="rgb(217,5,26)" fg:x="18899" fg:w="31"/><text x="14.2258%" y="879.50"></text></g><g><title>coprocessor-node`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (98 samples, 0.07%)</title><rect x="13.9987%" y="885" width="0.0725%" height="15" fill="rgb(235,190,38)" fg:x="18930" fg:w="98"/><text x="14.2487%" y="895.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::split_at_unchecked::precondition_check (30 samples, 0.02%)</title><rect x="14.3352%" y="853" width="0.0222%" height="15" fill="rgb(247,86,24)" fg:x="19385" fg:w="30"/><text x="14.5852%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (372 samples, 0.28%)</title><rect x="14.2353%" y="869" width="0.2751%" height="15" fill="rgb(205,101,16)" fg:x="19250" fg:w="372"/><text x="14.4853%" y="879.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts::precondition_check (207 samples, 0.15%)</title><rect x="14.3573%" y="853" width="0.1531%" height="15" fill="rgb(246,168,33)" fg:x="19415" fg:w="207"/><text x="14.6073%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (595 samples, 0.44%)</title><rect x="14.0712%" y="885" width="0.4400%" height="15" fill="rgb(231,114,1)" fg:x="19028" fg:w="595"/><text x="14.3212%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,025 samples, 1.50%)</title><rect x="14.5112%" y="885" width="1.4975%" height="15" fill="rgb(207,184,53)" fg:x="19623" fg:w="2025"/><text x="14.7612%" y="895.50"></text></g><g><title>coprocessor-node`&lt;risc0_zkp::core::digest::Digest as core::convert::From&lt;[u32 (24 samples, 0.02%)</title><rect x="16.0197%" y="885" width="0.0177%" height="15" fill="rgb(224,95,51)" fg:x="21663" fg:w="24"/><text x="16.2697%" y="895.50"></text></g><g><title> _]&gt;&gt;::from (24 samples, 0.02%)</title><rect x="16.0197%" y="869" width="0.0177%" height="15" fill="rgb(212,188,45)" fg:x="21663" fg:w="24"/><text x="16.2697%" y="879.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (930 samples, 0.69%)</title><rect x="16.7785%" y="757" width="0.6877%" height="15" fill="rgb(223,154,38)" fg:x="22689" fg:w="930"/><text x="17.0285%" y="767.50"></text></g><g><title>coprocessor-node`core::ub_checks::is_nonoverlapping::runtime (422 samples, 0.31%)</title><rect x="17.1541%" y="741" width="0.3121%" height="15" fill="rgb(251,22,52)" fg:x="23197" fg:w="422"/><text x="17.4041%" y="751.50"></text></g><g><title>coprocessor-node`core::mem::transmute_copy (1,097 samples, 0.81%)</title><rect x="16.6557%" y="789" width="0.8112%" height="15" fill="rgb(229,209,22)" fg:x="22523" fg:w="1097"/><text x="16.9057%" y="799.50"></text></g><g><title>coprocessor-node`core::ptr::read_unaligned (1,038 samples, 0.77%)</title><rect x="16.6993%" y="773" width="0.7676%" height="15" fill="rgb(234,138,34)" fg:x="22582" fg:w="1038"/><text x="16.9493%" y="783.50"></text></g><g><title>coprocessor-node`&lt;risc0_zkp::core::digest::Digest as core::convert::From&lt;[u8 (1,782 samples, 1.32%)</title><rect x="16.1499%" y="853" width="1.3178%" height="15" fill="rgb(212,95,11)" fg:x="21839" fg:w="1782"/><text x="16.3999%" y="863.50"></text></g><g><title> _]&gt;&gt;::from (1,782 samples, 1.32%)</title><rect x="16.1499%" y="837" width="1.3178%" height="15" fill="rgb(240,179,47)" fg:x="21839" fg:w="1782"/><text x="16.3999%" y="847.50"></text></g><g><title>coprocessor-node`bytemuck::try_cast (1,716 samples, 1.27%)</title><rect x="16.1987%" y="821" width="1.2690%" height="15" fill="rgb(240,163,11)" fg:x="21905" fg:w="1716"/><text x="16.4487%" y="831.50"></text></g><g><title>coprocessor-node`bytemuck::internal::try_cast (1,176 samples, 0.87%)</title><rect x="16.5980%" y="805" width="0.8696%" height="15" fill="rgb(236,37,12)" fg:x="22445" fg:w="1176"/><text x="16.8480%" y="815.50"></text></g><g><title>coprocessor-node`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,798 samples, 1.33%)</title><rect x="16.1388%" y="869" width="1.3296%" height="15" fill="rgb(232,164,16)" fg:x="21824" fg:w="1798"/><text x="16.3888%" y="879.50"></text></g><g><title>coprocessor-node`&lt;risc0_zkp::core::digest::Digest as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (1,964 samples, 1.45%)</title><rect x="16.0375%" y="885" width="1.4524%" height="15" fill="rgb(244,205,15)" fg:x="21687" fg:w="1964"/><text x="16.2875%" y="895.50"></text></g><g><title>coprocessor-node`&lt;risc0_zkp::core::digest::Digest as core::convert::From&lt;[u8 (29 samples, 0.02%)</title><rect x="17.4684%" y="869" width="0.0214%" height="15" fill="rgb(223,117,47)" fg:x="23622" fg:w="29"/><text x="17.7184%" y="879.50"></text></g><g><title> _]&gt;&gt;::from (29 samples, 0.02%)</title><rect x="17.4684%" y="853" width="0.0214%" height="15" fill="rgb(244,107,35)" fg:x="23622" fg:w="29"/><text x="17.7184%" y="863.50"></text></g><g><title>coprocessor-node`DYLD-STUB$$memcpy (28 samples, 0.02%)</title><rect x="18.7263%" y="853" width="0.0207%" height="15" fill="rgb(205,140,8)" fg:x="25323" fg:w="28"/><text x="18.9763%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (99 samples, 0.07%)</title><rect x="18.7781%" y="821" width="0.0732%" height="15" fill="rgb(228,84,46)" fg:x="25393" fg:w="99"/><text x="19.0281%" y="831.50"></text></g><g><title>coprocessor-node`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (2,684 samples, 1.98%)</title><rect x="22.5554%" y="773" width="1.9848%" height="15" fill="rgb(254,188,9)" fg:x="30501" fg:w="2684"/><text x="22.8054%" y="783.50">c..</text></g><g><title>coprocessor-node`core::ptr::write (593 samples, 0.44%)</title><rect x="24.5402%" y="773" width="0.4385%" height="15" fill="rgb(206,112,54)" fg:x="33185" fg:w="593"/><text x="24.7902%" y="783.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (5,960 samples, 4.41%)</title><rect x="20.8893%" y="805" width="4.4074%" height="15" fill="rgb(216,84,49)" fg:x="28248" fg:w="5960"/><text x="21.1393%" y="815.50">copro..</text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,689 samples, 3.47%)</title><rect x="21.8292%" y="789" width="3.4675%" height="15" fill="rgb(214,194,35)" fg:x="29519" fg:w="4689"/><text x="22.0792%" y="799.50">cop..</text></g><g><title>coprocessor-node`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (430 samples, 0.32%)</title><rect x="24.9787%" y="773" width="0.3180%" height="15" fill="rgb(249,28,3)" fg:x="33778" fg:w="430"/><text x="25.2287%" y="783.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (19 samples, 0.01%)</title><rect x="25.2967%" y="805" width="0.0141%" height="15" fill="rgb(222,56,52)" fg:x="34208" fg:w="19"/><text x="25.5467%" y="815.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_add::precondition_check (1,001 samples, 0.74%)</title><rect x="25.3108%" y="805" width="0.7402%" height="15" fill="rgb(245,217,50)" fg:x="34227" fg:w="1001"/><text x="25.5608%" y="815.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,819 samples, 7.26%)</title><rect x="18.8513%" y="821" width="7.2611%" height="15" fill="rgb(213,201,24)" fg:x="25492" fg:w="9819"/><text x="19.1013%" y="831.50">coprocesso..</text></g><g><title>coprocessor-node`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (83 samples, 0.06%)</title><rect x="26.0510%" y="805" width="0.0614%" height="15" fill="rgb(248,116,28)" fg:x="35228" fg:w="83"/><text x="26.3010%" y="815.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,955 samples, 7.36%)</title><rect x="18.7551%" y="837" width="7.3617%" height="15" fill="rgb(219,72,43)" fg:x="25362" fg:w="9955"/><text x="19.0051%" y="847.50">coprocesso..</text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::for_each (9,967 samples, 7.37%)</title><rect x="18.7470%" y="853" width="7.3706%" height="15" fill="rgb(209,138,14)" fg:x="25351" fg:w="9967"/><text x="18.9970%" y="863.50">coprocesso..</text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::iter_mut (22 samples, 0.02%)</title><rect x="26.1227%" y="853" width="0.0163%" height="15" fill="rgb(222,18,33)" fg:x="35325" fg:w="22"/><text x="26.3727%" y="863.50"></text></g><g><title>coprocessor-node`core::ptr::read (32 samples, 0.02%)</title><rect x="26.1767%" y="837" width="0.0237%" height="15" fill="rgb(213,199,7)" fg:x="35398" fg:w="32"/><text x="26.4267%" y="847.50"></text></g><g><title>coprocessor-node`generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (105 samples, 0.08%)</title><rect x="26.1405%" y="853" width="0.0776%" height="15" fill="rgb(250,110,10)" fg:x="35349" fg:w="105"/><text x="26.3905%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (24 samples, 0.02%)</title><rect x="26.2004%" y="837" width="0.0177%" height="15" fill="rgb(248,123,6)" fg:x="35430" fg:w="24"/><text x="26.4504%" y="847.50"></text></g><g><title>coprocessor-node`generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (376 samples, 0.28%)</title><rect x="26.2181%" y="853" width="0.2781%" height="15" fill="rgb(206,91,31)" fg:x="35454" fg:w="376"/><text x="26.4681%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts_mut (338 samples, 0.25%)</title><rect x="26.2462%" y="837" width="0.2500%" height="15" fill="rgb(211,154,13)" fg:x="35492" fg:w="338"/><text x="26.4962%" y="847.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts_mut::precondition_check (271 samples, 0.20%)</title><rect x="26.2958%" y="821" width="0.2004%" height="15" fill="rgb(225,148,7)" fg:x="35559" fg:w="271"/><text x="26.5458%" y="831.50"></text></g><g><title>coprocessor-node`generic_array::ArrayBuilder&lt;T,N&gt;::new (28 samples, 0.02%)</title><rect x="26.4962%" y="853" width="0.0207%" height="15" fill="rgb(220,160,43)" fg:x="35830" fg:w="28"/><text x="26.7462%" y="863.50"></text></g><g><title>coprocessor-node`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (10,692 samples, 7.91%)</title><rect x="18.6819%" y="869" width="7.9067%" height="15" fill="rgb(213,52,39)" fg:x="25263" fg:w="10692"/><text x="18.9319%" y="879.50">coprocessor..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (97 samples, 0.07%)</title><rect x="26.5169%" y="853" width="0.0717%" height="15" fill="rgb(243,137,7)" fg:x="35858" fg:w="97"/><text x="26.7669%" y="863.50"></text></g><g><title>coprocessor-node`DYLD-STUB$$memcpy (21 samples, 0.02%)</title><rect x="26.5886%" y="869" width="0.0155%" height="15" fill="rgb(230,79,13)" fg:x="35955" fg:w="21"/><text x="26.8386%" y="879.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="26.6042%" y="869" width="0.0111%" height="15" fill="rgb(247,105,23)" fg:x="35976" fg:w="15"/><text x="26.8542%" y="879.50"></text></g><g><title>coprocessor-node`alloc::alloc::alloc (273 samples, 0.20%)</title><rect x="26.7291%" y="837" width="0.2019%" height="15" fill="rgb(223,179,41)" fg:x="36145" fg:w="273"/><text x="26.9791%" y="847.50"></text></g><g><title>coprocessor-node`core::ptr::read_volatile::precondition_check (232 samples, 0.17%)</title><rect x="26.7594%" y="821" width="0.1716%" height="15" fill="rgb(218,9,34)" fg:x="36186" fg:w="232"/><text x="27.0094%" y="831.50"></text></g><g><title>coprocessor-node`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (24 samples, 0.02%)</title><rect x="26.9310%" y="837" width="0.0177%" height="15" fill="rgb(222,106,8)" fg:x="36418" fg:w="24"/><text x="27.1810%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.05%)</title><rect x="26.9488%" y="837" width="0.0458%" height="15" fill="rgb(211,220,0)" fg:x="36442" fg:w="62"/><text x="27.1988%" y="847.50"></text></g><g><title>coprocessor-node`alloc::alloc::exchange_malloc (601 samples, 0.44%)</title><rect x="26.6152%" y="869" width="0.4444%" height="15" fill="rgb(229,52,16)" fg:x="35991" fg:w="601"/><text x="26.8652%" y="879.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (561 samples, 0.41%)</title><rect x="26.6448%" y="853" width="0.4149%" height="15" fill="rgb(212,155,18)" fg:x="36031" fg:w="561"/><text x="26.8948%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (87 samples, 0.06%)</title><rect x="26.9953%" y="837" width="0.0643%" height="15" fill="rgb(242,21,14)" fg:x="36505" fg:w="87"/><text x="27.2453%" y="847.50"></text></g><g><title>coprocessor-node`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (419 samples, 0.31%)</title><rect x="27.4760%" y="837" width="0.3098%" height="15" fill="rgb(222,19,48)" fg:x="37155" fg:w="419"/><text x="27.7260%" y="847.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_add::precondition_check (100 samples, 0.07%)</title><rect x="27.7119%" y="821" width="0.0739%" height="15" fill="rgb(232,45,27)" fg:x="37474" fg:w="100"/><text x="27.9619%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (860 samples, 0.64%)</title><rect x="27.1506%" y="853" width="0.6360%" height="15" fill="rgb(249,103,42)" fg:x="36715" fg:w="860"/><text x="27.4006%" y="863.50"></text></g><g><title>coprocessor-node`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (986 samples, 0.73%)</title><rect x="27.0597%" y="869" width="0.7291%" height="15" fill="rgb(246,81,33)" fg:x="36592" fg:w="986"/><text x="27.3097%" y="879.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::enumerate (14 samples, 0.01%)</title><rect x="27.7888%" y="869" width="0.0104%" height="15" fill="rgb(252,33,42)" fg:x="37578" fg:w="14"/><text x="28.0388%" y="879.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl u32&gt;::to_ne_bytes (177 samples, 0.13%)</title><rect x="27.7992%" y="869" width="0.1309%" height="15" fill="rgb(209,212,41)" fg:x="37592" fg:w="177"/><text x="28.0492%" y="879.50"></text></g><g><title>coprocessor-node`generic_array::GenericArray&lt;T,N&gt;::as_mut_slice (1,729 samples, 1.28%)</title><rect x="27.9397%" y="869" width="1.2786%" height="15" fill="rgb(207,154,6)" fg:x="37782" fg:w="1729"/><text x="28.1897%" y="879.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts_mut (1,415 samples, 1.05%)</title><rect x="28.1719%" y="853" width="1.0464%" height="15" fill="rgb(223,64,47)" fg:x="38096" fg:w="1415"/><text x="28.4219%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts_mut::precondition_check (1,103 samples, 0.82%)</title><rect x="28.4026%" y="837" width="0.8157%" height="15" fill="rgb(211,161,38)" fg:x="38408" fg:w="1103"/><text x="28.6526%" y="847.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut::precondition_check (451 samples, 0.33%)</title><rect x="31.5647%" y="821" width="0.3335%" height="15" fill="rgb(219,138,40)" fg:x="42684" fg:w="451"/><text x="31.8147%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1,978 samples, 1.46%)</title><rect x="30.6255%" y="837" width="1.4627%" height="15" fill="rgb(241,228,46)" fg:x="41414" fg:w="1978"/><text x="30.8755%" y="847.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_sub::precondition_check (257 samples, 0.19%)</title><rect x="31.8982%" y="821" width="0.1901%" height="15" fill="rgb(223,209,38)" fg:x="43135" fg:w="257"/><text x="32.1482%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2,731 samples, 2.02%)</title><rect x="30.0739%" y="853" width="2.0196%" height="15" fill="rgb(236,164,45)" fg:x="40668" fg:w="2731"/><text x="30.3239%" y="863.50">c..</text></g><g><title>coprocessor-node`DYLD-STUB$$memcpy (121 samples, 0.09%)</title><rect x="32.0934%" y="853" width="0.0895%" height="15" fill="rgb(231,15,5)" fg:x="43399" fg:w="121"/><text x="32.3434%" y="863.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (105 samples, 0.08%)</title><rect x="32.1829%" y="853" width="0.0776%" height="15" fill="rgb(252,35,15)" fg:x="43520" fg:w="105"/><text x="32.4329%" y="863.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (3,211 samples, 2.37%)</title><rect x="32.8736%" y="837" width="2.3745%" height="15" fill="rgb(248,181,18)" fg:x="44454" fg:w="3211"/><text x="33.1236%" y="847.50">co..</text></g><g><title>coprocessor-node`core::ub_checks::is_nonoverlapping::runtime (1,442 samples, 1.07%)</title><rect x="34.1818%" y="821" width="1.0664%" height="15" fill="rgb(233,39,42)" fg:x="46223" fg:w="1442"/><text x="34.4318%" y="831.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::copy_from_slice (4,042 samples, 2.99%)</title><rect x="32.2606%" y="853" width="2.9890%" height="15" fill="rgb(238,110,33)" fg:x="43625" fg:w="4042"/><text x="32.5106%" y="863.50">cop..</text></g><g><title>coprocessor-node`risc0_zkp::core::hash::sha::cpu::set_word (8,638 samples, 6.39%)</title><rect x="29.2183%" y="869" width="6.3878%" height="15" fill="rgb(233,195,10)" fg:x="39511" fg:w="8638"/><text x="29.4683%" y="879.50">coproces..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (482 samples, 0.36%)</title><rect x="35.2496%" y="853" width="0.3564%" height="15" fill="rgb(254,105,3)" fg:x="47667" fg:w="482"/><text x="35.4996%" y="863.50"></text></g><g><title>coprocessor-node`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (56 samples, 0.04%)</title><rect x="35.6379%" y="853" width="0.0414%" height="15" fill="rgb(221,225,9)" fg:x="48192" fg:w="56"/><text x="35.8879%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (278 samples, 0.21%)</title><rect x="35.6844%" y="853" width="0.2056%" height="15" fill="rgb(224,227,45)" fg:x="48255" fg:w="278"/><text x="35.9344%" y="863.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl u32&gt;::from_be_bytes (369 samples, 0.27%)</title><rect x="35.9004%" y="853" width="0.2729%" height="15" fill="rgb(229,198,43)" fg:x="48547" fg:w="369"/><text x="36.1504%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::iter_mut (23 samples, 0.02%)</title><rect x="36.1740%" y="853" width="0.0170%" height="15" fill="rgb(206,209,35)" fg:x="48917" fg:w="23"/><text x="36.4240%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (220 samples, 0.16%)</title><rect x="36.1910%" y="853" width="0.1627%" height="15" fill="rgb(245,195,53)" fg:x="48940" fg:w="220"/><text x="36.4410%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts (210 samples, 0.16%)</title><rect x="36.3537%" y="853" width="0.1553%" height="15" fill="rgb(240,92,26)" fg:x="49160" fg:w="210"/><text x="36.6037%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts::precondition_check (175 samples, 0.13%)</title><rect x="36.3796%" y="837" width="0.1294%" height="15" fill="rgb(207,40,23)" fg:x="49195" fg:w="175"/><text x="36.6296%" y="847.50"></text></g><g><title>coprocessor-node`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.02%)</title><rect x="39.7058%" y="837" width="0.0229%" height="15" fill="rgb(223,111,35)" fg:x="53693" fg:w="31"/><text x="39.9558%" y="847.50"></text></g><g><title>coprocessor-node`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1,872 samples, 1.38%)</title><rect x="39.7288%" y="837" width="1.3843%" height="15" fill="rgb(229,147,28)" fg:x="53724" fg:w="1872"/><text x="39.9788%" y="847.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2,831 samples, 2.09%)</title><rect x="42.1003%" y="805" width="2.0935%" height="15" fill="rgb(211,29,28)" fg:x="56931" fg:w="2831"/><text x="42.3503%" y="815.50">c..</text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts::precondition_check (1,656 samples, 1.22%)</title><rect x="42.9692%" y="789" width="1.2246%" height="15" fill="rgb(228,72,33)" fg:x="58106" fg:w="1656"/><text x="43.2192%" y="799.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,933 samples, 2.91%)</title><rect x="41.2861%" y="821" width="2.9084%" height="15" fill="rgb(205,214,31)" fg:x="55830" fg:w="3933"/><text x="41.5361%" y="831.50">co..</text></g><g><title>coprocessor-node`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (19 samples, 0.01%)</title><rect x="44.1946%" y="821" width="0.0141%" height="15" fill="rgb(224,111,15)" fg:x="59763" fg:w="19"/><text x="44.4446%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,373 samples, 3.23%)</title><rect x="41.1153%" y="837" width="3.2338%" height="15" fill="rgb(253,21,26)" fg:x="55599" fg:w="4373"/><text x="41.3653%" y="847.50">cop..</text></g><g><title>coprocessor-node`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (190 samples, 0.14%)</title><rect x="44.2086%" y="821" width="0.1405%" height="15" fill="rgb(245,139,43)" fg:x="59782" fg:w="190"/><text x="44.4586%" y="831.50"></text></g><g><title>coprocessor-node`DYLD-STUB$$memcpy (156 samples, 0.12%)</title><rect x="44.3491%" y="837" width="0.1154%" height="15" fill="rgb(252,170,7)" fg:x="59972" fg:w="156"/><text x="44.5991%" y="847.50"></text></g><g><title>coprocessor-node`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (2,021 samples, 1.49%)</title><rect x="44.4645%" y="837" width="1.4945%" height="15" fill="rgb(231,118,14)" fg:x="60128" fg:w="2021"/><text x="44.7145%" y="847.50"></text></g><g><title> N]&gt;::try_from (2,021 samples, 1.49%)</title><rect x="44.4645%" y="821" width="1.4945%" height="15" fill="rgb(238,83,0)" fg:x="60128" fg:w="2021"/><text x="44.7145%" y="831.50"></text></g><g><title>coprocessor-node`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (159 samples, 0.12%)</title><rect x="45.9953%" y="821" width="0.1176%" height="15" fill="rgb(221,39,39)" fg:x="62198" fg:w="159"/><text x="46.2453%" y="831.50"></text></g><g><title>coprocessor-node`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (18 samples, 0.01%)</title><rect x="46.1816%" y="789" width="0.0133%" height="15" fill="rgb(222,119,46)" fg:x="62450" fg:w="18"/><text x="46.4316%" y="799.50"></text></g><g><title>coprocessor-node`core::cmp::min_by (85 samples, 0.06%)</title><rect x="46.1624%" y="805" width="0.0629%" height="15" fill="rgb(222,165,49)" fg:x="62424" fg:w="85"/><text x="46.4124%" y="815.50"></text></g><g><title>coprocessor-node`core::ops::function::FnOnce::call_once (41 samples, 0.03%)</title><rect x="46.1949%" y="789" width="0.0303%" height="15" fill="rgb(219,113,52)" fg:x="62468" fg:w="41"/><text x="46.4449%" y="799.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (42 samples, 0.03%)</title><rect x="46.2482%" y="789" width="0.0311%" height="15" fill="rgb(214,7,15)" fg:x="62540" fg:w="42"/><text x="46.4982%" y="799.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (456 samples, 0.34%)</title><rect x="46.1128%" y="821" width="0.3372%" height="15" fill="rgb(235,32,4)" fg:x="62357" fg:w="456"/><text x="46.3628%" y="831.50"></text></g><g><title>coprocessor-node`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (304 samples, 0.22%)</title><rect x="46.2252%" y="805" width="0.2248%" height="15" fill="rgb(238,90,54)" fg:x="62509" fg:w="304"/><text x="46.4752%" y="815.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (231 samples, 0.17%)</title><rect x="46.2792%" y="789" width="0.1708%" height="15" fill="rgb(213,208,19)" fg:x="62582" fg:w="231"/><text x="46.5292%" y="799.50"></text></g><g><title>coprocessor-node`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (169 samples, 0.12%)</title><rect x="46.3251%" y="773" width="0.1250%" height="15" fill="rgb(233,156,4)" fg:x="62644" fg:w="169"/><text x="46.5751%" y="783.50"></text></g><g><title>coprocessor-node`DYLD-STUB$$memcpy (28 samples, 0.02%)</title><rect x="46.4500%" y="821" width="0.0207%" height="15" fill="rgb(207,194,5)" fg:x="62813" fg:w="28"/><text x="46.7000%" y="831.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::zip (898 samples, 0.66%)</title><rect x="45.9590%" y="837" width="0.6641%" height="15" fill="rgb(206,111,30)" fg:x="62149" fg:w="898"/><text x="46.2090%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (206 samples, 0.15%)</title><rect x="46.4707%" y="821" width="0.1523%" height="15" fill="rgb(243,70,54)" fg:x="62841" fg:w="206"/><text x="46.7207%" y="831.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (73 samples, 0.05%)</title><rect x="46.6933%" y="821" width="0.0540%" height="15" fill="rgb(242,28,8)" fg:x="63142" fg:w="73"/><text x="46.9433%" y="831.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::chunks_exact (295 samples, 0.22%)</title><rect x="46.6231%" y="837" width="0.2182%" height="15" fill="rgb(219,106,18)" fg:x="63047" fg:w="295"/><text x="46.8731%" y="847.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (126 samples, 0.09%)</title><rect x="46.7481%" y="821" width="0.0932%" height="15" fill="rgb(244,222,10)" fg:x="63216" fg:w="126"/><text x="46.9981%" y="831.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts::precondition_check (115 samples, 0.09%)</title><rect x="46.7562%" y="805" width="0.0850%" height="15" fill="rgb(236,179,52)" fg:x="63227" fg:w="115"/><text x="47.0062%" y="815.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::schedule (208 samples, 0.15%)</title><rect x="46.8412%" y="837" width="0.1538%" height="15" fill="rgb(213,23,39)" fg:x="63342" fg:w="208"/><text x="47.0912%" y="847.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256load (353 samples, 0.26%)</title><rect x="52.8970%" y="805" width="0.2610%" height="15" fill="rgb(238,48,10)" fg:x="71531" fg:w="353"/><text x="53.1470%" y="815.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256msg1 (1,146 samples, 0.85%)</title><rect x="53.1580%" y="805" width="0.8475%" height="15" fill="rgb(251,196,23)" fg:x="71884" fg:w="1146"/><text x="53.4080%" y="815.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::schedule (7,263 samples, 5.37%)</title><rect x="51.6975%" y="821" width="5.3710%" height="15" fill="rgb(250,152,24)" fg:x="69909" fg:w="7263"/><text x="51.9475%" y="831.50">coproce..</text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256msg1::sigma0x4 (4,142 samples, 3.06%)</title><rect x="54.0055%" y="805" width="3.0630%" height="15" fill="rgb(209,150,17)" fg:x="73030" fg:w="4142"/><text x="54.2555%" y="815.50">cop..</text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256load (267 samples, 0.20%)</title><rect x="57.0685%" y="821" width="0.1974%" height="15" fill="rgb(234,202,34)" fg:x="77172" fg:w="267"/><text x="57.3185%" y="831.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256_digest_block_u32 (17,802 samples, 13.16%)</title><rect x="46.9951%" y="837" width="13.1645%" height="15" fill="rgb(253,148,53)" fg:x="63550" fg:w="17802"/><text x="47.2451%" y="847.50">coprocessor-node`sha..</text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256msg2 (3,901 samples, 2.88%)</title><rect x="57.2748%" y="821" width="2.8848%" height="15" fill="rgb(218,129,16)" fg:x="77451" fg:w="3901"/><text x="57.5248%" y="831.50">co..</text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256_digest_round_x2 (19,613 samples, 14.50%)</title><rect x="60.1596%" y="837" width="14.5038%" height="15" fill="rgb(216,85,19)" fg:x="81352" fg:w="19613"/><text x="60.4096%" y="847.50">coprocessor-node`sha2:..</text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256swap (725 samples, 0.54%)</title><rect x="74.6633%" y="837" width="0.5361%" height="15" fill="rgb(235,228,7)" fg:x="100965" fg:w="725"/><text x="74.9133%" y="847.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::compress (53,368 samples, 39.47%)</title><rect x="36.5090%" y="853" width="39.4655%" height="15" fill="rgb(245,175,0)" fg:x="49370" fg:w="53368"/><text x="36.7590%" y="863.50">coprocessor-node`sha2::sha256::soft::compress</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,048 samples, 0.77%)</title><rect x="75.1995%" y="837" width="0.7750%" height="15" fill="rgb(208,168,36)" fg:x="101690" fg:w="1048"/><text x="75.4495%" y="847.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256_digest_block_u32 (18 samples, 0.01%)</title><rect x="75.9745%" y="853" width="0.0133%" height="15" fill="rgb(246,171,24)" fg:x="102738" fg:w="18"/><text x="76.2245%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.03%)</title><rect x="75.9878%" y="853" width="0.0333%" height="15" fill="rgb(215,142,24)" fg:x="102756" fg:w="45"/><text x="76.2378%" y="863.50"></text></g><g><title>coprocessor-node`sha2::sha256::compress256 (54,661 samples, 40.42%)</title><rect x="35.6061%" y="869" width="40.4217%" height="15" fill="rgb(250,187,7)" fg:x="48149" fg:w="54661"/><text x="35.8561%" y="879.50">coprocessor-node`sha2::sha256::compress256</text></g><g><title>coprocessor-node`&lt;risc0_zkp::core::hash::sha::cpu::Impl as risc0_zkp::core::hash::sha::Sha256&gt;::compress (79,197 samples, 58.57%)</title><rect x="17.4899%" y="885" width="58.5660%" height="15" fill="rgb(228,66,33)" fg:x="23651" fg:w="79197"/><text x="17.7399%" y="895.50">coprocessor-node`&lt;risc0_zkp::core::hash::sha::cpu::Impl as risc0_zkp::core::hash::sha::Sha256&gt;::c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.02%)</title><rect x="76.0359%" y="869" width="0.0200%" height="15" fill="rgb(234,215,21)" fg:x="102821" fg:w="27"/><text x="76.2859%" y="879.50"></text></g><g><title>coprocessor-node`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (379 samples, 0.28%)</title><rect x="76.0588%" y="885" width="0.2803%" height="15" fill="rgb(222,191,20)" fg:x="102852" fg:w="379"/><text x="76.3088%" y="895.50"></text></g><g><title> N]&gt;::try_from (379 samples, 0.28%)</title><rect x="76.0588%" y="869" width="0.2803%" height="15" fill="rgb(245,79,54)" fg:x="102852" fg:w="379"/><text x="76.3088%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (82 samples, 0.06%)</title><rect x="76.5150%" y="837" width="0.0606%" height="15" fill="rgb(240,10,37)" fg:x="103469" fg:w="82"/><text x="76.7650%" y="847.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (224 samples, 0.17%)</title><rect x="76.4263%" y="853" width="0.1656%" height="15" fill="rgb(214,192,32)" fg:x="103349" fg:w="224"/><text x="76.6763%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (17 samples, 0.01%)</title><rect x="76.5794%" y="837" width="0.0126%" height="15" fill="rgb(209,36,54)" fg:x="103556" fg:w="17"/><text x="76.8294%" y="847.50"></text></g><g><title>coprocessor-node`DYLD-STUB$$free (24 samples, 0.02%)</title><rect x="76.5920%" y="853" width="0.0177%" height="15" fill="rgb(220,10,11)" fg:x="103573" fg:w="24"/><text x="76.8420%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_free (61 samples, 0.05%)</title><rect x="76.6097%" y="853" width="0.0451%" height="15" fill="rgb(221,106,17)" fg:x="103597" fg:w="61"/><text x="76.8597%" y="863.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;risc0_zkp::core::digest::Digest&gt;&gt; (435 samples, 0.32%)</title><rect x="76.3435%" y="885" width="0.3217%" height="15" fill="rgb(251,142,44)" fg:x="103237" fg:w="435"/><text x="76.5935%" y="895.50"></text></g><g><title>coprocessor-node`&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (408 samples, 0.30%)</title><rect x="76.3634%" y="869" width="0.3017%" height="15" fill="rgb(238,13,15)" fg:x="103264" fg:w="408"/><text x="76.6134%" y="879.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::chunks_exact (29 samples, 0.02%)</title><rect x="76.6652%" y="885" width="0.0214%" height="15" fill="rgb(208,107,27)" fg:x="103672" fg:w="29"/><text x="76.9152%" y="895.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (25 samples, 0.02%)</title><rect x="76.6681%" y="869" width="0.0185%" height="15" fill="rgb(205,136,37)" fg:x="103676" fg:w="25"/><text x="76.9181%" y="879.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts::precondition_check (17 samples, 0.01%)</title><rect x="76.6740%" y="853" width="0.0126%" height="15" fill="rgb(250,205,27)" fg:x="103684" fg:w="17"/><text x="76.9240%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::iter_mut (160 samples, 0.12%)</title><rect x="76.6866%" y="885" width="0.1183%" height="15" fill="rgb(210,80,43)" fg:x="103701" fg:w="160"/><text x="76.9366%" y="895.50"></text></g><g><title>coprocessor-node`risc0_zkp::core::digest::Digest::as_words (94 samples, 0.07%)</title><rect x="76.8057%" y="885" width="0.0695%" height="15" fill="rgb(247,160,36)" fg:x="103862" fg:w="94"/><text x="77.0557%" y="895.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::hash_page_bytes (85,874 samples, 63.50%)</title><rect x="13.3760%" y="901" width="63.5036%" height="15" fill="rgb(234,13,49)" fg:x="18088" fg:w="85874"/><text x="13.6260%" y="911.50">coprocessor-node`risc0_binfmt::image::hash_page_bytes</text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::hash_page (98,935 samples, 73.16%)</title><rect x="3.7219%" y="917" width="73.1622%" height="15" fill="rgb(234,122,0)" fg:x="5033" fg:w="98935"/><text x="3.9719%" y="927.50">coprocessor-node`risc0_binfmt::image::MemoryImage::hash_page</text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut::precondition_check (354 samples, 0.26%)</title><rect x="77.6568%" y="853" width="0.2618%" height="15" fill="rgb(207,146,38)" fg:x="105013" fg:w="354"/><text x="77.9068%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (557 samples, 0.41%)</title><rect x="77.5348%" y="869" width="0.4119%" height="15" fill="rgb(207,177,25)" fg:x="104848" fg:w="557"/><text x="77.7848%" y="879.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_sub::precondition_check (38 samples, 0.03%)</title><rect x="77.9186%" y="853" width="0.0281%" height="15" fill="rgb(211,178,42)" fg:x="105367" fg:w="38"/><text x="78.1686%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (643 samples, 0.48%)</title><rect x="77.4720%" y="885" width="0.4755%" height="15" fill="rgb(230,69,54)" fg:x="104763" fg:w="643"/><text x="77.7220%" y="895.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,668 samples, 1.23%)</title><rect x="77.1658%" y="901" width="1.2335%" height="15" fill="rgb(214,135,41)" fg:x="104349" fg:w="1668"/><text x="77.4158%" y="911.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts_mut::precondition_check (611 samples, 0.45%)</title><rect x="77.9475%" y="885" width="0.4518%" height="15" fill="rgb(237,67,25)" fg:x="105406" fg:w="611"/><text x="78.1975%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (669 samples, 0.49%)</title><rect x="79.4028%" y="869" width="0.4947%" height="15" fill="rgb(222,189,50)" fg:x="107374" fg:w="669"/><text x="79.6528%" y="879.50"></text></g><g><title>coprocessor-node`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (213 samples, 0.16%)</title><rect x="79.7400%" y="853" width="0.1575%" height="15" fill="rgb(245,148,34)" fg:x="107830" fg:w="213"/><text x="79.9900%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (120 samples, 0.09%)</title><rect x="79.8975%" y="869" width="0.0887%" height="15" fill="rgb(222,29,6)" fg:x="108043" fg:w="120"/><text x="80.1475%" y="879.50"></text></g><g><title>coprocessor-node`&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (188 samples, 0.14%)</title><rect x="80.2658%" y="853" width="0.1390%" height="15" fill="rgb(221,189,43)" fg:x="108541" fg:w="188"/><text x="80.5158%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,754 samples, 3.52%)</title><rect x="83.7333%" y="837" width="3.5156%" height="15" fill="rgb(207,36,27)" fg:x="113230" fg:w="4754"/><text x="83.9833%" y="847.50">cop..</text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (821 samples, 0.61%)</title><rect x="87.2488%" y="837" width="0.6071%" height="15" fill="rgb(217,90,24)" fg:x="117984" fg:w="821"/><text x="87.4988%" y="847.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (319 samples, 0.24%)</title><rect x="87.8589%" y="821" width="0.2359%" height="15" fill="rgb(224,66,35)" fg:x="118809" fg:w="319"/><text x="88.1089%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (492 samples, 0.36%)</title><rect x="87.8589%" y="837" width="0.3638%" height="15" fill="rgb(221,13,50)" fg:x="118809" fg:w="492"/><text x="88.1089%" y="847.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_sub::precondition_check (173 samples, 0.13%)</title><rect x="88.0948%" y="821" width="0.1279%" height="15" fill="rgb(236,68,49)" fg:x="119128" fg:w="173"/><text x="88.3448%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,732 samples, 4.98%)</title><rect x="88.2228%" y="837" width="4.9783%" height="15" fill="rgb(229,146,28)" fg:x="119301" fg:w="6732"/><text x="88.4728%" y="847.50">coproc..</text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (921 samples, 0.68%)</title><rect x="93.6566%" y="821" width="0.6811%" height="15" fill="rgb(225,31,38)" fg:x="126649" fg:w="921"/><text x="93.9066%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (319 samples, 0.24%)</title><rect x="94.3399%" y="805" width="0.2359%" height="15" fill="rgb(250,208,3)" fg:x="127573" fg:w="319"/><text x="94.5899%" y="815.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (486 samples, 0.36%)</title><rect x="94.3399%" y="821" width="0.3594%" height="15" fill="rgb(246,54,23)" fg:x="127573" fg:w="486"/><text x="94.5899%" y="831.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_sub::precondition_check (167 samples, 0.12%)</title><rect x="94.5758%" y="805" width="0.1235%" height="15" fill="rgb(243,76,11)" fg:x="127892" fg:w="167"/><text x="94.8258%" y="815.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (2,036 samples, 1.51%)</title><rect x="93.2011%" y="837" width="1.5056%" height="15" fill="rgb(245,21,50)" fg:x="126033" fg:w="2036"/><text x="93.4511%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19,346 samples, 14.31%)</title><rect x="80.4078%" y="853" width="14.3063%" height="15" fill="rgb(228,9,43)" fg:x="108733" fg:w="19346"/><text x="80.6578%" y="863.50">coprocessor-node`alloc..</text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (23,186 samples, 17.15%)</title><rect x="78.4030%" y="901" width="17.1460%" height="15" fill="rgb(208,100,47)" fg:x="106022" fg:w="23186"/><text x="78.6530%" y="911.50">coprocessor-node`alloc::col..</text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22,821 samples, 16.88%)</title><rect x="78.6729%" y="885" width="16.8761%" height="15" fill="rgb(232,26,8)" fg:x="106387" fg:w="22821"/><text x="78.9229%" y="895.50">coprocessor-node`alloc::co..</text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21,045 samples, 15.56%)</title><rect x="79.9862%" y="869" width="15.5627%" height="15" fill="rgb(216,166,38)" fg:x="108163" fg:w="21045"/><text x="80.2362%" y="879.50">coprocessor-node`alloc::..</text></g><g><title>coprocessor-node`core::cmp::impls::_&lt;impl core::cmp::Ord for u32&gt;::cmp (1,129 samples, 0.83%)</title><rect x="94.7141%" y="853" width="0.8349%" height="15" fill="rgb(251,202,51)" fg:x="128079" fg:w="1129"/><text x="94.9641%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::into_mut (190 samples, 0.14%)</title><rect x="95.6155%" y="885" width="0.1405%" height="15" fill="rgb(254,216,34)" fg:x="129298" fg:w="190"/><text x="95.8655%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_val_mut (144 samples, 0.11%)</title><rect x="95.6495%" y="869" width="0.1065%" height="15" fill="rgb(251,32,27)" fg:x="129344" fg:w="144"/><text x="95.8995%" y="879.50"></text></g><g><title>coprocessor-node`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut::precondition_check (18 samples, 0.01%)</title><rect x="95.7427%" y="853" width="0.0133%" height="15" fill="rgb(208,127,28)" fg:x="129470" fg:w="18"/><text x="95.9927%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (23 samples, 0.02%)</title><rect x="95.7730%" y="837" width="0.0170%" height="15" fill="rgb(224,137,22)" fg:x="129511" fg:w="23"/><text x="96.0230%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;::split (15 samples, 0.01%)</title><rect x="95.7900%" y="837" width="0.0111%" height="15" fill="rgb(254,70,32)" fg:x="129534" fg:w="15"/><text x="96.0400%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (41 samples, 0.03%)</title><rect x="95.7716%" y="853" width="0.0303%" height="15" fill="rgb(229,75,37)" fg:x="129509" fg:w="41"/><text x="96.0216%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (16 samples, 0.01%)</title><rect x="95.8204%" y="821" width="0.0118%" height="15" fill="rgb(252,64,23)" fg:x="129575" fg:w="16"/><text x="96.0704%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (15 samples, 0.01%)</title><rect x="95.8211%" y="805" width="0.0111%" height="15" fill="rgb(232,162,48)" fg:x="129576" fg:w="15"/><text x="96.0711%" y="815.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (18 samples, 0.01%)</title><rect x="95.8322%" y="821" width="0.0133%" height="15" fill="rgb(246,160,12)" fg:x="129591" fg:w="18"/><text x="96.0822%" y="831.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (18 samples, 0.01%)</title><rect x="95.8322%" y="805" width="0.0133%" height="15" fill="rgb(247,166,0)" fg:x="129591" fg:w="18"/><text x="96.0822%" y="815.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (50 samples, 0.04%)</title><rect x="95.8130%" y="837" width="0.0370%" height="15" fill="rgb(249,219,21)" fg:x="129565" fg:w="50"/><text x="96.0630%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (19 samples, 0.01%)</title><rect x="95.8529%" y="821" width="0.0141%" height="15" fill="rgb(205,209,3)" fg:x="129619" fg:w="19"/><text x="96.1029%" y="831.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (40 samples, 0.03%)</title><rect x="95.8499%" y="837" width="0.0296%" height="15" fill="rgb(243,44,1)" fg:x="129615" fg:w="40"/><text x="96.0999%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (17 samples, 0.01%)</title><rect x="95.8669%" y="821" width="0.0126%" height="15" fill="rgb(206,159,16)" fg:x="129638" fg:w="17"/><text x="96.1169%" y="831.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (106 samples, 0.08%)</title><rect x="95.8019%" y="853" width="0.0784%" height="15" fill="rgb(244,77,30)" fg:x="129550" fg:w="106"/><text x="96.0519%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (159 samples, 0.12%)</title><rect x="95.7642%" y="869" width="0.1176%" height="15" fill="rgb(218,69,12)" fg:x="129499" fg:w="159"/><text x="96.0142%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (173 samples, 0.13%)</title><rect x="95.7560%" y="885" width="0.1279%" height="15" fill="rgb(212,87,7)" fg:x="129488" fg:w="173"/><text x="96.0060%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (24 samples, 0.02%)</title><rect x="95.9616%" y="741" width="0.0177%" height="15" fill="rgb(245,114,25)" fg:x="129766" fg:w="24"/><text x="96.2116%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (43 samples, 0.03%)</title><rect x="95.9535%" y="773" width="0.0318%" height="15" fill="rgb(210,61,42)" fg:x="129755" fg:w="43"/><text x="96.2035%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (38 samples, 0.03%)</title><rect x="95.9572%" y="757" width="0.0281%" height="15" fill="rgb(211,52,33)" fg:x="129760" fg:w="38"/><text x="96.2072%" y="767.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (124 samples, 0.09%)</title><rect x="95.9032%" y="805" width="0.0917%" height="15" fill="rgb(234,58,33)" fg:x="129687" fg:w="124"/><text x="96.1532%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (66 samples, 0.05%)</title><rect x="95.9461%" y="789" width="0.0488%" height="15" fill="rgb(220,115,36)" fg:x="129745" fg:w="66"/><text x="96.1961%" y="799.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (140 samples, 0.10%)</title><rect x="95.8995%" y="821" width="0.1035%" height="15" fill="rgb(243,153,54)" fg:x="129682" fg:w="140"/><text x="96.1495%" y="831.50"></text></g><g><title>coprocessor-node`core::alloc::layout::Layout::array::inner (28 samples, 0.02%)</title><rect x="96.0030%" y="821" width="0.0207%" height="15" fill="rgb(251,47,18)" fg:x="129822" fg:w="28"/><text x="96.2530%" y="831.50"></text></g><g><title>coprocessor-node`alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (179 samples, 0.13%)</title><rect x="95.8936%" y="837" width="0.1324%" height="15" fill="rgb(242,102,42)" fg:x="129674" fg:w="179"/><text x="96.1436%" y="847.50"></text></g><g><title>coprocessor-node`&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (187 samples, 0.14%)</title><rect x="95.8884%" y="853" width="0.1383%" height="15" fill="rgb(234,31,38)" fg:x="129667" fg:w="187"/><text x="96.1384%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert_with (647 samples, 0.48%)</title><rect x="95.5490%" y="901" width="0.4785%" height="15" fill="rgb(221,117,51)" fg:x="129208" fg:w="647"/><text x="95.7990%" y="911.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::store_region_in_page::_{{closure}} (192 samples, 0.14%)</title><rect x="95.8854%" y="885" width="0.1420%" height="15" fill="rgb(212,20,18)" fg:x="129663" fg:w="192"/><text x="96.1354%" y="895.50"></text></g><g><title>coprocessor-node`alloc::vec::from_elem (189 samples, 0.14%)</title><rect x="95.8877%" y="869" width="0.1398%" height="15" fill="rgb(245,133,36)" fg:x="129666" fg:w="189"/><text x="96.1377%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (30 samples, 0.02%)</title><rect x="96.0289%" y="901" width="0.0222%" height="15" fill="rgb(212,6,19)" fg:x="129857" fg:w="30"/><text x="96.2789%" y="911.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (15 samples, 0.01%)</title><rect x="96.0925%" y="869" width="0.0111%" height="15" fill="rgb(218,1,36)" fg:x="129943" fg:w="15"/><text x="96.3425%" y="879.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1,163 samples, 0.86%)</title><rect x="96.1036%" y="869" width="0.8600%" height="15" fill="rgb(246,84,54)" fg:x="129958" fg:w="1163"/><text x="96.3536%" y="879.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (1,041 samples, 0.77%)</title><rect x="96.1938%" y="853" width="0.7698%" height="15" fill="rgb(242,110,6)" fg:x="130080" fg:w="1041"/><text x="96.4438%" y="863.50"></text></g><g><title>coprocessor-node`core::ub_checks::is_nonoverlapping::runtime (465 samples, 0.34%)</title><rect x="96.6198%" y="837" width="0.3439%" height="15" fill="rgb(214,47,5)" fg:x="130656" fg:w="465"/><text x="96.8698%" y="847.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::clone_from_slice (1,343 samples, 0.99%)</title><rect x="96.0511%" y="901" width="0.9931%" height="15" fill="rgb(218,159,25)" fg:x="129887" fg:w="1343"/><text x="96.3011%" y="911.50"></text></g><g><title>coprocessor-node`&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (1,321 samples, 0.98%)</title><rect x="96.0674%" y="885" width="0.9769%" height="15" fill="rgb(215,211,28)" fg:x="129909" fg:w="1321"/><text x="96.3174%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (109 samples, 0.08%)</title><rect x="96.9636%" y="869" width="0.0806%" height="15" fill="rgb(238,59,32)" fg:x="131121" fg:w="109"/><text x="97.2136%" y="879.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::PageTableInfo::get_page_addr (50 samples, 0.04%)</title><rect x="97.0450%" y="901" width="0.0370%" height="15" fill="rgb(226,82,3)" fg:x="131231" fg:w="50"/><text x="97.2950%" y="911.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::PageTableInfo::get_page_index (43 samples, 0.03%)</title><rect x="97.0819%" y="901" width="0.0318%" height="15" fill="rgb(240,164,32)" fg:x="131281" fg:w="43"/><text x="97.3319%" y="911.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::store_region_in_page (27,369 samples, 20.24%)</title><rect x="76.8841%" y="917" width="20.2393%" height="15" fill="rgb(232,46,7)" fg:x="103968" fg:w="27369"/><text x="77.1341%" y="927.50">coprocessor-node`risc0_binfmt::i..</text></g><g><title>coprocessor-node`risc0_binfmt::image::PageTableInfo::get_page_entry_addr (68 samples, 0.05%)</title><rect x="97.1248%" y="917" width="0.0503%" height="15" fill="rgb(229,129,53)" fg:x="131339" fg:w="68"/><text x="97.3748%" y="927.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts (66 samples, 0.05%)</title><rect x="97.3903%" y="853" width="0.0488%" height="15" fill="rgb(234,188,29)" fg:x="131698" fg:w="66"/><text x="97.6403%" y="863.50"></text></g><g><title>coprocessor-node`bytemuck::internal::try_cast_slice (468 samples, 0.35%)</title><rect x="97.2772%" y="869" width="0.3461%" height="15" fill="rgb(246,141,4)" fg:x="131545" fg:w="468"/><text x="97.5272%" y="879.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts (248 samples, 0.18%)</title><rect x="97.4399%" y="853" width="0.1834%" height="15" fill="rgb(229,23,39)" fg:x="131765" fg:w="248"/><text x="97.6899%" y="863.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts::precondition_check (248 samples, 0.18%)</title><rect x="97.4399%" y="837" width="0.1834%" height="15" fill="rgb(206,12,3)" fg:x="131765" fg:w="248"/><text x="97.6899%" y="847.50"></text></g><g><title>coprocessor-node`core::mem::size_of_val (151 samples, 0.11%)</title><rect x="97.6233%" y="869" width="0.1117%" height="15" fill="rgb(252,226,20)" fg:x="132013" fg:w="151"/><text x="97.8733%" y="879.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::update_page (127,253 samples, 94.10%)</title><rect x="3.6332%" y="933" width="94.1032%" height="15" fill="rgb(216,123,35)" fg:x="4913" fg:w="127253"/><text x="3.8832%" y="943.50">coprocessor-node`risc0_binfmt::image::MemoryImage::update_page</text></g><g><title>coprocessor-node`risc0_zkp::core::digest::Digest::as_bytes (758 samples, 0.56%)</title><rect x="97.1759%" y="917" width="0.5605%" height="15" fill="rgb(212,68,40)" fg:x="131408" fg:w="758"/><text x="97.4259%" y="927.50"></text></g><g><title>coprocessor-node`bytemuck::cast_slice (738 samples, 0.55%)</title><rect x="97.1906%" y="901" width="0.5457%" height="15" fill="rgb(254,125,32)" fg:x="131428" fg:w="738"/><text x="97.4406%" y="911.50"></text></g><g><title>coprocessor-node`bytemuck::internal::cast_slice (713 samples, 0.53%)</title><rect x="97.2091%" y="885" width="0.5273%" height="15" fill="rgb(253,97,22)" fg:x="131453" fg:w="713"/><text x="97.4591%" y="895.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::hash_pages (127,752 samples, 94.47%)</title><rect x="3.2649%" y="965" width="94.4723%" height="15" fill="rgb(241,101,14)" fg:x="4415" fg:w="127752"/><text x="3.5149%" y="975.50">coprocessor-node`risc0_binfmt::image::MemoryImage::hash_pages</text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::hash_pages_iter (127,751 samples, 94.47%)</title><rect x="3.2656%" y="949" width="94.4715%" height="15" fill="rgb(238,103,29)" fg:x="4416" fg:w="127751"/><text x="3.5156%" y="959.50">coprocessor-node`risc0_binfmt::image::MemoryImage::hash_pages_iter</text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut::precondition_check (19 samples, 0.01%)</title><rect x="97.7852%" y="901" width="0.0141%" height="15" fill="rgb(233,195,47)" fg:x="132232" fg:w="19"/><text x="98.0352%" y="911.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (51 samples, 0.04%)</title><rect x="97.7660%" y="933" width="0.0377%" height="15" fill="rgb(246,218,30)" fg:x="132206" fg:w="51"/><text x="98.0160%" y="943.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (43 samples, 0.03%)</title><rect x="97.7719%" y="917" width="0.0318%" height="15" fill="rgb(219,145,47)" fg:x="132214" fg:w="43"/><text x="98.0219%" y="927.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (98 samples, 0.07%)</title><rect x="97.7497%" y="949" width="0.0725%" height="15" fill="rgb(243,12,26)" fg:x="132184" fg:w="98"/><text x="97.9997%" y="959.50"></text></g><g><title>coprocessor-node`core::slice::raw::from_raw_parts_mut::precondition_check (25 samples, 0.02%)</title><rect x="97.8037%" y="933" width="0.0185%" height="15" fill="rgb(214,87,16)" fg:x="132257" fg:w="25"/><text x="98.0537%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (16 samples, 0.01%)</title><rect x="97.8555%" y="917" width="0.0118%" height="15" fill="rgb(208,99,42)" fg:x="132327" fg:w="16"/><text x="98.1055%" y="927.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.08%)</title><rect x="97.9804%" y="885" width="0.0762%" height="15" fill="rgb(253,99,2)" fg:x="132496" fg:w="103"/><text x="98.2304%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (20 samples, 0.01%)</title><rect x="98.0566%" y="885" width="0.0148%" height="15" fill="rgb(220,168,23)" fg:x="132599" fg:w="20"/><text x="98.3066%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (133 samples, 0.10%)</title><rect x="98.0714%" y="885" width="0.0984%" height="15" fill="rgb(242,38,24)" fg:x="132619" fg:w="133"/><text x="98.3214%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (459 samples, 0.34%)</title><rect x="97.8806%" y="901" width="0.3394%" height="15" fill="rgb(225,182,9)" fg:x="132361" fg:w="459"/><text x="98.1306%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (68 samples, 0.05%)</title><rect x="98.1697%" y="885" width="0.0503%" height="15" fill="rgb(243,178,37)" fg:x="132752" fg:w="68"/><text x="98.4197%" y="895.50"></text></g><g><title>coprocessor-node`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (53 samples, 0.04%)</title><rect x="98.1808%" y="869" width="0.0392%" height="15" fill="rgb(232,139,19)" fg:x="132767" fg:w="53"/><text x="98.4308%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (566 samples, 0.42%)</title><rect x="97.8222%" y="949" width="0.4186%" height="15" fill="rgb(225,201,24)" fg:x="132282" fg:w="566"/><text x="98.0722%" y="959.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (554 samples, 0.41%)</title><rect x="97.8311%" y="933" width="0.4097%" height="15" fill="rgb(221,47,46)" fg:x="132294" fg:w="554"/><text x="98.0811%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (504 samples, 0.37%)</title><rect x="97.8680%" y="917" width="0.3727%" height="15" fill="rgb(249,23,13)" fg:x="132344" fg:w="504"/><text x="98.1180%" y="927.50"></text></g><g><title>coprocessor-node`core::cmp::impls::_&lt;impl core::cmp::Ord for u32&gt;::cmp (28 samples, 0.02%)</title><rect x="98.2200%" y="901" width="0.0207%" height="15" fill="rgb(219,9,5)" fg:x="132820" fg:w="28"/><text x="98.4700%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::into_mut (17 samples, 0.01%)</title><rect x="98.2430%" y="933" width="0.0126%" height="15" fill="rgb(254,171,16)" fg:x="132851" fg:w="17"/><text x="98.4930%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert_with (25 samples, 0.02%)</title><rect x="98.2407%" y="949" width="0.0185%" height="15" fill="rgb(230,171,20)" fg:x="132848" fg:w="25"/><text x="98.4907%" y="959.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::copy_from_slice (55 samples, 0.04%)</title><rect x="98.2629%" y="917" width="0.0407%" height="15" fill="rgb(210,71,41)" fg:x="132878" fg:w="55"/><text x="98.5129%" y="927.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (44 samples, 0.03%)</title><rect x="98.2711%" y="901" width="0.0325%" height="15" fill="rgb(206,173,20)" fg:x="132889" fg:w="44"/><text x="98.5211%" y="911.50"></text></g><g><title>coprocessor-node`core::ub_checks::is_nonoverlapping::runtime (19 samples, 0.01%)</title><rect x="98.2895%" y="885" width="0.0141%" height="15" fill="rgb(233,88,34)" fg:x="132914" fg:w="19"/><text x="98.5395%" y="895.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::clone_from_slice (71 samples, 0.05%)</title><rect x="98.2600%" y="949" width="0.0525%" height="15" fill="rgb(223,209,46)" fg:x="132874" fg:w="71"/><text x="98.5100%" y="959.50"></text></g><g><title>coprocessor-node`&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (70 samples, 0.05%)</title><rect x="98.2607%" y="933" width="0.0518%" height="15" fill="rgb(250,43,18)" fg:x="132875" fg:w="70"/><text x="98.5107%" y="943.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::store_region_in_page (788 samples, 0.58%)</title><rect x="97.7371%" y="965" width="0.5827%" height="15" fill="rgb(208,13,10)" fg:x="132167" fg:w="788"/><text x="97.9871%" y="975.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::new (128,723 samples, 95.19%)</title><rect x="3.1392%" y="981" width="95.1903%" height="15" fill="rgb(212,200,36)" fg:x="4245" fg:w="128723"/><text x="3.3892%" y="991.50">coprocessor-node`risc0_binfmt::image::MemoryImage::new</text></g><g><title>coprocessor-node`risc0_zkvm::host::server::exec::executor::ExecutorImpl::from_elf (131,339 samples, 97.12%)</title><rect x="1.2083%" y="997" width="97.1248%" height="15" fill="rgb(225,90,30)" fg:x="1634" fg:w="131339"/><text x="1.4583%" y="1007.50">coprocessor-node`risc0_zkvm::host::server::exec::executor::ExecutorImpl::from_elf</text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (81 samples, 0.06%)</title><rect x="98.4478%" y="725" width="0.0599%" height="15" fill="rgb(236,182,39)" fg:x="133128" fg:w="81"/><text x="98.6978%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (101 samples, 0.07%)</title><rect x="98.4426%" y="741" width="0.0747%" height="15" fill="rgb(212,144,35)" fg:x="133121" fg:w="101"/><text x="98.6926%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (107 samples, 0.08%)</title><rect x="98.4389%" y="757" width="0.0791%" height="15" fill="rgb(228,63,44)" fg:x="133116" fg:w="107"/><text x="98.6889%" y="767.50"></text></g><g><title>coprocessor-node`alloc::alloc::alloc (138 samples, 0.10%)</title><rect x="98.4167%" y="789" width="0.1021%" height="15" fill="rgb(228,109,6)" fg:x="133086" fg:w="138"/><text x="98.6667%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (114 samples, 0.08%)</title><rect x="98.4345%" y="773" width="0.0843%" height="15" fill="rgb(238,117,24)" fg:x="133110" fg:w="114"/><text x="98.6845%" y="783.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (167 samples, 0.12%)</title><rect x="98.4012%" y="821" width="0.1235%" height="15" fill="rgb(242,26,26)" fg:x="133065" fg:w="167"/><text x="98.6512%" y="831.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (165 samples, 0.12%)</title><rect x="98.4027%" y="805" width="0.1220%" height="15" fill="rgb(221,92,48)" fg:x="133067" fg:w="165"/><text x="98.6527%" y="815.50"></text></g><g><title>coprocessor-node`alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (202 samples, 0.15%)</title><rect x="98.3886%" y="837" width="0.1494%" height="15" fill="rgb(209,209,32)" fg:x="133048" fg:w="202"/><text x="98.6386%" y="847.50"></text></g><g><title>coprocessor-node`core::alloc::layout::Layout::array::inner (14 samples, 0.01%)</title><rect x="98.5277%" y="821" width="0.0104%" height="15" fill="rgb(221,70,22)" fg:x="133236" fg:w="14"/><text x="98.7777%" y="831.50"></text></g><g><title>coprocessor-node`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (243 samples, 0.18%)</title><rect x="98.3798%" y="853" width="0.1797%" height="15" fill="rgb(248,145,5)" fg:x="133036" fg:w="243"/><text x="98.6298%" y="863.50"></text></g><g><title>coprocessor-node`core::intrinsics::copy_nonoverlapping::precondition_check (29 samples, 0.02%)</title><rect x="98.5380%" y="837" width="0.0214%" height="15" fill="rgb(226,116,26)" fg:x="133250" fg:w="29"/><text x="98.7880%" y="847.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (301 samples, 0.22%)</title><rect x="98.3761%" y="869" width="0.2226%" height="15" fill="rgb(244,5,17)" fg:x="133031" fg:w="301"/><text x="98.6261%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.03%)</title><rect x="98.5654%" y="853" width="0.0333%" height="15" fill="rgb(252,159,33)" fg:x="133287" fg:w="45"/><text x="98.8154%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (24 samples, 0.02%)</title><rect x="98.5987%" y="869" width="0.0177%" height="15" fill="rgb(206,71,0)" fg:x="133332" fg:w="24"/><text x="98.8487%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (22 samples, 0.02%)</title><rect x="98.6423%" y="853" width="0.0163%" height="15" fill="rgb(233,118,54)" fg:x="133391" fg:w="22"/><text x="98.8923%" y="863.50"></text></g><g><title>coprocessor-node`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (15 samples, 0.01%)</title><rect x="98.6475%" y="837" width="0.0111%" height="15" fill="rgb(234,83,48)" fg:x="133398" fg:w="15"/><text x="98.8975%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (66 samples, 0.05%)</title><rect x="98.6231%" y="869" width="0.0488%" height="15" fill="rgb(228,3,54)" fg:x="133365" fg:w="66"/><text x="98.8731%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (18 samples, 0.01%)</title><rect x="98.6586%" y="853" width="0.0133%" height="15" fill="rgb(226,155,13)" fg:x="133413" fg:w="18"/><text x="98.9086%" y="863.50"></text></g><g><title>coprocessor-node`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (14 samples, 0.01%)</title><rect x="98.6615%" y="837" width="0.0104%" height="15" fill="rgb(241,28,37)" fg:x="133417" fg:w="14"/><text x="98.9115%" y="847.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="98.6748%" y="805" width="0.0163%" height="15" fill="rgb(233,93,10)" fg:x="133435" fg:w="22"/><text x="98.9248%" y="815.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="98.6748%" y="789" width="0.0163%" height="15" fill="rgb(225,113,19)" fg:x="133435" fg:w="22"/><text x="98.9248%" y="799.50"></text></g><g><title>coprocessor-node`alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (24 samples, 0.02%)</title><rect x="98.6748%" y="837" width="0.0177%" height="15" fill="rgb(241,2,18)" fg:x="133435" fg:w="24"/><text x="98.9248%" y="847.50"></text></g><g><title>coprocessor-node`alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (24 samples, 0.02%)</title><rect x="98.6748%" y="821" width="0.0177%" height="15" fill="rgb(228,207,21)" fg:x="133435" fg:w="24"/><text x="98.9248%" y="831.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (470 samples, 0.35%)</title><rect x="98.3472%" y="885" width="0.3476%" height="15" fill="rgb(213,211,35)" fg:x="132992" fg:w="470"/><text x="98.5972%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (30 samples, 0.02%)</title><rect x="98.6726%" y="869" width="0.0222%" height="15" fill="rgb(209,83,10)" fg:x="133432" fg:w="30"/><text x="98.9226%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (29 samples, 0.02%)</title><rect x="98.6733%" y="853" width="0.0214%" height="15" fill="rgb(209,164,1)" fg:x="133433" fg:w="29"/><text x="98.9233%" y="863.50"></text></g><g><title>coprocessor-node`alloc::alloc::alloc (20 samples, 0.01%)</title><rect x="98.7022%" y="805" width="0.0148%" height="15" fill="rgb(213,184,43)" fg:x="133472" fg:w="20"/><text x="98.9522%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.01%)</title><rect x="98.7037%" y="789" width="0.0133%" height="15" fill="rgb(231,61,34)" fg:x="133474" fg:w="18"/><text x="98.9537%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (16 samples, 0.01%)</title><rect x="98.7051%" y="773" width="0.0118%" height="15" fill="rgb(235,75,3)" fg:x="133476" fg:w="16"/><text x="98.9551%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (15 samples, 0.01%)</title><rect x="98.7059%" y="757" width="0.0111%" height="15" fill="rgb(220,106,47)" fg:x="133477" fg:w="15"/><text x="98.9559%" y="767.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.02%)</title><rect x="98.6992%" y="837" width="0.0200%" height="15" fill="rgb(210,196,33)" fg:x="133468" fg:w="27"/><text x="98.9492%" y="847.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (26 samples, 0.02%)</title><rect x="98.7000%" y="821" width="0.0192%" height="15" fill="rgb(229,154,42)" fg:x="133469" fg:w="26"/><text x="98.9500%" y="831.50"></text></g><g><title>coprocessor-node`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.02%)</title><rect x="98.6963%" y="869" width="0.0244%" height="15" fill="rgb(228,114,26)" fg:x="133464" fg:w="33"/><text x="98.9463%" y="879.50"></text></g><g><title>coprocessor-node`alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (30 samples, 0.02%)</title><rect x="98.6985%" y="853" width="0.0222%" height="15" fill="rgb(208,144,1)" fg:x="133467" fg:w="30"/><text x="98.9485%" y="863.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.03%)</title><rect x="98.6948%" y="885" width="0.0311%" height="15" fill="rgb(239,112,37)" fg:x="133462" fg:w="42"/><text x="98.9448%" y="895.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (545 samples, 0.40%)</title><rect x="98.3383%" y="901" width="0.4030%" height="15" fill="rgb(210,96,50)" fg:x="132980" fg:w="545"/><text x="98.5883%" y="911.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (561 samples, 0.41%)</title><rect x="98.3354%" y="917" width="0.4149%" height="15" fill="rgb(222,178,2)" fg:x="132976" fg:w="561"/><text x="98.5854%" y="927.50"></text></g><g><title>coprocessor-node`&lt;risc0_binfmt::image::MemoryImage as core::clone::Clone&gt;::clone (567 samples, 0.42%)</title><rect x="98.3339%" y="981" width="0.4193%" height="15" fill="rgb(226,74,18)" fg:x="132974" fg:w="567"/><text x="98.5839%" y="991.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (566 samples, 0.42%)</title><rect x="98.3347%" y="965" width="0.4186%" height="15" fill="rgb(225,67,54)" fg:x="132975" fg:w="566"/><text x="98.5847%" y="975.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (566 samples, 0.42%)</title><rect x="98.3347%" y="949" width="0.4186%" height="15" fill="rgb(251,92,32)" fg:x="132975" fg:w="566"/><text x="98.5847%" y="959.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (566 samples, 0.42%)</title><rect x="98.3347%" y="933" width="0.4186%" height="15" fill="rgb(228,149,22)" fg:x="132975" fg:w="566"/><text x="98.5847%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (39 samples, 0.03%)</title><rect x="98.7717%" y="837" width="0.0288%" height="15" fill="rgb(243,54,13)" fg:x="133566" fg:w="39"/><text x="99.0217%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (47 samples, 0.03%)</title><rect x="98.7702%" y="853" width="0.0348%" height="15" fill="rgb(243,180,28)" fg:x="133564" fg:w="47"/><text x="99.0202%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::mem::replace (60 samples, 0.04%)</title><rect x="98.7621%" y="869" width="0.0444%" height="15" fill="rgb(208,167,24)" fg:x="133553" fg:w="60"/><text x="99.0121%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (68 samples, 0.05%)</title><rect x="98.7576%" y="901" width="0.0503%" height="15" fill="rgb(245,73,45)" fg:x="133547" fg:w="68"/><text x="99.0076%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (63 samples, 0.05%)</title><rect x="98.7613%" y="885" width="0.0466%" height="15" fill="rgb(237,203,48)" fg:x="133552" fg:w="63"/><text x="99.0113%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_small (48 samples, 0.04%)</title><rect x="98.8353%" y="821" width="0.0355%" height="15" fill="rgb(211,197,16)" fg:x="133652" fg:w="48"/><text x="99.0853%" y="831.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65 samples, 0.05%)</title><rect x="98.8249%" y="837" width="0.0481%" height="15" fill="rgb(243,99,51)" fg:x="133638" fg:w="65"/><text x="99.0749%" y="847.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_binfmt::image::MemoryImage&gt; (174 samples, 0.13%)</title><rect x="98.7532%" y="981" width="0.1287%" height="15" fill="rgb(215,123,29)" fg:x="133541" fg:w="174"/><text x="99.0032%" y="991.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (174 samples, 0.13%)</title><rect x="98.7532%" y="965" width="0.1287%" height="15" fill="rgb(239,186,37)" fg:x="133541" fg:w="174"/><text x="99.0032%" y="975.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (174 samples, 0.13%)</title><rect x="98.7532%" y="949" width="0.1287%" height="15" fill="rgb(252,136,39)" fg:x="133541" fg:w="174"/><text x="99.0032%" y="959.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (174 samples, 0.13%)</title><rect x="98.7532%" y="933" width="0.1287%" height="15" fill="rgb(223,213,32)" fg:x="133541" fg:w="174"/><text x="99.0032%" y="943.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (174 samples, 0.13%)</title><rect x="98.7532%" y="917" width="0.1287%" height="15" fill="rgb(233,115,5)" fg:x="133541" fg:w="174"/><text x="99.0032%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (100 samples, 0.07%)</title><rect x="98.8079%" y="901" width="0.0739%" height="15" fill="rgb(207,226,44)" fg:x="133615" fg:w="100"/><text x="99.0579%" y="911.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (85 samples, 0.06%)</title><rect x="98.8190%" y="885" width="0.0629%" height="15" fill="rgb(208,126,0)" fg:x="133630" fg:w="85"/><text x="99.0690%" y="895.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (80 samples, 0.06%)</title><rect x="98.8227%" y="869" width="0.0592%" height="15" fill="rgb(244,66,21)" fg:x="133635" fg:w="80"/><text x="99.0727%" y="879.50"></text></g><g><title>coprocessor-node`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.06%)</title><rect x="98.8227%" y="853" width="0.0592%" height="15" fill="rgb(222,97,12)" fg:x="133635" fg:w="80"/><text x="99.0727%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (15 samples, 0.01%)</title><rect x="98.9092%" y="789" width="0.0111%" height="15" fill="rgb(219,213,19)" fg:x="133752" fg:w="15"/><text x="99.1592%" y="799.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (44 samples, 0.03%)</title><rect x="98.8959%" y="805" width="0.0325%" height="15" fill="rgb(252,169,30)" fg:x="133734" fg:w="44"/><text x="99.1459%" y="815.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (52 samples, 0.04%)</title><rect x="98.8937%" y="821" width="0.0385%" height="15" fill="rgb(206,32,51)" fg:x="133731" fg:w="52"/><text x="99.1437%" y="831.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::mem::replace (62 samples, 0.05%)</title><rect x="98.8893%" y="837" width="0.0458%" height="15" fill="rgb(250,172,42)" fg:x="133725" fg:w="62"/><text x="99.1393%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (67 samples, 0.05%)</title><rect x="98.8871%" y="869" width="0.0495%" height="15" fill="rgb(209,34,43)" fg:x="133722" fg:w="67"/><text x="99.1371%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (65 samples, 0.05%)</title><rect x="98.8885%" y="853" width="0.0481%" height="15" fill="rgb(223,11,35)" fg:x="133724" fg:w="65"/><text x="99.1385%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free_small (44 samples, 0.03%)</title><rect x="98.9573%" y="789" width="0.0325%" height="15" fill="rgb(251,219,26)" fg:x="133817" fg:w="44"/><text x="99.2073%" y="799.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.04%)</title><rect x="98.9529%" y="805" width="0.0385%" height="15" fill="rgb(231,119,3)" fg:x="133811" fg:w="52"/><text x="99.2029%" y="815.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;risc0_zkvm::host::server::exec::executor::ExecutorImpl&gt;&gt; (164 samples, 0.12%)</title><rect x="98.8819%" y="981" width="0.1213%" height="15" fill="rgb(216,97,11)" fg:x="133715" fg:w="164"/><text x="99.1319%" y="991.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_circuit_rv32im::prove::emu::pager::PagedMemory&gt; (164 samples, 0.12%)</title><rect x="98.8819%" y="965" width="0.1213%" height="15" fill="rgb(223,59,9)" fg:x="133715" fg:w="164"/><text x="99.1319%" y="975.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;risc0_binfmt::image::MemoryImage&gt; (161 samples, 0.12%)</title><rect x="98.8841%" y="949" width="0.1191%" height="15" fill="rgb(233,93,31)" fg:x="133718" fg:w="161"/><text x="99.1341%" y="959.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (161 samples, 0.12%)</title><rect x="98.8841%" y="933" width="0.1191%" height="15" fill="rgb(239,81,33)" fg:x="133718" fg:w="161"/><text x="99.1341%" y="943.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.12%)</title><rect x="98.8841%" y="917" width="0.1191%" height="15" fill="rgb(213,120,34)" fg:x="133718" fg:w="161"/><text x="99.1341%" y="927.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u32,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (161 samples, 0.12%)</title><rect x="98.8841%" y="901" width="0.1191%" height="15" fill="rgb(243,49,53)" fg:x="133718" fg:w="161"/><text x="99.1341%" y="911.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.12%)</title><rect x="98.8841%" y="885" width="0.1191%" height="15" fill="rgb(247,216,33)" fg:x="133718" fg:w="161"/><text x="99.1341%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (90 samples, 0.07%)</title><rect x="98.9366%" y="869" width="0.0666%" height="15" fill="rgb(226,26,14)" fg:x="133789" fg:w="90"/><text x="99.1866%" y="879.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (78 samples, 0.06%)</title><rect x="98.9455%" y="853" width="0.0577%" height="15" fill="rgb(215,49,53)" fg:x="133801" fg:w="78"/><text x="99.1955%" y="863.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (75 samples, 0.06%)</title><rect x="98.9477%" y="837" width="0.0555%" height="15" fill="rgb(245,162,40)" fg:x="133804" fg:w="75"/><text x="99.1977%" y="847.50"></text></g><g><title>coprocessor-node`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.05%)</title><rect x="98.9492%" y="821" width="0.0540%" height="15" fill="rgb(229,68,17)" fg:x="133806" fg:w="73"/><text x="99.1992%" y="831.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::new (231 samples, 0.17%)</title><rect x="99.0046%" y="981" width="0.1708%" height="15" fill="rgb(213,182,10)" fg:x="133881" fg:w="231"/><text x="99.2546%" y="991.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::new (231 samples, 0.17%)</title><rect x="99.0046%" y="965" width="0.1708%" height="15" fill="rgb(245,125,30)" fg:x="133881" fg:w="231"/><text x="99.2546%" y="975.50"></text></g><g><title>coprocessor-node`alloc::vec::from_elem (231 samples, 0.17%)</title><rect x="99.0046%" y="949" width="0.1708%" height="15" fill="rgb(232,202,2)" fg:x="133881" fg:w="231"/><text x="99.2546%" y="959.50"></text></g><g><title>coprocessor-node`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (231 samples, 0.17%)</title><rect x="99.0046%" y="933" width="0.1708%" height="15" fill="rgb(237,140,51)" fg:x="133881" fg:w="231"/><text x="99.2546%" y="943.50"></text></g><g><title>coprocessor-node`alloc::vec::Vec&lt;T,A&gt;::extend_with (231 samples, 0.17%)</title><rect x="99.0046%" y="917" width="0.1708%" height="15" fill="rgb(236,157,25)" fg:x="133881" fg:w="231"/><text x="99.2546%" y="927.50"></text></g><g><title>coprocessor-node`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (68 samples, 0.05%)</title><rect x="99.1252%" y="901" width="0.0503%" height="15" fill="rgb(219,209,0)" fg:x="134044" fg:w="68"/><text x="99.3752%" y="911.50"></text></g><g><title>coprocessor-node`core::num::_&lt;impl usize&gt;::unchecked_add::precondition_check (27 samples, 0.02%)</title><rect x="99.1555%" y="885" width="0.0200%" height="15" fill="rgb(240,116,54)" fg:x="134085" fg:w="27"/><text x="99.4055%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (45 samples, 0.03%)</title><rect x="99.2435%" y="709" width="0.0333%" height="15" fill="rgb(216,10,36)" fg:x="134204" fg:w="45"/><text x="99.4935%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (56 samples, 0.04%)</title><rect x="99.2398%" y="725" width="0.0414%" height="15" fill="rgb(222,72,44)" fg:x="134199" fg:w="56"/><text x="99.4898%" y="735.50"></text></g><g><title>coprocessor-node`alloc::alloc::alloc (78 samples, 0.06%)</title><rect x="99.2243%" y="773" width="0.0577%" height="15" fill="rgb(232,159,9)" fg:x="134178" fg:w="78"/><text x="99.4743%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (67 samples, 0.05%)</title><rect x="99.2324%" y="757" width="0.0495%" height="15" fill="rgb(210,39,32)" fg:x="134189" fg:w="67"/><text x="99.4824%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (61 samples, 0.05%)</title><rect x="99.2368%" y="741" width="0.0451%" height="15" fill="rgb(216,194,45)" fg:x="134195" fg:w="61"/><text x="99.4868%" y="751.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.07%)</title><rect x="99.2176%" y="805" width="0.0703%" height="15" fill="rgb(218,18,35)" fg:x="134169" fg:w="95"/><text x="99.4676%" y="815.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (95 samples, 0.07%)</title><rect x="99.2176%" y="789" width="0.0703%" height="15" fill="rgb(207,83,51)" fg:x="134169" fg:w="95"/><text x="99.4676%" y="799.50"></text></g><g><title>coprocessor-node`alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (108 samples, 0.08%)</title><rect x="99.2102%" y="821" width="0.0799%" height="15" fill="rgb(225,63,43)" fg:x="134159" fg:w="108"/><text x="99.4602%" y="831.50"></text></g><g><title>coprocessor-node`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (126 samples, 0.09%)</title><rect x="99.2050%" y="837" width="0.0932%" height="15" fill="rgb(207,57,36)" fg:x="134152" fg:w="126"/><text x="99.4550%" y="847.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (154 samples, 0.11%)</title><rect x="99.2013%" y="853" width="0.1139%" height="15" fill="rgb(216,99,33)" fg:x="134147" fg:w="154"/><text x="99.4513%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.01%)</title><rect x="99.3019%" y="837" width="0.0133%" height="15" fill="rgb(225,42,16)" fg:x="134283" fg:w="18"/><text x="99.5519%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (16 samples, 0.01%)</title><rect x="99.3389%" y="837" width="0.0118%" height="15" fill="rgb(220,201,45)" fg:x="134333" fg:w="16"/><text x="99.5889%" y="847.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (47 samples, 0.03%)</title><rect x="99.3234%" y="853" width="0.0348%" height="15" fill="rgb(225,33,4)" fg:x="134312" fg:w="47"/><text x="99.5734%" y="863.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (247 samples, 0.18%)</title><rect x="99.1836%" y="869" width="0.1827%" height="15" fill="rgb(224,33,50)" fg:x="134123" fg:w="247"/><text x="99.4336%" y="879.50"></text></g><g><title>coprocessor-node`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="99.3685%" y="821" width="0.0104%" height="15" fill="rgb(246,198,51)" fg:x="134373" fg:w="14"/><text x="99.6185%" y="831.50"></text></g><g><title>coprocessor-node`alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="99.3685%" y="805" width="0.0104%" height="15" fill="rgb(205,22,4)" fg:x="134373" fg:w="14"/><text x="99.6185%" y="815.50"></text></g><g><title>coprocessor-node`alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (17 samples, 0.01%)</title><rect x="99.3670%" y="837" width="0.0126%" height="15" fill="rgb(206,3,8)" fg:x="134371" fg:w="17"/><text x="99.6170%" y="847.50"></text></g><g><title>coprocessor-node`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.01%)</title><rect x="99.3670%" y="853" width="0.0148%" height="15" fill="rgb(251,23,15)" fg:x="134371" fg:w="20"/><text x="99.6170%" y="863.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="99.3663%" y="869" width="0.0185%" height="15" fill="rgb(252,88,28)" fg:x="134370" fg:w="25"/><text x="99.6163%" y="879.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (283 samples, 0.21%)</title><rect x="99.1814%" y="885" width="0.2093%" height="15" fill="rgb(212,127,14)" fg:x="134120" fg:w="283"/><text x="99.4314%" y="895.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (291 samples, 0.22%)</title><rect x="99.1814%" y="901" width="0.2152%" height="15" fill="rgb(247,145,37)" fg:x="134120" fg:w="291"/><text x="99.4314%" y="911.50"></text></g><g><title>coprocessor-node`&lt;risc0_binfmt::image::MemoryImage as core::clone::Clone&gt;::clone (293 samples, 0.22%)</title><rect x="99.1806%" y="965" width="0.2167%" height="15" fill="rgb(209,117,53)" fg:x="134119" fg:w="293"/><text x="99.4306%" y="975.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (293 samples, 0.22%)</title><rect x="99.1806%" y="949" width="0.2167%" height="15" fill="rgb(212,90,42)" fg:x="134119" fg:w="293"/><text x="99.4306%" y="959.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (293 samples, 0.22%)</title><rect x="99.1806%" y="933" width="0.2167%" height="15" fill="rgb(218,164,37)" fg:x="134119" fg:w="293"/><text x="99.4306%" y="943.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (293 samples, 0.22%)</title><rect x="99.1806%" y="917" width="0.2167%" height="15" fill="rgb(246,65,34)" fg:x="134119" fg:w="293"/><text x="99.4306%" y="927.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::clear (19 samples, 0.01%)</title><rect x="99.4106%" y="949" width="0.0141%" height="15" fill="rgb(231,100,33)" fg:x="134430" fg:w="19"/><text x="99.6606%" y="959.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::clear (19 samples, 0.01%)</title><rect x="99.4106%" y="933" width="0.0141%" height="15" fill="rgb(228,126,14)" fg:x="134430" fg:w="19"/><text x="99.6606%" y="943.50"></text></g><g><title>coprocessor-node`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;risc0_circuit_rv32im::trace::TraceEvent,alloc::collections::btree::set_val::SetValZST&gt;&gt; (19 samples, 0.01%)</title><rect x="99.4106%" y="917" width="0.0141%" height="15" fill="rgb(215,173,21)" fg:x="134430" fg:w="19"/><text x="99.6606%" y="927.50"></text></g><g><title>coprocessor-node`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="99.4136%" y="901" width="0.0111%" height="15" fill="rgb(210,6,40)" fg:x="134434" fg:w="15"/><text x="99.6636%" y="911.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::advance (45 samples, 0.03%)</title><rect x="99.4054%" y="965" width="0.0333%" height="15" fill="rgb(212,48,18)" fg:x="134423" fg:w="45"/><text x="99.6554%" y="975.50"></text></g><g><title>coprocessor-node`&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (42 samples, 0.03%)</title><rect x="99.4387%" y="917" width="0.0311%" height="15" fill="rgb(230,214,11)" fg:x="134468" fg:w="42"/><text x="99.6887%" y="927.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::reset (190 samples, 0.14%)</title><rect x="99.4387%" y="965" width="0.1405%" height="15" fill="rgb(254,105,39)" fg:x="134468" fg:w="190"/><text x="99.6887%" y="975.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::clear (190 samples, 0.14%)</title><rect x="99.4387%" y="949" width="0.1405%" height="15" fill="rgb(245,158,5)" fg:x="134468" fg:w="190"/><text x="99.6887%" y="959.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::fill (190 samples, 0.14%)</title><rect x="99.4387%" y="933" width="0.1405%" height="15" fill="rgb(249,208,11)" fg:x="134468" fg:w="190"/><text x="99.6887%" y="943.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (148 samples, 0.11%)</title><rect x="99.4698%" y="917" width="0.1094%" height="15" fill="rgb(210,39,28)" fg:x="134510" fg:w="148"/><text x="99.7198%" y="927.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::get_system_state (17 samples, 0.01%)</title><rect x="99.5807%" y="949" width="0.0126%" height="15" fill="rgb(211,56,53)" fg:x="134660" fg:w="17"/><text x="99.8307%" y="959.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::compute_root_hash (17 samples, 0.01%)</title><rect x="99.5807%" y="933" width="0.0126%" height="15" fill="rgb(226,201,30)" fg:x="134660" fg:w="17"/><text x="99.8307%" y="943.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::hash_page_bytes (16 samples, 0.01%)</title><rect x="99.5814%" y="917" width="0.0118%" height="15" fill="rgb(239,101,34)" fg:x="134661" fg:w="16"/><text x="99.8314%" y="927.50"></text></g><g><title>coprocessor-node`&lt;risc0_zkp::core::hash::sha::cpu::Impl as risc0_zkp::core::hash::sha::Sha256&gt;::compress (16 samples, 0.01%)</title><rect x="99.5814%" y="901" width="0.0118%" height="15" fill="rgb(226,209,5)" fg:x="134661" fg:w="16"/><text x="99.8314%" y="911.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::for_each (17 samples, 0.01%)</title><rect x="99.6081%" y="869" width="0.0126%" height="15" fill="rgb(250,105,47)" fg:x="134697" fg:w="17"/><text x="99.8581%" y="879.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.01%)</title><rect x="99.6081%" y="853" width="0.0126%" height="15" fill="rgb(230,72,3)" fg:x="134697" fg:w="17"/><text x="99.8581%" y="863.50"></text></g><g><title>coprocessor-node`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.01%)</title><rect x="99.6081%" y="837" width="0.0126%" height="15" fill="rgb(232,218,39)" fg:x="134697" fg:w="17"/><text x="99.8581%" y="847.50"></text></g><g><title>coprocessor-node`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (19 samples, 0.01%)</title><rect x="99.6081%" y="885" width="0.0141%" height="15" fill="rgb(248,166,6)" fg:x="134697" fg:w="19"/><text x="99.8581%" y="895.50"></text></g><g><title>coprocessor-node`risc0_zkp::core::hash::sha::cpu::set_word (16 samples, 0.01%)</title><rect x="99.6258%" y="885" width="0.0118%" height="15" fill="rgb(247,89,20)" fg:x="134721" fg:w="16"/><text x="99.8758%" y="895.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256_digest_block_u32 (17 samples, 0.01%)</title><rect x="99.6517%" y="853" width="0.0126%" height="15" fill="rgb(248,130,54)" fg:x="134756" fg:w="17"/><text x="99.9017%" y="863.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::sha256_digest_round_x2 (31 samples, 0.02%)</title><rect x="99.6643%" y="853" width="0.0229%" height="15" fill="rgb(234,196,4)" fg:x="134773" fg:w="31"/><text x="99.9143%" y="863.50"></text></g><g><title>coprocessor-node`&lt;risc0_zkp::core::hash::sha::cpu::Impl as risc0_zkp::core::hash::sha::Sha256&gt;::compress (113 samples, 0.08%)</title><rect x="99.6066%" y="901" width="0.0836%" height="15" fill="rgb(250,143,31)" fg:x="134695" fg:w="113"/><text x="99.8566%" y="911.50"></text></g><g><title>coprocessor-node`sha2::sha256::compress256 (71 samples, 0.05%)</title><rect x="99.6376%" y="885" width="0.0525%" height="15" fill="rgb(211,110,34)" fg:x="134737" fg:w="71"/><text x="99.8876%" y="895.50"></text></g><g><title>coprocessor-node`sha2::sha256::soft::compress (70 samples, 0.05%)</title><rect x="99.6384%" y="869" width="0.0518%" height="15" fill="rgb(215,124,48)" fg:x="134738" fg:w="70"/><text x="99.8884%" y="879.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::hash_page (123 samples, 0.09%)</title><rect x="99.5999%" y="933" width="0.0910%" height="15" fill="rgb(216,46,13)" fg:x="134686" fg:w="123"/><text x="99.8499%" y="943.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::hash_page_bytes (122 samples, 0.09%)</title><rect x="99.6007%" y="917" width="0.0902%" height="15" fill="rgb(205,184,25)" fg:x="134687" fg:w="122"/><text x="99.8507%" y="927.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::commit (153 samples, 0.11%)</title><rect x="99.5792%" y="965" width="0.1131%" height="15" fill="rgb(228,1,10)" fg:x="134658" fg:w="153"/><text x="99.8292%" y="975.50"></text></g><g><title>coprocessor-node`risc0_binfmt::image::MemoryImage::update_page (125 samples, 0.09%)</title><rect x="99.5999%" y="949" width="0.0924%" height="15" fill="rgb(213,116,27)" fg:x="134686" fg:w="125"/><text x="99.8499%" y="959.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::Page::load (26 samples, 0.02%)</title><rect x="99.7057%" y="917" width="0.0192%" height="15" fill="rgb(241,95,50)" fg:x="134829" fg:w="26"/><text x="99.9557%" y="927.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::clone_from_slice (15 samples, 0.01%)</title><rect x="99.7138%" y="901" width="0.0111%" height="15" fill="rgb(238,48,32)" fg:x="134840" fg:w="15"/><text x="99.9638%" y="911.50"></text></g><g><title>coprocessor-node`&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (15 samples, 0.01%)</title><rect x="99.7138%" y="885" width="0.0111%" height="15" fill="rgb(235,113,49)" fg:x="134840" fg:w="15"/><text x="99.9638%" y="895.50"></text></g><g><title>coprocessor-node`core::slice::_&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.01%)</title><rect x="99.7146%" y="869" width="0.0104%" height="15" fill="rgb(205,127,43)" fg:x="134841" fg:w="14"/><text x="99.9646%" y="879.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::load_memory (54 samples, 0.04%)</title><rect x="99.6975%" y="949" width="0.0399%" height="15" fill="rgb(250,162,2)" fg:x="134818" fg:w="54"/><text x="99.9475%" y="959.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::load (54 samples, 0.04%)</title><rect x="99.6975%" y="933" width="0.0399%" height="15" fill="rgb(220,13,41)" fg:x="134818" fg:w="54"/><text x="99.9475%" y="943.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::load_page (17 samples, 0.01%)</title><rect x="99.7249%" y="917" width="0.0126%" height="15" fill="rgb(249,221,25)" fg:x="134855" fg:w="17"/><text x="99.9749%" y="927.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::on_insn_decoded (15 samples, 0.01%)</title><rect x="99.7375%" y="949" width="0.0111%" height="15" fill="rgb(215,208,19)" fg:x="134872" fg:w="15"/><text x="99.9875%" y="959.50"></text></g><g><title>coprocessor-node`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.01%)</title><rect x="99.7537%" y="901" width="0.0118%" height="15" fill="rgb(236,175,2)" fg:x="134894" fg:w="16"/><text x="100.0037%" y="911.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::Page::load (24 samples, 0.02%)</title><rect x="99.7656%" y="901" width="0.0177%" height="15" fill="rgb(241,52,2)" fg:x="134910" fg:w="24"/><text x="100.0156%" y="911.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::load (44 samples, 0.03%)</title><rect x="99.7530%" y="917" width="0.0325%" height="15" fill="rgb(248,140,14)" fg:x="134893" fg:w="44"/><text x="100.0030%" y="927.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::load_register (47 samples, 0.03%)</title><rect x="99.7530%" y="933" width="0.0348%" height="15" fill="rgb(253,22,42)" fg:x="134893" fg:w="47"/><text x="100.0030%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (52 samples, 0.04%)</title><rect x="99.8011%" y="853" width="0.0385%" height="15" fill="rgb(234,61,47)" fg:x="134958" fg:w="52"/><text x="100.0511%" y="863.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (61 samples, 0.05%)</title><rect x="99.7952%" y="901" width="0.0451%" height="15" fill="rgb(208,226,15)" fg:x="134950" fg:w="61"/><text x="100.0452%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (59 samples, 0.04%)</title><rect x="99.7966%" y="885" width="0.0436%" height="15" fill="rgb(217,221,4)" fg:x="134952" fg:w="59"/><text x="100.0466%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (55 samples, 0.04%)</title><rect x="99.7996%" y="869" width="0.0407%" height="15" fill="rgb(212,174,34)" fg:x="134956" fg:w="55"/><text x="100.0496%" y="879.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::Page::load (14 samples, 0.01%)</title><rect x="99.8417%" y="901" width="0.0104%" height="15" fill="rgb(253,83,4)" fg:x="135013" fg:w="14"/><text x="100.0917%" y="911.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::store_register (102 samples, 0.08%)</title><rect x="99.7878%" y="933" width="0.0754%" height="15" fill="rgb(250,195,49)" fg:x="134940" fg:w="102"/><text x="100.0378%" y="943.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::store (102 samples, 0.08%)</title><rect x="99.7878%" y="917" width="0.0754%" height="15" fill="rgb(241,192,25)" fg:x="134940" fg:w="102"/><text x="100.0378%" y="927.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::Page::store (15 samples, 0.01%)</title><rect x="99.8521%" y="901" width="0.0111%" height="15" fill="rgb(208,124,10)" fg:x="135027" fg:w="15"/><text x="100.1021%" y="911.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::rv32im::Emulator::step_compute (157 samples, 0.12%)</title><rect x="99.7486%" y="949" width="0.1161%" height="15" fill="rgb(222,33,0)" fg:x="134887" fg:w="157"/><text x="99.9986%" y="959.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (15 samples, 0.01%)</title><rect x="99.8832%" y="901" width="0.0111%" height="15" fill="rgb(234,209,28)" fg:x="135069" fg:w="15"/><text x="100.1332%" y="911.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.01%)</title><rect x="99.8832%" y="885" width="0.0111%" height="15" fill="rgb(224,11,23)" fg:x="135069" fg:w="15"/><text x="100.1332%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="99.8839%" y="869" width="0.0104%" height="15" fill="rgb(232,99,1)" fg:x="135070" fg:w="14"/><text x="100.1339%" y="879.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::rv32im::Emulator::step_load (48 samples, 0.04%)</title><rect x="99.8647%" y="949" width="0.0355%" height="15" fill="rgb(237,95,45)" fg:x="135044" fg:w="48"/><text x="100.1147%" y="959.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::store_register (25 samples, 0.02%)</title><rect x="99.8817%" y="933" width="0.0185%" height="15" fill="rgb(208,109,11)" fg:x="135067" fg:w="25"/><text x="100.1317%" y="943.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::store (24 samples, 0.02%)</title><rect x="99.8824%" y="917" width="0.0177%" height="15" fill="rgb(216,190,48)" fg:x="135068" fg:w="24"/><text x="100.1324%" y="927.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::load_register (15 samples, 0.01%)</title><rect x="99.9061%" y="933" width="0.0111%" height="15" fill="rgb(251,171,36)" fg:x="135100" fg:w="15"/><text x="100.1561%" y="943.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (16 samples, 0.01%)</title><rect x="99.9201%" y="885" width="0.0118%" height="15" fill="rgb(230,62,22)" fg:x="135119" fg:w="16"/><text x="100.1701%" y="895.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.01%)</title><rect x="99.9201%" y="869" width="0.0118%" height="15" fill="rgb(225,114,35)" fg:x="135119" fg:w="16"/><text x="100.1701%" y="879.50"></text></g><g><title>coprocessor-node`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.01%)</title><rect x="99.9209%" y="853" width="0.0111%" height="15" fill="rgb(215,118,42)" fg:x="135120" fg:w="15"/><text x="100.1709%" y="863.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::rv32im::Emulator::step_store (56 samples, 0.04%)</title><rect x="99.9002%" y="949" width="0.0414%" height="15" fill="rgb(243,119,21)" fg:x="135092" fg:w="56"/><text x="100.1502%" y="959.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::store_memory (33 samples, 0.02%)</title><rect x="99.9172%" y="933" width="0.0244%" height="15" fill="rgb(252,177,53)" fg:x="135115" fg:w="33"/><text x="100.1672%" y="943.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::raw_store_memory (33 samples, 0.02%)</title><rect x="99.9172%" y="917" width="0.0244%" height="15" fill="rgb(237,209,29)" fg:x="135115" fg:w="33"/><text x="100.1672%" y="927.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::pager::PagedMemory::store (33 samples, 0.02%)</title><rect x="99.9172%" y="901" width="0.0244%" height="15" fill="rgb(212,65,23)" fg:x="135115" fg:w="33"/><text x="100.1672%" y="911.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::store_region_into_guest (18 samples, 0.01%)</title><rect x="99.9475%" y="901" width="0.0133%" height="15" fill="rgb(230,222,46)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="911.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::store_region (18 samples, 0.01%)</title><rect x="99.9475%" y="885" width="0.0133%" height="15" fill="rgb(215,135,32)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="895.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::try_for_each (18 samples, 0.01%)</title><rect x="99.9475%" y="869" width="0.0133%" height="15" fill="rgb(246,101,22)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="879.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.01%)</title><rect x="99.9475%" y="853" width="0.0133%" height="15" fill="rgb(206,107,13)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="863.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.01%)</title><rect x="99.9475%" y="837" width="0.0133%" height="15" fill="rgb(250,100,44)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="847.50"></text></g><g><title>coprocessor-node`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (18 samples, 0.01%)</title><rect x="99.9475%" y="821" width="0.0133%" height="15" fill="rgb(231,147,38)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="831.50"></text></g><g><title>coprocessor-node`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (18 samples, 0.01%)</title><rect x="99.9475%" y="805" width="0.0133%" height="15" fill="rgb(229,8,40)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="815.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::store_region::_{{closure}} (18 samples, 0.01%)</title><rect x="99.9475%" y="789" width="0.0133%" height="15" fill="rgb(221,135,30)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="799.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::raw_store_u8 (18 samples, 0.01%)</title><rect x="99.9475%" y="773" width="0.0133%" height="15" fill="rgb(249,193,18)" fg:x="135156" fg:w="18"/><text x="100.1975%" y="783.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::ecall_sha (25 samples, 0.02%)</title><rect x="99.9431%" y="917" width="0.0185%" height="15" fill="rgb(209,133,39)" fg:x="135150" fg:w="25"/><text x="100.1931%" y="927.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::rv32im::Emulator::step_system (50 samples, 0.04%)</title><rect x="99.9416%" y="949" width="0.0370%" height="15" fill="rgb(232,100,14)" fg:x="135148" fg:w="50"/><text x="100.1916%" y="959.50"></text></g><g><title>coprocessor-node`&lt;risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt; as risc0_circuit_rv32im::prove::emu::rv32im::EmuContext&gt;::ecall (50 samples, 0.04%)</title><rect x="99.9416%" y="933" width="0.0370%" height="15" fill="rgb(224,185,1)" fg:x="135148" fg:w="50"/><text x="100.1916%" y="943.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::ecall_software (23 samples, 0.02%)</title><rect x="99.9615%" y="917" width="0.0170%" height="15" fill="rgb(223,139,8)" fg:x="135175" fg:w="23"/><text x="100.2115%" y="927.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::rv32im::Emulator::step (403 samples, 0.30%)</title><rect x="99.6931%" y="965" width="0.2980%" height="15" fill="rgb(232,213,38)" fg:x="134812" fg:w="403"/><text x="99.9431%" y="975.50"></text></g><g><title>coprocessor-node`risc0_circuit_rv32im::prove::emu::exec::Executor&lt;S&gt;::run (1,110 samples, 0.82%)</title><rect x="99.1755%" y="981" width="0.8208%" height="15" fill="rgb(207,94,22)" fg:x="134112" fg:w="1110"/><text x="99.4255%" y="991.50"></text></g><g><title>coprocessor-node`&lt;risc0_zkvm::host::client::prove::local::LocalProver as risc0_zkvm::host::client::prove::Executor&gt;::execute (133,968 samples, 99.07%)</title><rect x="0.9281%" y="1013" width="99.0690%" height="15" fill="rgb(219,183,54)" fg:x="1255" fg:w="133968"/><text x="1.1781%" y="1023.50">coprocessor-node`&lt;risc0_zkvm::host::client::prove::local::LocalProver as risc0_zkvm::host::client::prove::Executor&gt;::execute</text></g><g><title>coprocessor-node`risc0_zkvm::host::server::exec::executor::ExecutorImpl::run_with_callback (2,250 samples, 1.66%)</title><rect x="98.3332%" y="997" width="1.6639%" height="15" fill="rgb(216,185,54)" fg:x="132973" fg:w="2250"/><text x="98.5832%" y="1007.50"></text></g><g><title>all (135,227 samples, 100%)</title><rect x="0.0000%" y="1541" width="100.0000%" height="15" fill="rgb(254,217,39)" fg:x="0" fg:w="135227"/><text x="0.2500%" y="1551.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1525" width="99.9083%" height="15" fill="rgb(240,178,23)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1535.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1509" width="99.9083%" height="15" fill="rgb(218,11,47)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1519.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>coprocessor-node`std::sys::pal::unix::thread::Thread::new::thread_start (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1493" width="99.9083%" height="15" fill="rgb(218,51,51)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1503.50">coprocessor-node`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>coprocessor-node`core::ops::function::FnOnce::call_once{{vtable.shim}} (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1477" width="99.9083%" height="15" fill="rgb(238,126,27)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1487.50">coprocessor-node`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>coprocessor-node`std::thread::Builder::spawn_unchecked_::_{{closure}} (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1461" width="99.9083%" height="15" fill="rgb(249,202,22)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1471.50">coprocessor-node`std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>coprocessor-node`std::panicking::try (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1445" width="99.9083%" height="15" fill="rgb(254,195,49)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1455.50">coprocessor-node`std::panicking::try</text></g><g><title>coprocessor-node`__rust_try (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1429" width="99.9083%" height="15" fill="rgb(208,123,14)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1439.50">coprocessor-node`__rust_try</text></g><g><title>coprocessor-node`std::panicking::try::do_call (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1413" width="99.9083%" height="15" fill="rgb(224,200,8)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1423.50">coprocessor-node`std::panicking::try::do_call</text></g><g><title>coprocessor-node`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1397" width="99.9083%" height="15" fill="rgb(217,61,36)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1407.50">coprocessor-node`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>coprocessor-node`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1381" width="99.9083%" height="15" fill="rgb(206,35,45)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1391.50">coprocessor-node`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>coprocessor-node`std::sys_common::backtrace::__rust_begin_short_backtrace (135,103 samples, 99.91%)</title><rect x="0.0917%" y="1365" width="99.9083%" height="15" fill="rgb(217,65,33)" fg:x="124" fg:w="135103"/><text x="0.3417%" y="1375.50">coprocessor-node`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>coprocessor-node`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (135,010 samples, 99.84%)</title><rect x="0.1605%" y="1349" width="99.8395%" height="15" fill="rgb(222,158,48)" fg:x="217" fg:w="135010"/><text x="0.4105%" y="1359.50">coprocessor-node`tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>coprocessor-node`tokio::runtime::blocking::pool::Inner::run (135,010 samples, 99.84%)</title><rect x="0.1605%" y="1333" width="99.8395%" height="15" fill="rgb(254,2,54)" fg:x="217" fg:w="135010"/><text x="0.4105%" y="1343.50">coprocessor-node`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>coprocessor-node`tokio::runtime::blocking::pool::Task::run (135,009 samples, 99.84%)</title><rect x="0.1612%" y="1317" width="99.8388%" height="15" fill="rgb(250,143,38)" fg:x="218" fg:w="135009"/><text x="0.4112%" y="1327.50">coprocessor-node`tokio::runtime::blocking::pool::Task::run</text></g><g><title>coprocessor-node`tokio::runtime::task::UnownedTask&lt;S&gt;::run (135,009 samples, 99.84%)</title><rect x="0.1612%" y="1301" width="99.8388%" height="15" fill="rgb(248,25,0)" fg:x="218" fg:w="135009"/><text x="0.4112%" y="1311.50">coprocessor-node`tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>coprocessor-node`tokio::runtime::task::raw::RawTask::poll (135,009 samples, 99.84%)</title><rect x="0.1612%" y="1285" width="99.8388%" height="15" fill="rgb(206,152,27)" fg:x="218" fg:w="135009"/><text x="0.4112%" y="1295.50">coprocessor-node`tokio::runtime::task::raw::RawTask::poll</text></g><g><title>coprocessor-node`tokio::runtime::task::raw::poll (135,009 samples, 99.84%)</title><rect x="0.1612%" y="1269" width="99.8388%" height="15" fill="rgb(240,77,30)" fg:x="218" fg:w="135009"/><text x="0.4112%" y="1279.50">coprocessor-node`tokio::runtime::task::raw::poll</text></g><g><title>coprocessor-node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (135,009 samples, 99.84%)</title><rect x="0.1612%" y="1253" width="99.8388%" height="15" fill="rgb(231,5,3)" fg:x="218" fg:w="135009"/><text x="0.4112%" y="1263.50">coprocessor-node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>coprocessor-node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1237" width="99.8373%" height="15" fill="rgb(207,226,32)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1247.50">coprocessor-node`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>coprocessor-node`tokio::runtime::task::harness::poll_future (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1221" width="99.8373%" height="15" fill="rgb(222,207,47)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1231.50">coprocessor-node`tokio::runtime::task::harness::poll_future</text></g><g><title>coprocessor-node`std::panic::catch_unwind (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1205" width="99.8373%" height="15" fill="rgb(229,115,45)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1215.50">coprocessor-node`std::panic::catch_unwind</text></g><g><title>coprocessor-node`std::panicking::try (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1189" width="99.8373%" height="15" fill="rgb(224,191,6)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1199.50">coprocessor-node`std::panicking::try</text></g><g><title>coprocessor-node`__rust_try (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1173" width="99.8373%" height="15" fill="rgb(230,227,24)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1183.50">coprocessor-node`__rust_try</text></g><g><title>coprocessor-node`std::panicking::try::do_call (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1157" width="99.8373%" height="15" fill="rgb(228,80,19)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1167.50">coprocessor-node`std::panicking::try::do_call</text></g><g><title>coprocessor-node`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1141" width="99.8373%" height="15" fill="rgb(247,229,0)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1151.50">coprocessor-node`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>coprocessor-node`tokio::runtime::task::harness::poll_future::_{{closure}} (135,007 samples, 99.84%)</title><rect x="0.1627%" y="1125" width="99.8373%" height="15" fill="rgb(237,194,15)" fg:x="220" fg:w="135007"/><text x="0.4127%" y="1135.50">coprocessor-node`tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>coprocessor-node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (135,006 samples, 99.84%)</title><rect x="0.1634%" y="1109" width="99.8366%" height="15" fill="rgb(219,203,20)" fg:x="221" fg:w="135006"/><text x="0.4134%" y="1119.50">coprocessor-node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>coprocessor-node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (135,006 samples, 99.84%)</title><rect x="0.1634%" y="1093" width="99.8366%" height="15" fill="rgb(234,128,8)" fg:x="221" fg:w="135006"/><text x="0.4134%" y="1103.50">coprocessor-node`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>coprocessor-node`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (135,006 samples, 99.84%)</title><rect x="0.1634%" y="1077" width="99.8366%" height="15" fill="rgb(248,202,8)" fg:x="221" fg:w="135006"/><text x="0.4134%" y="1087.50">coprocessor-node`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>coprocessor-node`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (135,006 samples, 99.84%)</title><rect x="0.1634%" y="1061" width="99.8366%" height="15" fill="rgb(206,104,37)" fg:x="221" fg:w="135006"/><text x="0.4134%" y="1071.50">coprocessor-node`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>coprocessor-node`zkvm_executor::service::ZkvmExecutorService&lt;S&gt;::execute_offchain_job::_{{closure}}::_{{closure}} (133,972 samples, 99.07%)</title><rect x="0.9281%" y="1045" width="99.0719%" height="15" fill="rgb(223,8,27)" fg:x="1255" fg:w="133972"/><text x="1.1781%" y="1055.50">coprocessor-node`zkvm_executor::service::ZkvmExecutorService&lt;S&gt;::execute_offchain_job::_{{closure}}::_{{closure}}</text></g><g><title>coprocessor-node`&lt;zkvm::Risc0 as zkvm::Zkvm&gt;::execute_offchain_job (133,972 samples, 99.07%)</title><rect x="0.9281%" y="1029" width="99.0719%" height="15" fill="rgb(216,217,28)" fg:x="1255" fg:w="133972"/><text x="1.1781%" y="1039.50">coprocessor-node`&lt;zkvm::Risc0 as zkvm::Zkvm&gt;::execute_offchain_job</text></g></svg></svg>